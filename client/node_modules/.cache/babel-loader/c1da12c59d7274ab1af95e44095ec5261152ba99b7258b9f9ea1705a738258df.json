{"ast":null,"code":"import React from 'react';\nimport { getToastIndex } from '../utilities/getToastIndex';\nimport { hasToast } from '../utilities/hasToast';\nimport { removeToast } from '../utilities/removeToast';\nimport { ToasterContext } from './ToasterContext';\nimport { ToastsContext } from './ToastsContext';\nexport const ToasterProvider = React.forwardRef(function ToasterProvider(_ref, ref) {\n  let {\n    children\n  } = _ref;\n  const [toasts, setToasts] = React.useState([]);\n  const add = React.useCallback(toast => {\n    const {\n      name\n    } = toast;\n    setToasts(toasts => {\n      let nextToasts = toasts;\n      if (hasToast(toasts, name)) {\n        nextToasts = removeToast(toasts, name);\n      }\n      return [...nextToasts, Object.assign(Object.assign({}, toast), {\n        addedAt: Date.now(),\n        ref: React.createRef()\n      })];\n    });\n  }, []);\n  const remove = React.useCallback(toastName => {\n    setToasts(toasts => {\n      return removeToast(toasts, toastName);\n    });\n  }, []);\n  const removeAll = React.useCallback(() => {\n    setToasts(() => []);\n  }, []);\n  const update = React.useCallback((toastName, override) => {\n    setToasts(toasts => {\n      if (!hasToast(toasts, toastName)) {\n        return toasts;\n      }\n      const index = getToastIndex(toasts, toastName);\n      return [...toasts.slice(0, index), Object.assign(Object.assign({}, toasts[index]), override), ...toasts.slice(index + 1)];\n    });\n  }, []);\n  const toastsRef = React.useRef(toasts);\n  React.useEffect(() => {\n    toastsRef.current = toasts;\n  }, [toasts]);\n  const has = React.useCallback(toastName => {\n    return toastsRef.current ? hasToast(toastsRef.current, toastName) : false;\n  }, []);\n  const toasterContext = React.useMemo(() => {\n    return {\n      add,\n      remove,\n      removeAll,\n      update,\n      has\n    };\n  }, [add, remove, removeAll, update, has]);\n  React.useImperativeHandle(ref, () => ({\n    add,\n    remove,\n    removeAll,\n    update,\n    has\n  }));\n  return React.createElement(ToasterContext.Provider, {\n    value: toasterContext\n  }, React.createElement(ToastsContext.Provider, {\n    value: toasts\n  }, children));\n});\nToasterProvider.displayName = 'ToasterProvider';","map":{"version":3,"names":["React","getToastIndex","hasToast","removeToast","ToasterContext","ToastsContext","ToasterProvider","forwardRef","_ref","ref","children","toasts","setToasts","useState","add","useCallback","toast","name","nextToasts","Object","assign","addedAt","Date","now","createRef","remove","toastName","removeAll","update","override","index","slice","toastsRef","useRef","useEffect","current","has","toasterContext","useMemo","useImperativeHandle","createElement","Provider","value","displayName"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/Toaster/Provider/ToasterProvider.js"],"sourcesContent":["import React from 'react';\nimport { getToastIndex } from '../utilities/getToastIndex';\nimport { hasToast } from '../utilities/hasToast';\nimport { removeToast } from '../utilities/removeToast';\nimport { ToasterContext } from './ToasterContext';\nimport { ToastsContext } from './ToastsContext';\nexport const ToasterProvider = React.forwardRef(function ToasterProvider({ children }, ref) {\n    const [toasts, setToasts] = React.useState([]);\n    const add = React.useCallback((toast) => {\n        const { name } = toast;\n        setToasts((toasts) => {\n            let nextToasts = toasts;\n            if (hasToast(toasts, name)) {\n                nextToasts = removeToast(toasts, name);\n            }\n            return [\n                ...nextToasts,\n                Object.assign(Object.assign({}, toast), { addedAt: Date.now(), ref: React.createRef() }),\n            ];\n        });\n    }, []);\n    const remove = React.useCallback((toastName) => {\n        setToasts((toasts) => {\n            return removeToast(toasts, toastName);\n        });\n    }, []);\n    const removeAll = React.useCallback(() => {\n        setToasts(() => []);\n    }, []);\n    const update = React.useCallback((toastName, override) => {\n        setToasts((toasts) => {\n            if (!hasToast(toasts, toastName)) {\n                return toasts;\n            }\n            const index = getToastIndex(toasts, toastName);\n            return [\n                ...toasts.slice(0, index),\n                Object.assign(Object.assign({}, toasts[index]), override),\n                ...toasts.slice(index + 1),\n            ];\n        });\n    }, []);\n    const toastsRef = React.useRef(toasts);\n    React.useEffect(() => {\n        toastsRef.current = toasts;\n    }, [toasts]);\n    const has = React.useCallback((toastName) => {\n        return toastsRef.current ? hasToast(toastsRef.current, toastName) : false;\n    }, []);\n    const toasterContext = React.useMemo(() => {\n        return {\n            add,\n            remove,\n            removeAll,\n            update,\n            has,\n        };\n    }, [add, remove, removeAll, update, has]);\n    React.useImperativeHandle(ref, () => ({\n        add,\n        remove,\n        removeAll,\n        update,\n        has,\n    }));\n    return (React.createElement(ToasterContext.Provider, { value: toasterContext },\n        React.createElement(ToastsContext.Provider, { value: toasts }, children)));\n});\nToasterProvider.displayName = 'ToasterProvider';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}