{"ast":null,"code":"import React from 'react';\nimport { Select } from '../../../Select';\nimport { getNumberOfPages } from '../../utils';\nexport const PaginationPageSizer = _ref => {\n  let {\n    onUpdate,\n    pageSize,\n    size,\n    page,\n    pageSizeOptions,\n    total,\n    className\n  } = _ref;\n  const options = pageSizeOptions.map(pageSizeOption => ({\n    value: String(pageSizeOption),\n    content: pageSizeOption\n  }));\n  const handleUpdate = _ref2 => {\n    let [newPageSizeOnUpdate] = _ref2;\n    const newPageSize = Number(newPageSizeOnUpdate);\n    const numberOfPages = getNumberOfPages(newPageSize, total);\n    const hasUpperLimit = numberOfPages > 0;\n    if (!hasUpperLimit) {\n      onUpdate(1, newPageSize);\n      return;\n    }\n    const newPage = page > numberOfPages ? numberOfPages : page;\n    onUpdate(newPage, newPageSize);\n  };\n  return React.createElement(Select, {\n    className: className,\n    size: size,\n    onUpdate: handleUpdate,\n    options: options,\n    value: [String(pageSize)]\n  });\n};","map":{"version":3,"names":["React","Select","getNumberOfPages","PaginationPageSizer","_ref","onUpdate","pageSize","size","page","pageSizeOptions","total","className","options","map","pageSizeOption","value","String","content","handleUpdate","_ref2","newPageSizeOnUpdate","newPageSize","Number","numberOfPages","hasUpperLimit","newPage","createElement"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/Pagination/components/PaginationPageSizer/PaginationPageSizer.js"],"sourcesContent":["import React from 'react';\nimport { Select } from '../../../Select';\nimport { getNumberOfPages } from '../../utils';\nexport const PaginationPageSizer = ({ onUpdate, pageSize, size, page, pageSizeOptions, total, className, }) => {\n    const options = pageSizeOptions.map((pageSizeOption) => ({\n        value: String(pageSizeOption),\n        content: pageSizeOption,\n    }));\n    const handleUpdate = ([newPageSizeOnUpdate]) => {\n        const newPageSize = Number(newPageSizeOnUpdate);\n        const numberOfPages = getNumberOfPages(newPageSize, total);\n        const hasUpperLimit = numberOfPages > 0;\n        if (!hasUpperLimit) {\n            onUpdate(1, newPageSize);\n            return;\n        }\n        const newPage = page > numberOfPages ? numberOfPages : page;\n        onUpdate(newPage, newPageSize);\n    };\n    return (React.createElement(Select, { className: className, size: size, onUpdate: handleUpdate, options: options, value: [String(pageSize)] }));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,gBAAgB,QAAQ,aAAa;AAC9C,OAAO,MAAMC,mBAAmB,GAAGC,IAAA,IAA4E;EAAA,IAA3E;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,IAAI;IAAEC,eAAe;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAAP,IAAA;EACtG,MAAMQ,OAAO,GAAGH,eAAe,CAACI,GAAG,CAAEC,cAAc,KAAM;IACrDC,KAAK,EAAEC,MAAM,CAACF,cAAc,CAAC;IAC7BG,OAAO,EAAEH;EACb,CAAC,CAAC,CAAC;EACH,MAAMI,YAAY,GAAGC,KAAA,IAA2B;IAAA,IAA1B,CAACC,mBAAmB,CAAC,GAAAD,KAAA;IACvC,MAAME,WAAW,GAAGC,MAAM,CAACF,mBAAmB,CAAC;IAC/C,MAAMG,aAAa,GAAGrB,gBAAgB,CAACmB,WAAW,EAAEX,KAAK,CAAC;IAC1D,MAAMc,aAAa,GAAGD,aAAa,GAAG,CAAC;IACvC,IAAI,CAACC,aAAa,EAAE;MAChBnB,QAAQ,CAAC,CAAC,EAAEgB,WAAW,CAAC;MACxB;IACJ;IACA,MAAMI,OAAO,GAAGjB,IAAI,GAAGe,aAAa,GAAGA,aAAa,GAAGf,IAAI;IAC3DH,QAAQ,CAACoB,OAAO,EAAEJ,WAAW,CAAC;EAClC,CAAC;EACD,OAAQrB,KAAK,CAAC0B,aAAa,CAACzB,MAAM,EAAE;IAAEU,SAAS,EAAEA,SAAS;IAAEJ,IAAI,EAAEA,IAAI;IAAEF,QAAQ,EAAEa,YAAY;IAAEN,OAAO,EAAEA,OAAO;IAAEG,KAAK,EAAE,CAACC,MAAM,CAACV,QAAQ,CAAC;EAAE,CAAC,CAAC;AAClJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}