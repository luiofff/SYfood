{"ast":null,"code":"import React from 'react';\nimport { useForkRef, useUniqId } from '../../../hooks';\nimport { blockNew } from '../../utils/cn';\nimport { ClearButton, mapTextInputSizeToButtonSize } from '../common';\nimport { OuterAdditionalContent } from '../common/OuterAdditionalContent/OuterAdditionalContent';\nimport { errorPropsMapper, getInputControlState, prepareAutoComplete } from '../utils';\nimport { TextAreaControl } from './TextAreaControl';\nimport './TextArea.css';\nconst b = blockNew('text-area');\n// eslint-disable-next-line complexity\nexport const TextArea = React.forwardRef(function TextArea(props, ref) {\n  const {\n    view = 'normal',\n    size = 'm',\n    pin = 'round-round',\n    name,\n    value,\n    defaultValue,\n    disabled = false,\n    hasClear = false,\n    error,\n    errorMessage: errorMessageProp,\n    validationState: validationStateProp,\n    autoComplete,\n    id: originalId,\n    tabIndex,\n    style,\n    className,\n    qa,\n    controlProps,\n    note,\n    onUpdate,\n    onChange\n  } = props;\n  const {\n    errorMessage,\n    validationState\n  } = errorPropsMapper({\n    error,\n    errorMessage: errorMessageProp,\n    validationState: validationStateProp\n  });\n  const [uncontrolledValue, setUncontrolledValue] = React.useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : '');\n  const innerControlRef = React.useRef(null);\n  const [hasVerticalScrollbar, setHasVerticalScrollbar] = React.useState(false);\n  const state = getInputControlState(validationState);\n  const handleRef = useForkRef(props.controlRef, innerControlRef);\n  const innerId = useUniqId();\n  const isControlled = value !== undefined;\n  const inputValue = isControlled ? value : uncontrolledValue;\n  const isErrorMsgVisible = validationState === 'invalid' && Boolean(errorMessage);\n  const isClearControlVisible = Boolean(hasClear && !disabled && inputValue);\n  const id = originalId || innerId;\n  const errorMessageId = useUniqId();\n  const noteId = useUniqId();\n  const ariaDescribedBy = [controlProps === null || controlProps === void 0 ? void 0 : controlProps['aria-describedby'], note ? noteId : undefined, isErrorMsgVisible ? errorMessageId : undefined].filter(Boolean).join(' ');\n  const commonProps = {\n    id,\n    tabIndex,\n    name,\n    onChange(event) {\n      const newValue = event.target.value;\n      if (!isControlled) {\n        setUncontrolledValue(newValue);\n      }\n      if (onChange) {\n        onChange(event);\n      }\n      if (onUpdate) {\n        onUpdate(newValue);\n      }\n    },\n    autoComplete: prepareAutoComplete(autoComplete),\n    controlProps: Object.assign(Object.assign({}, controlProps), {\n      'aria-describedby': ariaDescribedBy || undefined,\n      'aria-invalid': validationState === 'invalid' || undefined\n    })\n  };\n  const handleClear = event => {\n    const control = innerControlRef.current;\n    if (control) {\n      control.focus();\n      const syntheticEvent = Object.create(event);\n      syntheticEvent.target = control;\n      syntheticEvent.currentTarget = control;\n      control.value = '';\n      if (onChange) {\n        onChange(syntheticEvent);\n      }\n      if (onUpdate) {\n        onUpdate('');\n      }\n    }\n    if (!isControlled) {\n      setUncontrolledValue('');\n    }\n  };\n  React.useEffect(() => {\n    const control = innerControlRef.current;\n    if (control) {\n      const currHasVerticalScrollbar = control.scrollHeight > control.clientHeight;\n      if (hasVerticalScrollbar !== currHasVerticalScrollbar) {\n        setHasVerticalScrollbar(currHasVerticalScrollbar);\n      }\n    }\n  }, [inputValue, hasVerticalScrollbar]);\n  return React.createElement(\"span\", {\n    ref: ref,\n    style: style,\n    className: b({\n      view,\n      size,\n      disabled,\n      state,\n      pin: view === 'clear' ? undefined : pin,\n      'has-clear': isClearControlVisible,\n      'has-scrollbar': hasVerticalScrollbar\n    }, className),\n    \"data-qa\": qa\n  }, React.createElement(\"span\", {\n    className: b('content')\n  }, React.createElement(TextAreaControl, Object.assign({}, props, commonProps, {\n    controlRef: handleRef\n  })), isClearControlVisible && React.createElement(ClearButton, {\n    className: b('clear', {\n      size\n    }),\n    size: mapTextInputSizeToButtonSize(size),\n    onClick: handleClear\n  })), React.createElement(OuterAdditionalContent, {\n    errorMessage: isErrorMsgVisible ? errorMessage : null,\n    errorMessageId: errorMessageId,\n    note: note,\n    noteId: noteId\n  }));\n});","map":{"version":3,"names":["React","useForkRef","useUniqId","blockNew","ClearButton","mapTextInputSizeToButtonSize","OuterAdditionalContent","errorPropsMapper","getInputControlState","prepareAutoComplete","TextAreaControl","b","TextArea","forwardRef","props","ref","view","size","pin","name","value","defaultValue","disabled","hasClear","error","errorMessage","errorMessageProp","validationState","validationStateProp","autoComplete","id","originalId","tabIndex","style","className","qa","controlProps","note","onUpdate","onChange","uncontrolledValue","setUncontrolledValue","useState","innerControlRef","useRef","hasVerticalScrollbar","setHasVerticalScrollbar","state","handleRef","controlRef","innerId","isControlled","undefined","inputValue","isErrorMsgVisible","Boolean","isClearControlVisible","errorMessageId","noteId","ariaDescribedBy","filter","join","commonProps","event","newValue","target","Object","assign","handleClear","control","current","focus","syntheticEvent","create","currentTarget","useEffect","currHasVerticalScrollbar","scrollHeight","clientHeight","createElement","onClick"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/controls/TextArea/TextArea.js"],"sourcesContent":["import React from 'react';\nimport { useForkRef, useUniqId } from '../../../hooks';\nimport { blockNew } from '../../utils/cn';\nimport { ClearButton, mapTextInputSizeToButtonSize } from '../common';\nimport { OuterAdditionalContent } from '../common/OuterAdditionalContent/OuterAdditionalContent';\nimport { errorPropsMapper, getInputControlState, prepareAutoComplete } from '../utils';\nimport { TextAreaControl } from './TextAreaControl';\nimport './TextArea.css';\nconst b = blockNew('text-area');\n// eslint-disable-next-line complexity\nexport const TextArea = React.forwardRef(function TextArea(props, ref) {\n    const { view = 'normal', size = 'm', pin = 'round-round', name, value, defaultValue, disabled = false, hasClear = false, error, errorMessage: errorMessageProp, validationState: validationStateProp, autoComplete, id: originalId, tabIndex, style, className, qa, controlProps, note, onUpdate, onChange, } = props;\n    const { errorMessage, validationState } = errorPropsMapper({\n        error,\n        errorMessage: errorMessageProp,\n        validationState: validationStateProp,\n    });\n    const [uncontrolledValue, setUncontrolledValue] = React.useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : '');\n    const innerControlRef = React.useRef(null);\n    const [hasVerticalScrollbar, setHasVerticalScrollbar] = React.useState(false);\n    const state = getInputControlState(validationState);\n    const handleRef = useForkRef(props.controlRef, innerControlRef);\n    const innerId = useUniqId();\n    const isControlled = value !== undefined;\n    const inputValue = isControlled ? value : uncontrolledValue;\n    const isErrorMsgVisible = validationState === 'invalid' && Boolean(errorMessage);\n    const isClearControlVisible = Boolean(hasClear && !disabled && inputValue);\n    const id = originalId || innerId;\n    const errorMessageId = useUniqId();\n    const noteId = useUniqId();\n    const ariaDescribedBy = [\n        controlProps === null || controlProps === void 0 ? void 0 : controlProps['aria-describedby'],\n        note ? noteId : undefined,\n        isErrorMsgVisible ? errorMessageId : undefined,\n    ]\n        .filter(Boolean)\n        .join(' ');\n    const commonProps = {\n        id,\n        tabIndex,\n        name,\n        onChange(event) {\n            const newValue = event.target.value;\n            if (!isControlled) {\n                setUncontrolledValue(newValue);\n            }\n            if (onChange) {\n                onChange(event);\n            }\n            if (onUpdate) {\n                onUpdate(newValue);\n            }\n        },\n        autoComplete: prepareAutoComplete(autoComplete),\n        controlProps: Object.assign(Object.assign({}, controlProps), { 'aria-describedby': ariaDescribedBy || undefined, 'aria-invalid': validationState === 'invalid' || undefined }),\n    };\n    const handleClear = (event) => {\n        const control = innerControlRef.current;\n        if (control) {\n            control.focus();\n            const syntheticEvent = Object.create(event);\n            syntheticEvent.target = control;\n            syntheticEvent.currentTarget = control;\n            control.value = '';\n            if (onChange) {\n                onChange(syntheticEvent);\n            }\n            if (onUpdate) {\n                onUpdate('');\n            }\n        }\n        if (!isControlled) {\n            setUncontrolledValue('');\n        }\n    };\n    React.useEffect(() => {\n        const control = innerControlRef.current;\n        if (control) {\n            const currHasVerticalScrollbar = control.scrollHeight > control.clientHeight;\n            if (hasVerticalScrollbar !== currHasVerticalScrollbar) {\n                setHasVerticalScrollbar(currHasVerticalScrollbar);\n            }\n        }\n    }, [inputValue, hasVerticalScrollbar]);\n    return (React.createElement(\"span\", { ref: ref, style: style, className: b({\n            view,\n            size,\n            disabled,\n            state,\n            pin: view === 'clear' ? undefined : pin,\n            'has-clear': isClearControlVisible,\n            'has-scrollbar': hasVerticalScrollbar,\n        }, className), \"data-qa\": qa },\n        React.createElement(\"span\", { className: b('content') },\n            React.createElement(TextAreaControl, Object.assign({}, props, commonProps, { controlRef: handleRef })),\n            isClearControlVisible && (React.createElement(ClearButton, { className: b('clear', { size }), size: mapTextInputSizeToButtonSize(size), onClick: handleClear }))),\n        React.createElement(OuterAdditionalContent, { errorMessage: isErrorMsgVisible ? errorMessage : null, errorMessageId: errorMessageId, note: note, noteId: noteId })));\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}