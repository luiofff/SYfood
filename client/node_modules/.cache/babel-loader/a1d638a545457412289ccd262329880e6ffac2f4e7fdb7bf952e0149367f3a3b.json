{"ast":null,"code":"import React from 'react';\nimport { Envelope } from '@gravity-ui/icons';\nimport { Icon } from '../Icon';\nimport { PersonaWrap } from '../PersonaWrap';\nimport i18n from './i18n';\nimport { extractTextValue, extractTextView, getTwoLetters } from './utils';\nexport function Persona(_ref) {\n  let {\n    size = 's',\n    theme = 'default',\n    hasBorder = theme === 'default',\n    type = 'person',\n    onClick,\n    onClose,\n    text,\n    image,\n    className,\n    style\n  } = _ref;\n  const textValue = extractTextValue(text);\n  const textView = extractTextView(text);\n  const closeButtonAriaAttributes = {\n    'aria-label': i18n('label_remove-button', {\n      persona: textValue\n    })\n  };\n  let avatar;\n  switch (type) {\n    case 'person':\n      avatar = image ? React.createElement(\"img\", {\n        alt: '',\n        src: image\n      }) : React.createElement(\"span\", null, getTwoLetters(textValue));\n      break;\n    case 'email':\n      avatar = React.createElement(Icon, {\n        data: Envelope,\n        size: 14\n      });\n      break;\n    case 'empty':\n      avatar = null;\n      break;\n  }\n  const handleClick = React.useCallback(() => {\n    onClick === null || onClick === void 0 ? void 0 : onClick(textValue);\n  }, [textValue, onClick]);\n  const handleClose = React.useCallback(() => {\n    onClose === null || onClose === void 0 ? void 0 : onClose(textValue);\n  }, [textValue, onClose]);\n  return React.createElement(PersonaWrap, {\n    size: size,\n    theme: hasBorder ? 'default' : 'clear',\n    isEmpty: type === 'empty',\n    onClick: onClick && handleClick,\n    onClose: onClose && handleClose,\n    avatar: avatar,\n    className: className,\n    style: style,\n    closeButtonAriaAttributes: closeButtonAriaAttributes\n  }, textView);\n}\nPersona.displayName = 'Persona';","map":{"version":3,"names":["React","Envelope","Icon","PersonaWrap","i18n","extractTextValue","extractTextView","getTwoLetters","Persona","_ref","size","theme","hasBorder","type","onClick","onClose","text","image","className","style","textValue","textView","closeButtonAriaAttributes","persona","avatar","createElement","alt","src","data","handleClick","useCallback","handleClose","isEmpty","displayName"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/Persona/Persona.js"],"sourcesContent":["import React from 'react';\nimport { Envelope } from '@gravity-ui/icons';\nimport { Icon } from '../Icon';\nimport { PersonaWrap } from '../PersonaWrap';\nimport i18n from './i18n';\nimport { extractTextValue, extractTextView, getTwoLetters } from './utils';\nexport function Persona({ size = 's', theme = 'default', hasBorder = theme === 'default', type = 'person', onClick, onClose, text, image, className, style, }) {\n    const textValue = extractTextValue(text);\n    const textView = extractTextView(text);\n    const closeButtonAriaAttributes = {\n        'aria-label': i18n('label_remove-button', { persona: textValue }),\n    };\n    let avatar;\n    switch (type) {\n        case 'person':\n            avatar = image ? React.createElement(\"img\", { alt: '', src: image }) : React.createElement(\"span\", null, getTwoLetters(textValue));\n            break;\n        case 'email':\n            avatar = React.createElement(Icon, { data: Envelope, size: 14 });\n            break;\n        case 'empty':\n            avatar = null;\n            break;\n    }\n    const handleClick = React.useCallback(() => {\n        onClick === null || onClick === void 0 ? void 0 : onClick(textValue);\n    }, [textValue, onClick]);\n    const handleClose = React.useCallback(() => {\n        onClose === null || onClose === void 0 ? void 0 : onClose(textValue);\n    }, [textValue, onClose]);\n    return (React.createElement(PersonaWrap, { size: size, theme: hasBorder ? 'default' : 'clear', isEmpty: type === 'empty', onClick: onClick && handleClick, onClose: onClose && handleClose, avatar: avatar, className: className, style: style, closeButtonAriaAttributes: closeButtonAriaAttributes }, textView));\n}\nPersona.displayName = 'Persona';\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,IAAI,QAAQ,SAAS;AAC9B,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,gBAAgB,EAAEC,eAAe,EAAEC,aAAa,QAAQ,SAAS;AAC1E,OAAO,SAASC,OAAOA,CAAAC,IAAA,EAAwI;EAAA,IAAvI;IAAEC,IAAI,GAAG,GAAG;IAAEC,KAAK,GAAG,SAAS;IAAEC,SAAS,GAAGD,KAAK,KAAK,SAAS;IAAEE,IAAI,GAAG,QAAQ;IAAEC,OAAO;IAAEC,OAAO;IAAEC,IAAI;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAAV,IAAA;EACzJ,MAAMW,SAAS,GAAGf,gBAAgB,CAACW,IAAI,CAAC;EACxC,MAAMK,QAAQ,GAAGf,eAAe,CAACU,IAAI,CAAC;EACtC,MAAMM,yBAAyB,GAAG;IAC9B,YAAY,EAAElB,IAAI,CAAC,qBAAqB,EAAE;MAAEmB,OAAO,EAAEH;IAAU,CAAC;EACpE,CAAC;EACD,IAAII,MAAM;EACV,QAAQX,IAAI;IACR,KAAK,QAAQ;MACTW,MAAM,GAAGP,KAAK,GAAGjB,KAAK,CAACyB,aAAa,CAAC,KAAK,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,GAAG,EAAEV;MAAM,CAAC,CAAC,GAAGjB,KAAK,CAACyB,aAAa,CAAC,MAAM,EAAE,IAAI,EAAElB,aAAa,CAACa,SAAS,CAAC,CAAC;MAClI;IACJ,KAAK,OAAO;MACRI,MAAM,GAAGxB,KAAK,CAACyB,aAAa,CAACvB,IAAI,EAAE;QAAE0B,IAAI,EAAE3B,QAAQ;QAAES,IAAI,EAAE;MAAG,CAAC,CAAC;MAChE;IACJ,KAAK,OAAO;MACRc,MAAM,GAAG,IAAI;MACb;EACR;EACA,MAAMK,WAAW,GAAG7B,KAAK,CAAC8B,WAAW,CAAC,MAAM;IACxChB,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACM,SAAS,CAAC;EACxE,CAAC,EAAE,CAACA,SAAS,EAAEN,OAAO,CAAC,CAAC;EACxB,MAAMiB,WAAW,GAAG/B,KAAK,CAAC8B,WAAW,CAAC,MAAM;IACxCf,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACK,SAAS,CAAC;EACxE,CAAC,EAAE,CAACA,SAAS,EAAEL,OAAO,CAAC,CAAC;EACxB,OAAQf,KAAK,CAACyB,aAAa,CAACtB,WAAW,EAAE;IAAEO,IAAI,EAAEA,IAAI;IAAEC,KAAK,EAAEC,SAAS,GAAG,SAAS,GAAG,OAAO;IAAEoB,OAAO,EAAEnB,IAAI,KAAK,OAAO;IAAEC,OAAO,EAAEA,OAAO,IAAIe,WAAW;IAAEd,OAAO,EAAEA,OAAO,IAAIgB,WAAW;IAAEP,MAAM,EAAEA,MAAM;IAAEN,SAAS,EAAEA,SAAS;IAAEC,KAAK,EAAEA,KAAK;IAAEG,yBAAyB,EAAEA;EAA0B,CAAC,EAAED,QAAQ,CAAC;AACrT;AACAb,OAAO,CAACyB,WAAW,GAAG,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}