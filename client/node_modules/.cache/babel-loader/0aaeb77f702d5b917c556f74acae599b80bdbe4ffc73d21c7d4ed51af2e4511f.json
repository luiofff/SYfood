{"ast":null,"code":"import React from 'react';\nimport { SyntheticFocusEvent } from './SyntheticFocusEvent';\nimport { useSyntheticBlurEvent } from './useSyntheticBlurEvent';\n/**\n * Callback on focus outside event.\n *\n * @callback onFocusEventCallback\n * @param {FocusEvent} event\n */\n/**\n * Callback on focus change event.\n *\n * @callback onFocusChangeCallback\n * @param {boolean} isFocusWithin\n */\n/**\n * Handles focus events for the target and its descendants.\n *\n * @param {Object} props\n * @param {boolean} [props.isDisabled=false] - whether the focus within events should be disabled.\n * @param {onFocusEventCallback} props.onFocusWithin - handler that is called when the target element or a descendant receives focus.\n * @param {onFocusEventCallback} props.onBlurWithin - handler that is called when the target element and all descendants lose focus.\n * @param {onFocusChangeCallback} props.onFocusChange - handler that is called when the the focus within state changes.\n *\n * @returns container props\n *\n * @example\n *\n * function Select() {\n *   const [open, setOpen] = React.useState(false);\n *\n *   const handleFocusOutside = React.useCallback(() => {setOpen(false);}, []);\n *\n *   const {focusWithinProps} = useFocusWithin({onBlurWithin: handleFocusOutside});\n *\n *   return (\n *     <span {...focusWithinProps}>\n *       <Button onClick={() => {setOpen(true);}}>Select</Button>\n *       <Popup open={open}>\n *          ...\n *       </Popup>\n *     </span>\n *   );\n *  }\n * }\n */\nexport function useFocusWithin(props) {\n  const {\n    onFocusWithin,\n    onBlurWithin,\n    onFocusWithinChange,\n    isDisabled\n  } = props;\n  const isFocusWithinRef = React.useRef(false);\n  const onFocus = React.useCallback(event => {\n    if (!isFocusWithinRef.current && document.activeElement === event.target) {\n      isFocusWithinRef.current = true;\n      if (onFocusWithin) {\n        onFocusWithin(event);\n      }\n      if (onFocusWithinChange) {\n        onFocusWithinChange(true);\n      }\n    }\n  }, [onFocusWithin, onFocusWithinChange]);\n  const onBlur = React.useCallback(event => {\n    if (!isFocusWithinRef.current) {\n      return;\n    }\n    isFocusWithinRef.current = false;\n    if (onBlurWithin) {\n      onBlurWithin(event);\n    }\n    if (onFocusWithinChange) {\n      onFocusWithinChange(false);\n    }\n  }, [onBlurWithin, onFocusWithinChange]);\n  const {\n    onBlur: onBlurHandler,\n    onFocus: onFocusHandler\n  } = useFocusEvents({\n    onFocus,\n    onBlur,\n    isDisabled\n  });\n  if (isDisabled) {\n    return {\n      focusWithinProps: {\n        onFocus: undefined,\n        onBlur: undefined\n      }\n    };\n  }\n  return {\n    focusWithinProps: {\n      onFocus: onFocusHandler,\n      onBlur: onBlurHandler\n    }\n  };\n}\nfunction useFocusEvents({\n  onFocus,\n  onBlur,\n  isDisabled\n}) {\n  const capturedRef = React.useRef(false);\n  const targetRef = React.useRef(null);\n  React.useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n    const handleFocus = function () {\n      capturedRef.current = false;\n    };\n    const handleFocusIn = function (event) {\n      if (!capturedRef.current && targetRef.current) {\n        const blurEvent = new FocusEvent('blur', Object.assign(Object.assign({}, event), {\n          relatedTarget: event.target,\n          bubbles: false,\n          cancelable: false\n        }));\n        onBlur(new SyntheticFocusEvent('blur', blurEvent, {\n          target: targetRef.current,\n          currentTarget: targetRef.current\n        }));\n        targetRef.current = null;\n      }\n    };\n    window.addEventListener('focus', handleFocus, {\n      capture: true\n    });\n    // use focusin because a focus event does not bubble and current browser\n    // implementations fire focusin events after fucus event\n    window.addEventListener('focusin', handleFocusIn);\n    return () => {\n      window.removeEventListener('focus', handleFocus, {\n        capture: true\n      });\n      window.removeEventListener('focusin', handleFocusIn);\n    };\n  }, [isDisabled, onBlur]);\n  const onBlurHandler = React.useCallback(event => {\n    if (event.relatedTarget === null || event.relatedTarget === document.body || event.relatedTarget === document) {\n      onBlur(event);\n      targetRef.current = null;\n    }\n  }, [onBlur]);\n  const onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n  const onFocusHandler = React.useCallback(event => {\n    capturedRef.current = true;\n    targetRef.current = event.target;\n    onSyntheticFocus(event);\n    onFocus(event);\n  }, [onSyntheticFocus, onFocus]);\n  return {\n    onBlur: onBlurHandler,\n    onFocus: onFocusHandler\n  };\n}","map":{"version":3,"names":["React","SyntheticFocusEvent","useSyntheticBlurEvent","useFocusWithin","props","onFocusWithin","onBlurWithin","onFocusWithinChange","isDisabled","isFocusWithinRef","useRef","onFocus","useCallback","event","current","document","activeElement","target","onBlur","onBlurHandler","onFocusHandler","useFocusEvents","focusWithinProps","undefined","capturedRef","targetRef","useEffect","handleFocus","handleFocusIn","blurEvent","FocusEvent","Object","assign","relatedTarget","bubbles","cancelable","currentTarget","window","addEventListener","capture","removeEventListener","body","onSyntheticFocus"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/hooks/useFocusWithin/useFocusWithin.js"],"sourcesContent":["import React from 'react';\nimport { SyntheticFocusEvent } from './SyntheticFocusEvent';\nimport { useSyntheticBlurEvent } from './useSyntheticBlurEvent';\n/**\n * Callback on focus outside event.\n *\n * @callback onFocusEventCallback\n * @param {FocusEvent} event\n */\n/**\n * Callback on focus change event.\n *\n * @callback onFocusChangeCallback\n * @param {boolean} isFocusWithin\n */\n/**\n * Handles focus events for the target and its descendants.\n *\n * @param {Object} props\n * @param {boolean} [props.isDisabled=false] - whether the focus within events should be disabled.\n * @param {onFocusEventCallback} props.onFocusWithin - handler that is called when the target element or a descendant receives focus.\n * @param {onFocusEventCallback} props.onBlurWithin - handler that is called when the target element and all descendants lose focus.\n * @param {onFocusChangeCallback} props.onFocusChange - handler that is called when the the focus within state changes.\n *\n * @returns container props\n *\n * @example\n *\n * function Select() {\n *   const [open, setOpen] = React.useState(false);\n *\n *   const handleFocusOutside = React.useCallback(() => {setOpen(false);}, []);\n *\n *   const {focusWithinProps} = useFocusWithin({onBlurWithin: handleFocusOutside});\n *\n *   return (\n *     <span {...focusWithinProps}>\n *       <Button onClick={() => {setOpen(true);}}>Select</Button>\n *       <Popup open={open}>\n *          ...\n *       </Popup>\n *     </span>\n *   );\n *  }\n * }\n */\nexport function useFocusWithin(props) {\n    const { onFocusWithin, onBlurWithin, onFocusWithinChange, isDisabled } = props;\n    const isFocusWithinRef = React.useRef(false);\n    const onFocus = React.useCallback((event) => {\n        if (!isFocusWithinRef.current && document.activeElement === event.target) {\n            isFocusWithinRef.current = true;\n            if (onFocusWithin) {\n                onFocusWithin(event);\n            }\n            if (onFocusWithinChange) {\n                onFocusWithinChange(true);\n            }\n        }\n    }, [onFocusWithin, onFocusWithinChange]);\n    const onBlur = React.useCallback((event) => {\n        if (!isFocusWithinRef.current) {\n            return;\n        }\n        isFocusWithinRef.current = false;\n        if (onBlurWithin) {\n            onBlurWithin(event);\n        }\n        if (onFocusWithinChange) {\n            onFocusWithinChange(false);\n        }\n    }, [onBlurWithin, onFocusWithinChange]);\n    const { onBlur: onBlurHandler, onFocus: onFocusHandler } = useFocusEvents({\n        onFocus,\n        onBlur,\n        isDisabled,\n    });\n    if (isDisabled) {\n        return {\n            focusWithinProps: {\n                onFocus: undefined,\n                onBlur: undefined,\n            },\n        };\n    }\n    return {\n        focusWithinProps: {\n            onFocus: onFocusHandler,\n            onBlur: onBlurHandler,\n        },\n    };\n}\nfunction useFocusEvents({ onFocus, onBlur, isDisabled, }) {\n    const capturedRef = React.useRef(false);\n    const targetRef = React.useRef(null);\n    React.useEffect(() => {\n        if (isDisabled) {\n            return undefined;\n        }\n        const handleFocus = function () {\n            capturedRef.current = false;\n        };\n        const handleFocusIn = function (event) {\n            if (!capturedRef.current && targetRef.current) {\n                const blurEvent = new FocusEvent('blur', Object.assign(Object.assign({}, event), { relatedTarget: event.target, bubbles: false, cancelable: false }));\n                onBlur(new SyntheticFocusEvent('blur', blurEvent, {\n                    target: targetRef.current,\n                    currentTarget: targetRef.current,\n                }));\n                targetRef.current = null;\n            }\n        };\n        window.addEventListener('focus', handleFocus, { capture: true });\n        // use focusin because a focus event does not bubble and current browser\n        // implementations fire focusin events after fucus event\n        window.addEventListener('focusin', handleFocusIn);\n        return () => {\n            window.removeEventListener('focus', handleFocus, { capture: true });\n            window.removeEventListener('focusin', handleFocusIn);\n        };\n    }, [isDisabled, onBlur]);\n    const onBlurHandler = React.useCallback((event) => {\n        if (event.relatedTarget === null ||\n            event.relatedTarget === document.body ||\n            event.relatedTarget === document) {\n            onBlur(event);\n            targetRef.current = null;\n        }\n    }, [onBlur]);\n    const onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n    const onFocusHandler = React.useCallback((event) => {\n        capturedRef.current = true;\n        targetRef.current = event.target;\n        onSyntheticFocus(event);\n        onFocus(event);\n    }, [onSyntheticFocus, onFocus]);\n    return { onBlur: onBlurHandler, onFocus: onFocusHandler };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}