{"ast":null,"code":"import React from 'react';\nimport _get from 'lodash/get';\nimport _has from 'lodash/has';\nimport _isNumber from 'lodash/isNumber';\nimport { block } from '../utils/cn';\nimport i18n from './i18n';\nimport './Table.css';\nconst DASH = '\\u2014';\nconst b = block('table');\nexport class Table extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      activeScrollElement: 'scrollContainer',\n      columnsStyles: Array.from(this.props.columns, () => ({})),\n      columnHeaderRefs: Array.from(this.props.columns, () => React.createRef())\n    };\n    this.tableRef = React.createRef();\n    this.scrollContainerRef = React.createRef();\n    this.horizontalScrollBarRef = React.createRef();\n    this.horizontalScrollBarInnerRef = React.createRef();\n    this.renderRow = (item, rowIndex) => {\n      const {\n        columns,\n        isRowDisabled,\n        onRowClick,\n        onRowMouseEnter,\n        onRowMouseLeave,\n        onRowMouseDown,\n        getRowClassNames,\n        verticalAlign,\n        edgePadding,\n        wordWrap\n      } = this.props;\n      const {\n        columnsStyles\n      } = this.state;\n      const disabled = isRowDisabled ? isRowDisabled(item, rowIndex) : false;\n      const interactive = Boolean(!disabled && onRowClick);\n      const additionalClassNames = getRowClassNames ? getRowClassNames(item, rowIndex) : [];\n      return React.createElement(\"tr\", {\n        key: Table.getRowId(this.props, item, rowIndex),\n        onClick: !disabled && onRowClick ? onRowClick.bind(null, item, rowIndex) : undefined,\n        onMouseEnter: !disabled && onRowMouseEnter ? onRowMouseEnter.bind(null, item, rowIndex) : undefined,\n        onMouseLeave: !disabled && onRowMouseLeave ? onRowMouseLeave.bind(null, item, rowIndex) : undefined,\n        onMouseDown: !disabled && onRowMouseDown ? onRowMouseDown.bind(null, item, rowIndex) : undefined,\n        className: b('row', {\n          disabled,\n          interactive,\n          'vertical-align': verticalAlign\n        }, additionalClassNames.join(' '))\n      }, columns.map((column, colIndex) => {\n        const {\n          id,\n          align,\n          primary,\n          className,\n          sticky\n        } = column;\n        const content = Table.getBodyCellContent(column, item, rowIndex);\n        return React.createElement(\"td\", {\n          key: id,\n          style: columnsStyles[colIndex],\n          className: b('cell', {\n            align,\n            primary,\n            sticky,\n            ['edge-padding']: edgePadding,\n            ['word-wrap']: wordWrap\n          }, className)\n        }, content);\n      }));\n    };\n    this.handleScrollContainerMouseenter = () => {\n      this.setState({\n        activeScrollElement: 'scrollContainer'\n      });\n    };\n    this.handleScrollContainerScroll = () => {\n      if (this.state.activeScrollElement === 'scrollContainer' && this.horizontalScrollBarRef.current && this.scrollContainerRef.current) {\n        this.horizontalScrollBarRef.current.scrollLeft = this.scrollContainerRef.current.scrollLeft;\n      }\n    };\n    this.handleHorizontalScrollBarMouseenter = () => {\n      this.setState({\n        activeScrollElement: 'scrollBar'\n      });\n    };\n    this.handleHorizontalScrollBarScroll = () => {\n      if (this.state.activeScrollElement === 'scrollBar' && this.horizontalScrollBarRef.current && this.scrollContainerRef.current) {\n        this.scrollContainerRef.current.scrollLeft = this.horizontalScrollBarRef.current.scrollLeft;\n      }\n    };\n  }\n  // Static methods may be used by HOCs\n  static getRowId(props, item, rowIndex) {\n    const {\n      data,\n      getRowId\n    } = props;\n    const index = rowIndex !== null && rowIndex !== void 0 ? rowIndex : data.indexOf(item);\n    if (typeof getRowId === 'function') {\n      return getRowId(item, index);\n    }\n    if (getRowId && getRowId in item) {\n      return String(item[getRowId]);\n    }\n    return String(index);\n  }\n  static getHeadCellContent(column) {\n    const {\n      id,\n      name\n    } = column;\n    let content;\n    if (typeof name === 'function') {\n      content = name();\n    } else if (typeof name === 'string') {\n      content = name;\n    } else {\n      content = id;\n    }\n    return React.createElement(\"span\", {\n      className: b('th-content')\n    }, content);\n  }\n  static getBodyCellContent(column, item, rowIndex) {\n    const {\n      id,\n      template,\n      placeholder\n    } = column;\n    let placeholderValue;\n    if (typeof placeholder === 'function') {\n      placeholderValue = placeholder(item, rowIndex);\n    } else {\n      placeholderValue = placeholder !== null && placeholder !== void 0 ? placeholder : DASH;\n    }\n    let value;\n    if (typeof template === 'function') {\n      value = template(item, rowIndex);\n    } else if (typeof template === 'string') {\n      value = _get(item, template);\n    } else if (_has(item, id)) {\n      value = _get(item, id);\n    }\n    if ([undefined, null, ''].includes(value) && placeholderValue) {\n      return placeholderValue;\n    }\n    return value;\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (props.columns.length === state.columnHeaderRefs.length) {\n      return null;\n    }\n    return {\n      columnHeaderRefs: Array.from(props.columns, () => React.createRef())\n    };\n  }\n  componentDidMount() {\n    if (this.props.stickyHorizontalScroll) {\n      this.tableResizeObserver = new ResizeObserver(entries => {\n        var _a;\n        const {\n          contentRect\n        } = entries[0];\n        // Sync scrollbar width with table width\n        (_a = this.horizontalScrollBarInnerRef.current) === null || _a === void 0 ? void 0 : _a.style.setProperty('width', `${contentRect.width}px`);\n      });\n      if (this.tableRef.current) {\n        this.tableResizeObserver.observe(this.tableRef.current);\n      }\n      if (this.scrollContainerRef.current) {\n        this.scrollContainerRef.current.addEventListener('scroll', this.handleScrollContainerScroll);\n        this.scrollContainerRef.current.addEventListener('mouseenter', this.handleScrollContainerMouseenter);\n      }\n      if (this.horizontalScrollBarRef.current) {\n        this.horizontalScrollBarRef.current.addEventListener('scroll', this.handleHorizontalScrollBarScroll);\n        this.horizontalScrollBarRef.current.addEventListener('mouseenter', this.handleHorizontalScrollBarMouseenter);\n      }\n    }\n    this.columnsResizeObserver = new ResizeObserver(entries => {\n      // fix ResizeObserver loop error\n      window.requestAnimationFrame(() => {\n        if (!Array.isArray(entries) || !entries.length) {\n          return;\n        }\n        this.updateColumnStyles();\n      });\n    });\n    if (this.tableRef.current) {\n      this.columnsResizeObserver.observe(this.tableRef.current);\n    }\n    this.updateColumnStyles();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.columns !== prevProps.columns) {\n      this.updateColumnStyles();\n    }\n  }\n  componentWillUnmount() {\n    if (this.props.stickyHorizontalScroll) {\n      if (this.tableResizeObserver) {\n        this.tableResizeObserver.disconnect();\n      }\n      if (this.scrollContainerRef.current) {\n        this.scrollContainerRef.current.removeEventListener('scroll', this.handleScrollContainerScroll);\n        this.scrollContainerRef.current.removeEventListener('mouseenter', this.handleScrollContainerMouseenter);\n      }\n      if (this.horizontalScrollBarRef.current) {\n        this.horizontalScrollBarRef.current.removeEventListener('scroll', this.handleHorizontalScrollBarScroll);\n        this.horizontalScrollBarRef.current.removeEventListener('mouseenter', this.handleHorizontalScrollBarMouseenter);\n      }\n    }\n    if (this.columnsResizeObserver) {\n      this.columnsResizeObserver.disconnect();\n    }\n  }\n  render() {\n    const {\n      columns,\n      stickyHorizontalScroll,\n      className,\n      qa\n    } = this.props;\n    const withPrimary = columns.some(({\n      primary\n    }) => primary);\n    return React.createElement(\"div\", {\n      className: b({\n        'with-primary': withPrimary,\n        'with-sticky-scroll': stickyHorizontalScroll\n      }, className),\n      \"data-qa\": qa\n    }, stickyHorizontalScroll ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      ref: this.scrollContainerRef,\n      className: b('scroll-container')\n    }, this.renderTable()), this.renderHorizontalScrollBar()) : this.renderTable());\n  }\n  renderHead() {\n    const {\n      columns,\n      edgePadding,\n      wordWrap\n    } = this.props;\n    const {\n      columnsStyles\n    } = this.state;\n    return React.createElement(\"thead\", {\n      className: b('head')\n    }, React.createElement(\"tr\", {\n      className: b('row')\n    }, columns.map((column, index) => {\n      const {\n        id,\n        align,\n        primary,\n        sticky,\n        className\n      } = column;\n      const content = Table.getHeadCellContent(column);\n      return React.createElement(\"th\", {\n        key: id,\n        ref: this.state.columnHeaderRefs[index],\n        style: columnsStyles[index],\n        className: b('cell', {\n          align,\n          primary,\n          sticky,\n          ['edge-padding']: edgePadding,\n          ['word-wrap']: wordWrap\n        }, className)\n      }, content);\n    })));\n  }\n  renderBody() {\n    const {\n      data\n    } = this.props;\n    return React.createElement(\"tbody\", {\n      className: b('body')\n    }, data.length > 0 ? data.map(this.renderRow) : this.renderEmptyRow());\n  }\n  renderTable() {\n    return React.createElement(\"table\", {\n      ref: this.tableRef,\n      className: b('table')\n    }, this.renderHead(), this.renderBody());\n  }\n  renderEmptyRow() {\n    const {\n      columns,\n      emptyMessage\n    } = this.props;\n    return React.createElement(\"tr\", {\n      className: b('row', {\n        empty: true\n      })\n    }, React.createElement(\"td\", {\n      className: b('cell'),\n      colSpan: columns.length\n    }, emptyMessage ? emptyMessage : i18n('label_empty')));\n  }\n  renderHorizontalScrollBar() {\n    const {\n      stickyHorizontalScroll,\n      stickyHorizontalScrollBreakpoint = 0\n    } = this.props;\n    return React.createElement(\"div\", {\n      ref: this.horizontalScrollBarRef,\n      className: b('horizontal-scroll-bar', {\n        'sticky-horizontal-scroll': stickyHorizontalScroll\n      }),\n      style: {\n        bottom: `${stickyHorizontalScrollBreakpoint}px`\n      },\n      \"data-qa\": \"sticky-horizontal-scroll-breakpoint-qa\"\n    }, React.createElement(\"div\", {\n      ref: this.horizontalScrollBarInnerRef,\n      className: b('horizontal-scroll-bar-inner')\n    }));\n  }\n  updateColumnStyles() {\n    this.setState(prevState => {\n      const columnsWidth = prevState.columnHeaderRefs.map(ref => ref.current === null ? undefined : ref.current.getBoundingClientRect().width);\n      const columnsStyles = this.props.columns.map((_, index) => this.getColumnStyles(index, columnsWidth));\n      return {\n        columnsStyles\n      };\n    });\n  }\n  getColumnStyles(index, columnsWidth) {\n    const {\n      columns\n    } = this.props;\n    const column = columns[index];\n    const style = {};\n    if (typeof column.width === 'string') {\n      return {\n        maxWidth: 0,\n        width: column.width\n      };\n    }\n    if (typeof column.width !== 'undefined') {\n      style.width = column.width;\n    }\n    if (!column.sticky) {\n      return style;\n    }\n    const filteredColumns = column.sticky === 'left' ? columnsWidth.slice(0, index) : columnsWidth.slice(index + 1);\n    style[column.sticky] = filteredColumns.reduce((left, width) => {\n      return _isNumber(width) ? left + width : left;\n    }, 0);\n    return style;\n  }\n}\nTable.defaultProps = {\n  edgePadding: true\n};","map":{"version":3,"names":["React","_get","_has","_isNumber","block","i18n","DASH","b","Table","Component","constructor","arguments","state","activeScrollElement","columnsStyles","Array","from","props","columns","columnHeaderRefs","createRef","tableRef","scrollContainerRef","horizontalScrollBarRef","horizontalScrollBarInnerRef","renderRow","item","rowIndex","isRowDisabled","onRowClick","onRowMouseEnter","onRowMouseLeave","onRowMouseDown","getRowClassNames","verticalAlign","edgePadding","wordWrap","disabled","interactive","Boolean","additionalClassNames","createElement","key","getRowId","onClick","bind","undefined","onMouseEnter","onMouseLeave","onMouseDown","className","join","map","column","colIndex","id","align","primary","sticky","content","getBodyCellContent","style","handleScrollContainerMouseenter","setState","handleScrollContainerScroll","current","scrollLeft","handleHorizontalScrollBarMouseenter","handleHorizontalScrollBarScroll","data","index","indexOf","String","getHeadCellContent","name","template","placeholder","placeholderValue","value","includes","getDerivedStateFromProps","length","componentDidMount","stickyHorizontalScroll","tableResizeObserver","ResizeObserver","entries","_a","contentRect","setProperty","width","observe","addEventListener","columnsResizeObserver","window","requestAnimationFrame","isArray","updateColumnStyles","componentDidUpdate","prevProps","componentWillUnmount","disconnect","removeEventListener","render","qa","withPrimary","some","Fragment","ref","renderTable","renderHorizontalScrollBar","renderHead","renderBody","renderEmptyRow","emptyMessage","empty","colSpan","stickyHorizontalScrollBreakpoint","bottom","prevState","columnsWidth","getBoundingClientRect","_","getColumnStyles","maxWidth","filteredColumns","slice","reduce","left","defaultProps"],"sources":["/Users/ilaulanov/node_modules/@gravity-ui/uikit/build/esm/components/Table/Table.js"],"sourcesContent":["import React from 'react';\nimport _get from 'lodash/get';\nimport _has from 'lodash/has';\nimport _isNumber from 'lodash/isNumber';\nimport { block } from '../utils/cn';\nimport i18n from './i18n';\nimport './Table.css';\nconst DASH = '\\u2014';\nconst b = block('table');\nexport class Table extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeScrollElement: 'scrollContainer',\n            columnsStyles: Array.from(this.props.columns, () => ({})),\n            columnHeaderRefs: Array.from(this.props.columns, () => React.createRef()),\n        };\n        this.tableRef = React.createRef();\n        this.scrollContainerRef = React.createRef();\n        this.horizontalScrollBarRef = React.createRef();\n        this.horizontalScrollBarInnerRef = React.createRef();\n        this.renderRow = (item, rowIndex) => {\n            const { columns, isRowDisabled, onRowClick, onRowMouseEnter, onRowMouseLeave, onRowMouseDown, getRowClassNames, verticalAlign, edgePadding, wordWrap, } = this.props;\n            const { columnsStyles } = this.state;\n            const disabled = isRowDisabled ? isRowDisabled(item, rowIndex) : false;\n            const interactive = Boolean(!disabled && onRowClick);\n            const additionalClassNames = getRowClassNames ? getRowClassNames(item, rowIndex) : [];\n            return (React.createElement(\"tr\", { key: Table.getRowId(this.props, item, rowIndex), onClick: !disabled && onRowClick ? onRowClick.bind(null, item, rowIndex) : undefined, onMouseEnter: !disabled && onRowMouseEnter\n                    ? onRowMouseEnter.bind(null, item, rowIndex)\n                    : undefined, onMouseLeave: !disabled && onRowMouseLeave\n                    ? onRowMouseLeave.bind(null, item, rowIndex)\n                    : undefined, onMouseDown: !disabled && onRowMouseDown\n                    ? onRowMouseDown.bind(null, item, rowIndex)\n                    : undefined, className: b('row', { disabled, interactive, 'vertical-align': verticalAlign }, additionalClassNames.join(' ')) }, columns.map((column, colIndex) => {\n                const { id, align, primary, className, sticky } = column;\n                const content = Table.getBodyCellContent(column, item, rowIndex);\n                return (React.createElement(\"td\", { key: id, style: columnsStyles[colIndex], className: b('cell', {\n                        align,\n                        primary,\n                        sticky,\n                        ['edge-padding']: edgePadding,\n                        ['word-wrap']: wordWrap,\n                    }, className) }, content));\n            })));\n        };\n        this.handleScrollContainerMouseenter = () => {\n            this.setState({ activeScrollElement: 'scrollContainer' });\n        };\n        this.handleScrollContainerScroll = () => {\n            if (this.state.activeScrollElement === 'scrollContainer' &&\n                this.horizontalScrollBarRef.current &&\n                this.scrollContainerRef.current) {\n                this.horizontalScrollBarRef.current.scrollLeft =\n                    this.scrollContainerRef.current.scrollLeft;\n            }\n        };\n        this.handleHorizontalScrollBarMouseenter = () => {\n            this.setState({ activeScrollElement: 'scrollBar' });\n        };\n        this.handleHorizontalScrollBarScroll = () => {\n            if (this.state.activeScrollElement === 'scrollBar' &&\n                this.horizontalScrollBarRef.current &&\n                this.scrollContainerRef.current) {\n                this.scrollContainerRef.current.scrollLeft =\n                    this.horizontalScrollBarRef.current.scrollLeft;\n            }\n        };\n    }\n    // Static methods may be used by HOCs\n    static getRowId(props, item, rowIndex) {\n        const { data, getRowId } = props;\n        const index = rowIndex !== null && rowIndex !== void 0 ? rowIndex : data.indexOf(item);\n        if (typeof getRowId === 'function') {\n            return getRowId(item, index);\n        }\n        if (getRowId && getRowId in item) {\n            return String(item[getRowId]);\n        }\n        return String(index);\n    }\n    static getHeadCellContent(column) {\n        const { id, name } = column;\n        let content;\n        if (typeof name === 'function') {\n            content = name();\n        }\n        else if (typeof name === 'string') {\n            content = name;\n        }\n        else {\n            content = id;\n        }\n        return React.createElement(\"span\", { className: b('th-content') }, content);\n    }\n    static getBodyCellContent(column, item, rowIndex) {\n        const { id, template, placeholder } = column;\n        let placeholderValue;\n        if (typeof placeholder === 'function') {\n            placeholderValue = placeholder(item, rowIndex);\n        }\n        else {\n            placeholderValue = placeholder !== null && placeholder !== void 0 ? placeholder : DASH;\n        }\n        let value;\n        if (typeof template === 'function') {\n            value = template(item, rowIndex);\n        }\n        else if (typeof template === 'string') {\n            value = _get(item, template);\n        }\n        else if (_has(item, id)) {\n            value = _get(item, id);\n        }\n        if ([undefined, null, ''].includes(value) && placeholderValue) {\n            return placeholderValue;\n        }\n        return value;\n    }\n    static getDerivedStateFromProps(props, state) {\n        if (props.columns.length === state.columnHeaderRefs.length) {\n            return null;\n        }\n        return {\n            columnHeaderRefs: Array.from(props.columns, () => React.createRef()),\n        };\n    }\n    componentDidMount() {\n        if (this.props.stickyHorizontalScroll) {\n            this.tableResizeObserver = new ResizeObserver((entries) => {\n                var _a;\n                const { contentRect } = entries[0];\n                // Sync scrollbar width with table width\n                (_a = this.horizontalScrollBarInnerRef.current) === null || _a === void 0 ? void 0 : _a.style.setProperty('width', `${contentRect.width}px`);\n            });\n            if (this.tableRef.current) {\n                this.tableResizeObserver.observe(this.tableRef.current);\n            }\n            if (this.scrollContainerRef.current) {\n                this.scrollContainerRef.current.addEventListener('scroll', this.handleScrollContainerScroll);\n                this.scrollContainerRef.current.addEventListener('mouseenter', this.handleScrollContainerMouseenter);\n            }\n            if (this.horizontalScrollBarRef.current) {\n                this.horizontalScrollBarRef.current.addEventListener('scroll', this.handleHorizontalScrollBarScroll);\n                this.horizontalScrollBarRef.current.addEventListener('mouseenter', this.handleHorizontalScrollBarMouseenter);\n            }\n        }\n        this.columnsResizeObserver = new ResizeObserver((entries) => {\n            // fix ResizeObserver loop error\n            window.requestAnimationFrame(() => {\n                if (!Array.isArray(entries) || !entries.length) {\n                    return;\n                }\n                this.updateColumnStyles();\n            });\n        });\n        if (this.tableRef.current) {\n            this.columnsResizeObserver.observe(this.tableRef.current);\n        }\n        this.updateColumnStyles();\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.columns !== prevProps.columns) {\n            this.updateColumnStyles();\n        }\n    }\n    componentWillUnmount() {\n        if (this.props.stickyHorizontalScroll) {\n            if (this.tableResizeObserver) {\n                this.tableResizeObserver.disconnect();\n            }\n            if (this.scrollContainerRef.current) {\n                this.scrollContainerRef.current.removeEventListener('scroll', this.handleScrollContainerScroll);\n                this.scrollContainerRef.current.removeEventListener('mouseenter', this.handleScrollContainerMouseenter);\n            }\n            if (this.horizontalScrollBarRef.current) {\n                this.horizontalScrollBarRef.current.removeEventListener('scroll', this.handleHorizontalScrollBarScroll);\n                this.horizontalScrollBarRef.current.removeEventListener('mouseenter', this.handleHorizontalScrollBarMouseenter);\n            }\n        }\n        if (this.columnsResizeObserver) {\n            this.columnsResizeObserver.disconnect();\n        }\n    }\n    render() {\n        const { columns, stickyHorizontalScroll, className, qa } = this.props;\n        const withPrimary = columns.some(({ primary }) => primary);\n        return (React.createElement(\"div\", { className: b({\n                'with-primary': withPrimary,\n                'with-sticky-scroll': stickyHorizontalScroll,\n            }, className), \"data-qa\": qa }, stickyHorizontalScroll ? (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { ref: this.scrollContainerRef, className: b('scroll-container') }, this.renderTable()),\n            this.renderHorizontalScrollBar())) : (this.renderTable())));\n    }\n    renderHead() {\n        const { columns, edgePadding, wordWrap } = this.props;\n        const { columnsStyles } = this.state;\n        return (React.createElement(\"thead\", { className: b('head') },\n            React.createElement(\"tr\", { className: b('row') }, columns.map((column, index) => {\n                const { id, align, primary, sticky, className } = column;\n                const content = Table.getHeadCellContent(column);\n                return (React.createElement(\"th\", { key: id, ref: this.state.columnHeaderRefs[index], style: columnsStyles[index], className: b('cell', {\n                        align,\n                        primary,\n                        sticky,\n                        ['edge-padding']: edgePadding,\n                        ['word-wrap']: wordWrap,\n                    }, className) }, content));\n            }))));\n    }\n    renderBody() {\n        const { data } = this.props;\n        return (React.createElement(\"tbody\", { className: b('body') }, data.length > 0 ? data.map(this.renderRow) : this.renderEmptyRow()));\n    }\n    renderTable() {\n        return (React.createElement(\"table\", { ref: this.tableRef, className: b('table') },\n            this.renderHead(),\n            this.renderBody()));\n    }\n    renderEmptyRow() {\n        const { columns, emptyMessage } = this.props;\n        return (React.createElement(\"tr\", { className: b('row', { empty: true }) },\n            React.createElement(\"td\", { className: b('cell'), colSpan: columns.length }, emptyMessage ? emptyMessage : i18n('label_empty'))));\n    }\n    renderHorizontalScrollBar() {\n        const { stickyHorizontalScroll, stickyHorizontalScrollBreakpoint = 0 } = this.props;\n        return (React.createElement(\"div\", { ref: this.horizontalScrollBarRef, className: b('horizontal-scroll-bar', {\n                'sticky-horizontal-scroll': stickyHorizontalScroll,\n            }), style: { bottom: `${stickyHorizontalScrollBreakpoint}px` }, \"data-qa\": \"sticky-horizontal-scroll-breakpoint-qa\" },\n            React.createElement(\"div\", { ref: this.horizontalScrollBarInnerRef, className: b('horizontal-scroll-bar-inner') })));\n    }\n    updateColumnStyles() {\n        this.setState((prevState) => {\n            const columnsWidth = prevState.columnHeaderRefs.map((ref) => ref.current === null ? undefined : ref.current.getBoundingClientRect().width);\n            const columnsStyles = this.props.columns.map((_, index) => this.getColumnStyles(index, columnsWidth));\n            return { columnsStyles };\n        });\n    }\n    getColumnStyles(index, columnsWidth) {\n        const { columns } = this.props;\n        const column = columns[index];\n        const style = {};\n        if (typeof column.width === 'string') {\n            return { maxWidth: 0, width: column.width };\n        }\n        if (typeof column.width !== 'undefined') {\n            style.width = column.width;\n        }\n        if (!column.sticky) {\n            return style;\n        }\n        const filteredColumns = column.sticky === 'left' ? columnsWidth.slice(0, index) : columnsWidth.slice(index + 1);\n        style[column.sticky] = filteredColumns.reduce((left, width) => {\n            return _isNumber(width) ? left + width : left;\n        }, 0);\n        return style;\n    }\n}\nTable.defaultProps = {\n    edgePadding: true,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}