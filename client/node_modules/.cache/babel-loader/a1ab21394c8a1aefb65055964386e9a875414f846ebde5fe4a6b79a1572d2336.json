{"ast":null,"code":"import React from 'react';\nimport { getDarkMediaMatch } from './getDarkMediaMatch';\nimport { getSystemTheme } from './getSystemTheme';\nfunction addListener(matcher, handler) {\n  const isLegacyMethod = typeof matcher.addEventListener !== 'function';\n  if (isLegacyMethod) {\n    matcher.addListener(handler);\n  } else {\n    matcher.addEventListener('change', handler);\n  }\n  return () => {\n    if (isLegacyMethod) {\n      matcher.removeListener(handler);\n    } else {\n      matcher.removeEventListener('change', handler);\n    }\n  };\n}\nexport function useSystemTheme() {\n  const [theme, setTheme] = React.useState(getSystemTheme());\n  React.useEffect(() => {\n    function onChange(event) {\n      setTheme(event.matches ? 'dark' : 'light');\n    }\n    const matcher = getDarkMediaMatch();\n    const unsubscribe = addListener(matcher, onChange);\n    return () => unsubscribe();\n  }, []);\n  return theme;\n}","map":{"version":3,"names":["React","getDarkMediaMatch","getSystemTheme","addListener","matcher","handler","isLegacyMethod","addEventListener","removeListener","removeEventListener","useSystemTheme","theme","setTheme","useState","useEffect","onChange","event","matches","unsubscribe"],"sources":["/Users/ilaulanov/node_modules/@gravity-ui/uikit/build/esm/components/theme/useSystemTheme.js"],"sourcesContent":["import React from 'react';\nimport { getDarkMediaMatch } from './getDarkMediaMatch';\nimport { getSystemTheme } from './getSystemTheme';\nfunction addListener(matcher, handler) {\n    const isLegacyMethod = typeof matcher.addEventListener !== 'function';\n    if (isLegacyMethod) {\n        matcher.addListener(handler);\n    }\n    else {\n        matcher.addEventListener('change', handler);\n    }\n    return () => {\n        if (isLegacyMethod) {\n            matcher.removeListener(handler);\n        }\n        else {\n            matcher.removeEventListener('change', handler);\n        }\n    };\n}\nexport function useSystemTheme() {\n    const [theme, setTheme] = React.useState(getSystemTheme());\n    React.useEffect(() => {\n        function onChange(event) {\n            setTheme(event.matches ? 'dark' : 'light');\n        }\n        const matcher = getDarkMediaMatch();\n        const unsubscribe = addListener(matcher, onChange);\n        return () => unsubscribe();\n    }, []);\n    return theme;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,WAAWA,CAACC,OAAO,EAAEC,OAAO,EAAE;EACnC,MAAMC,cAAc,GAAG,OAAOF,OAAO,CAACG,gBAAgB,KAAK,UAAU;EACrE,IAAID,cAAc,EAAE;IAChBF,OAAO,CAACD,WAAW,CAACE,OAAO,CAAC;EAChC,CAAC,MACI;IACDD,OAAO,CAACG,gBAAgB,CAAC,QAAQ,EAAEF,OAAO,CAAC;EAC/C;EACA,OAAO,MAAM;IACT,IAAIC,cAAc,EAAE;MAChBF,OAAO,CAACI,cAAc,CAACH,OAAO,CAAC;IACnC,CAAC,MACI;MACDD,OAAO,CAACK,mBAAmB,CAAC,QAAQ,EAAEJ,OAAO,CAAC;IAClD;EACJ,CAAC;AACL;AACA,OAAO,SAASK,cAAcA,CAAA,EAAG;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAACX,cAAc,CAAC,CAAC,CAAC;EAC1DF,KAAK,CAACc,SAAS,CAAC,MAAM;IAClB,SAASC,QAAQA,CAACC,KAAK,EAAE;MACrBJ,QAAQ,CAACI,KAAK,CAACC,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;IAC9C;IACA,MAAMb,OAAO,GAAGH,iBAAiB,CAAC,CAAC;IACnC,MAAMiB,WAAW,GAAGf,WAAW,CAACC,OAAO,EAAEW,QAAQ,CAAC;IAClD,OAAO,MAAMG,WAAW,CAAC,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EACN,OAAOP,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}