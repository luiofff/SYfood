{"ast":null,"code":"import React from 'react';\nimport round from 'lodash/round';\nimport throttle from 'lodash/throttle';\nconst RESIZE_THROTTLE = 16;\nconst ROUND_PRESICION = 2;\nexport function useElementSize(ref,\n// can be used, when it is needed to force reassign observer to element\n// in order to get correct measures. might be related to below\n// https://github.com/WICG/resize-observer/issues/65\nkey) {\n  const [size, setSize] = React.useState({\n    width: 0,\n    height: 0\n  });\n  React.useLayoutEffect(() => {\n    if (!(ref === null || ref === void 0 ? void 0 : ref.current)) {\n      return undefined;\n    }\n    const handleResize = entries => {\n      if (!Array.isArray(entries)) {\n        return;\n      }\n      const entry = entries[0];\n      if (entry.borderBoxSize) {\n        const borderBoxSize = entry.borderBoxSize[0] ? entry.borderBoxSize[0] : entry.borderBoxSize;\n        // ...but old versions of Firefox treat it as a single item\n        // https://github.com/mdn/dom-examples/blob/main/resize-observer/resize-observer-text.html#L88\n        setSize({\n          width: round(borderBoxSize.inlineSize, ROUND_PRESICION),\n          height: round(borderBoxSize.blockSize, ROUND_PRESICION)\n        });\n      } else {\n        const target = entry.target;\n        setSize({\n          width: round(target.offsetWidth, ROUND_PRESICION),\n          height: round(target.offsetHeight, ROUND_PRESICION)\n        });\n      }\n    };\n    const observer = new ResizeObserver(throttle(handleResize, RESIZE_THROTTLE));\n    observer.observe(ref.current);\n    return () => {\n      observer.disconnect();\n    };\n  }, [ref, key]);\n  return size;\n}","map":{"version":3,"names":["React","round","throttle","RESIZE_THROTTLE","ROUND_PRESICION","useElementSize","ref","key","size","setSize","useState","width","height","useLayoutEffect","current","undefined","handleResize","entries","Array","isArray","entry","borderBoxSize","inlineSize","blockSize","target","offsetWidth","offsetHeight","observer","ResizeObserver","observe","disconnect"],"sources":["/Users/ilaulanov/node_modules/@gravity-ui/uikit/build/esm/components/utils/useElementSize.js"],"sourcesContent":["import React from 'react';\nimport round from 'lodash/round';\nimport throttle from 'lodash/throttle';\nconst RESIZE_THROTTLE = 16;\nconst ROUND_PRESICION = 2;\nexport function useElementSize(ref, \n// can be used, when it is needed to force reassign observer to element\n// in order to get correct measures. might be related to below\n// https://github.com/WICG/resize-observer/issues/65\nkey) {\n    const [size, setSize] = React.useState({\n        width: 0,\n        height: 0,\n    });\n    React.useLayoutEffect(() => {\n        if (!(ref === null || ref === void 0 ? void 0 : ref.current)) {\n            return undefined;\n        }\n        const handleResize = (entries) => {\n            if (!Array.isArray(entries)) {\n                return;\n            }\n            const entry = entries[0];\n            if (entry.borderBoxSize) {\n                const borderBoxSize = entry.borderBoxSize[0]\n                    ? entry.borderBoxSize[0]\n                    : entry.borderBoxSize;\n                // ...but old versions of Firefox treat it as a single item\n                // https://github.com/mdn/dom-examples/blob/main/resize-observer/resize-observer-text.html#L88\n                setSize({\n                    width: round(borderBoxSize.inlineSize, ROUND_PRESICION),\n                    height: round(borderBoxSize.blockSize, ROUND_PRESICION),\n                });\n            }\n            else {\n                const target = entry.target;\n                setSize({\n                    width: round(target.offsetWidth, ROUND_PRESICION),\n                    height: round(target.offsetHeight, ROUND_PRESICION),\n                });\n            }\n        };\n        const observer = new ResizeObserver(throttle(handleResize, RESIZE_THROTTLE));\n        observer.observe(ref.current);\n        return () => {\n            observer.disconnect();\n        };\n    }, [ref, key]);\n    return size;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,MAAMC,eAAe,GAAG,EAAE;AAC1B,MAAMC,eAAe,GAAG,CAAC;AACzB,OAAO,SAASC,cAAcA,CAACC,GAAG;AAClC;AACA;AACA;AACAC,GAAG,EAAE;EACD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC;IACnCC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACZ,CAAC,CAAC;EACFZ,KAAK,CAACa,eAAe,CAAC,MAAM;IACxB,IAAI,EAAEP,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,GAAG,CAACQ,OAAO,CAAC,EAAE;MAC1D,OAAOC,SAAS;IACpB;IACA,MAAMC,YAAY,GAAIC,OAAO,IAAK;MAC9B,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;QACzB;MACJ;MACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,CAAC,CAAC;MACxB,IAAIG,KAAK,CAACC,aAAa,EAAE;QACrB,MAAMA,aAAa,GAAGD,KAAK,CAACC,aAAa,CAAC,CAAC,CAAC,GACtCD,KAAK,CAACC,aAAa,CAAC,CAAC,CAAC,GACtBD,KAAK,CAACC,aAAa;QACzB;QACA;QACAZ,OAAO,CAAC;UACJE,KAAK,EAAEV,KAAK,CAACoB,aAAa,CAACC,UAAU,EAAElB,eAAe,CAAC;UACvDQ,MAAM,EAAEX,KAAK,CAACoB,aAAa,CAACE,SAAS,EAAEnB,eAAe;QAC1D,CAAC,CAAC;MACN,CAAC,MACI;QACD,MAAMoB,MAAM,GAAGJ,KAAK,CAACI,MAAM;QAC3Bf,OAAO,CAAC;UACJE,KAAK,EAAEV,KAAK,CAACuB,MAAM,CAACC,WAAW,EAAErB,eAAe,CAAC;UACjDQ,MAAM,EAAEX,KAAK,CAACuB,MAAM,CAACE,YAAY,EAAEtB,eAAe;QACtD,CAAC,CAAC;MACN;IACJ,CAAC;IACD,MAAMuB,QAAQ,GAAG,IAAIC,cAAc,CAAC1B,QAAQ,CAACc,YAAY,EAAEb,eAAe,CAAC,CAAC;IAC5EwB,QAAQ,CAACE,OAAO,CAACvB,GAAG,CAACQ,OAAO,CAAC;IAC7B,OAAO,MAAM;MACTa,QAAQ,CAACG,UAAU,CAAC,CAAC;IACzB,CAAC;EACL,CAAC,EAAE,CAACxB,GAAG,EAAEC,GAAG,CAAC,CAAC;EACd,OAAOC,IAAI;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}