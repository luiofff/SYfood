{"ast":null,"code":"import { replaceParams } from './replace-params';\nimport { PluralForm } from './types';\nimport pluralizerEn from './plural/en';\nimport pluralizerRu from './plural/ru';\nexport * from './types';\nexport class I18N {\n  constructor(options) {\n    this.data = {};\n    this.lang = undefined;\n    this.pluralizers = {\n      en: pluralizerEn,\n      ru: pluralizerRu\n    };\n    this.logger = null;\n    this.logger = (options === null || options === void 0 ? void 0 : options.logger) || null;\n  }\n  setLang(lang) {\n    this.lang = lang;\n  }\n  configurePluralization(pluralizers) {\n    this.pluralizers = Object.assign({}, this.pluralizers, pluralizers);\n  }\n  registerKeyset(lang, keysetName, data = {}) {\n    if (this.data[lang] && Object.prototype.hasOwnProperty.call(this.data[lang], keysetName)) {\n      throw new Error(`Keyset '${keysetName}' is already registered, aborting!`);\n    }\n    this.data[lang] = Object.assign({}, this.data[lang], {\n      [keysetName]: data\n    });\n  }\n  registerKeysets(lang, data) {\n    Object.keys(data).forEach(keysetName => {\n      this.registerKeyset(lang, keysetName, data[keysetName]);\n    });\n  }\n  has(keysetName, key, lang) {\n    const languageData = this.getLanguageData(lang);\n    return Boolean(languageData && languageData[keysetName] && languageData[keysetName][key]);\n  }\n  i18n(keysetName, key, params) {\n    const languageData = this.getLanguageData(this.lang);\n    if (typeof languageData === 'undefined') {\n      throw new Error(`Language '${this.lang}' is not defined, make sure you call setLang for the same language you called registerKeysets for!`);\n    }\n    if (Object.keys(languageData).length === 0) {\n      this.warn('Language data is empty.');\n      return key;\n    }\n    const keyset = languageData[keysetName];\n    if (!keyset) {\n      this.warn('Keyset not found.', keysetName);\n      return key;\n    }\n    if (Object.keys(keyset).length === 0) {\n      this.warn('Keyset is empty.', keysetName);\n      return key;\n    }\n    const keyValue = keyset && keyset[key];\n    let result;\n    if (typeof keyValue === 'undefined') {\n      this.warn('Missing key.', keysetName, key);\n      return key;\n    }\n    if (Array.isArray(keyValue)) {\n      if (keyValue.length < 3) {\n        this.warn('Missing required plurals', keysetName, key);\n        return key;\n      }\n      const count = Number(params === null || params === void 0 ? void 0 : params.count);\n      if (Number.isNaN(count)) {\n        this.warn('Missing params.count for key.', keysetName, key);\n        return key;\n      }\n      const pluralizer = this.getLanguagePluralizer(this.lang);\n      result = keyValue[pluralizer(count, PluralForm)] || keyValue[PluralForm.Many];\n      if (keyValue[PluralForm.None] === undefined) {\n        this.warn('Missing key for 0', keysetName, key);\n      }\n    } else {\n      result = keyValue;\n    }\n    if (params) {\n      result = replaceParams(result, params);\n    }\n    return result;\n  }\n  keyset(keysetName) {\n    return (key, params) => {\n      return this.i18n(keysetName, key, params);\n    };\n  }\n  warn(msg, keyset, key) {\n    var _a;\n    let cacheKey = '';\n    if (keyset) {\n      cacheKey += keyset;\n      if (key) {\n        cacheKey += `.${key}`;\n      }\n    } else {\n      cacheKey = 'languageData';\n    }\n    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log(`I18n: ${msg}`, {\n      level: 'info',\n      logger: cacheKey,\n      extra: {\n        type: 'i18n'\n      }\n    });\n  }\n  getLanguageData(lang) {\n    const langCode = lang || this.lang;\n    return langCode ? this.data[langCode] : undefined;\n  }\n  getLanguagePluralizer(lang) {\n    const pluralizer = lang ? this.pluralizers[lang] : undefined;\n    if (!pluralizer) {\n      this.warn(`Pluralization is not configured for language '${lang}', falling back to the english ruleset`);\n    }\n    return pluralizer || pluralizerEn;\n  }\n}","map":{"version":3,"names":["replaceParams","PluralForm","pluralizerEn","pluralizerRu","I18N","constructor","options","data","lang","undefined","pluralizers","en","ru","logger","setLang","configurePluralization","Object","assign","registerKeyset","keysetName","prototype","hasOwnProperty","call","Error","registerKeysets","keys","forEach","has","key","languageData","getLanguageData","Boolean","i18n","params","length","warn","keyset","keyValue","result","Array","isArray","count","Number","isNaN","pluralizer","getLanguagePluralizer","Many","None","msg","_a","cacheKey","log","level","extra","type","langCode"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/i18n/build/esm/index.js"],"sourcesContent":["import { replaceParams } from './replace-params';\nimport { PluralForm } from './types';\nimport pluralizerEn from './plural/en';\nimport pluralizerRu from './plural/ru';\nexport * from './types';\nexport class I18N {\n    constructor(options) {\n        this.data = {};\n        this.lang = undefined;\n        this.pluralizers = {\n            en: pluralizerEn,\n            ru: pluralizerRu,\n        };\n        this.logger = null;\n        this.logger = (options === null || options === void 0 ? void 0 : options.logger) || null;\n    }\n    setLang(lang) {\n        this.lang = lang;\n    }\n    configurePluralization(pluralizers) {\n        this.pluralizers = Object.assign({}, this.pluralizers, pluralizers);\n    }\n    registerKeyset(lang, keysetName, data = {}) {\n        if (this.data[lang] && Object.prototype.hasOwnProperty.call(this.data[lang], keysetName)) {\n            throw new Error(`Keyset '${keysetName}' is already registered, aborting!`);\n        }\n        this.data[lang] = Object.assign({}, this.data[lang], { [keysetName]: data });\n    }\n    registerKeysets(lang, data) {\n        Object.keys(data).forEach((keysetName) => {\n            this.registerKeyset(lang, keysetName, data[keysetName]);\n        });\n    }\n    has(keysetName, key, lang) {\n        const languageData = this.getLanguageData(lang);\n        return Boolean(languageData && languageData[keysetName] && languageData[keysetName][key]);\n    }\n    i18n(keysetName, key, params) {\n        const languageData = this.getLanguageData(this.lang);\n        if (typeof languageData === 'undefined') {\n            throw new Error(`Language '${this.lang}' is not defined, make sure you call setLang for the same language you called registerKeysets for!`);\n        }\n        if (Object.keys(languageData).length === 0) {\n            this.warn('Language data is empty.');\n            return key;\n        }\n        const keyset = languageData[keysetName];\n        if (!keyset) {\n            this.warn('Keyset not found.', keysetName);\n            return key;\n        }\n        if (Object.keys(keyset).length === 0) {\n            this.warn('Keyset is empty.', keysetName);\n            return key;\n        }\n        const keyValue = keyset && keyset[key];\n        let result;\n        if (typeof keyValue === 'undefined') {\n            this.warn('Missing key.', keysetName, key);\n            return key;\n        }\n        if (Array.isArray(keyValue)) {\n            if (keyValue.length < 3) {\n                this.warn('Missing required plurals', keysetName, key);\n                return key;\n            }\n            const count = Number(params === null || params === void 0 ? void 0 : params.count);\n            if (Number.isNaN(count)) {\n                this.warn('Missing params.count for key.', keysetName, key);\n                return key;\n            }\n            const pluralizer = this.getLanguagePluralizer(this.lang);\n            result = keyValue[pluralizer(count, PluralForm)] || keyValue[PluralForm.Many];\n            if (keyValue[PluralForm.None] === undefined) {\n                this.warn('Missing key for 0', keysetName, key);\n            }\n        }\n        else {\n            result = keyValue;\n        }\n        if (params) {\n            result = replaceParams(result, params);\n        }\n        return result;\n    }\n    keyset(keysetName) {\n        return (key, params) => {\n            return this.i18n(keysetName, key, params);\n        };\n    }\n    warn(msg, keyset, key) {\n        var _a;\n        let cacheKey = '';\n        if (keyset) {\n            cacheKey += keyset;\n            if (key) {\n                cacheKey += `.${key}`;\n            }\n        }\n        else {\n            cacheKey = 'languageData';\n        }\n        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log(`I18n: ${msg}`, {\n            level: 'info',\n            logger: cacheKey,\n            extra: {\n                type: 'i18n'\n            }\n        });\n    }\n    getLanguageData(lang) {\n        const langCode = lang || this.lang;\n        return langCode ? this.data[langCode] : undefined;\n    }\n    getLanguagePluralizer(lang) {\n        const pluralizer = lang ? this.pluralizers[lang] : undefined;\n        if (!pluralizer) {\n            this.warn(`Pluralization is not configured for language '${lang}', falling back to the english ruleset`);\n        }\n        return pluralizer || pluralizerEn;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}