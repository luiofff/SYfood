{"ast":null,"code":"import React from 'react';\nimport { KeyCode } from '../../../../constants';\nimport { TextInput } from '../../../controls';\nimport { blockNew } from '../../../utils/cn';\nimport i18n from '../../i18n';\nimport './PaginationInput.css';\nconst b = blockNew('pagination-input');\nexport const PaginationInput = _ref => {\n  let {\n    numberOfPages,\n    size,\n    pageSize,\n    onUpdate,\n    className\n  } = _ref;\n  const [value, setValue] = React.useState('');\n  const handleUpdateValue = inputValue => {\n    if (inputValue === '' || /^[1-9][0-9]*$/.test(inputValue)) {\n      setValue(inputValue);\n    }\n  };\n  const handleUpdate = inputValue => {\n    if (!inputValue) {\n      return;\n    }\n    let numValue = Number(inputValue);\n    if (!Number.isInteger(numValue)) {\n      setValue('');\n      return;\n    }\n    const hasUpperLimit = numberOfPages > 0;\n    if (numValue > numberOfPages) {\n      numValue = hasUpperLimit ? numberOfPages : numValue;\n    } else if (numValue < 1) {\n      numValue = 1;\n    }\n    setValue('');\n    onUpdate(numValue, pageSize);\n  };\n  const handleBlur = event => handleUpdate(event.currentTarget.value);\n  const handleKeyUp = event => {\n    if (event.key === KeyCode.ENTER) {\n      handleUpdate(event.currentTarget.value);\n    }\n  };\n  return React.createElement(TextInput, {\n    className: b({\n      size\n    }, className),\n    placeholder: i18n('label_input-placeholder'),\n    size: size,\n    value: value,\n    onUpdate: handleUpdateValue,\n    onBlur: handleBlur,\n    onKeyUp: handleKeyUp\n  });\n};","map":{"version":3,"names":["React","KeyCode","TextInput","blockNew","i18n","b","PaginationInput","_ref","numberOfPages","size","pageSize","onUpdate","className","value","setValue","useState","handleUpdateValue","inputValue","test","handleUpdate","numValue","Number","isInteger","hasUpperLimit","handleBlur","event","currentTarget","handleKeyUp","key","ENTER","createElement","placeholder","onBlur","onKeyUp"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/Pagination/components/PaginationInput/PaginationInput.js"],"sourcesContent":["import React from 'react';\nimport { KeyCode } from '../../../../constants';\nimport { TextInput } from '../../../controls';\nimport { blockNew } from '../../../utils/cn';\nimport i18n from '../../i18n';\nimport './PaginationInput.css';\nconst b = blockNew('pagination-input');\nexport const PaginationInput = ({ numberOfPages, size, pageSize, onUpdate, className }) => {\n    const [value, setValue] = React.useState('');\n    const handleUpdateValue = (inputValue) => {\n        if (inputValue === '' || /^[1-9][0-9]*$/.test(inputValue)) {\n            setValue(inputValue);\n        }\n    };\n    const handleUpdate = (inputValue) => {\n        if (!inputValue) {\n            return;\n        }\n        let numValue = Number(inputValue);\n        if (!Number.isInteger(numValue)) {\n            setValue('');\n            return;\n        }\n        const hasUpperLimit = numberOfPages > 0;\n        if (numValue > numberOfPages) {\n            numValue = hasUpperLimit ? numberOfPages : numValue;\n        }\n        else if (numValue < 1) {\n            numValue = 1;\n        }\n        setValue('');\n        onUpdate(numValue, pageSize);\n    };\n    const handleBlur = (event) => handleUpdate(event.currentTarget.value);\n    const handleKeyUp = (event) => {\n        if (event.key === KeyCode.ENTER) {\n            handleUpdate(event.currentTarget.value);\n        }\n    };\n    return (React.createElement(TextInput, { className: b({ size }, className), placeholder: i18n('label_input-placeholder'), size: size, value: value, onUpdate: handleUpdateValue, onBlur: handleBlur, onKeyUp: handleKeyUp }));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,uBAAuB;AAC9B,MAAMC,CAAC,GAAGF,QAAQ,CAAC,kBAAkB,CAAC;AACtC,OAAO,MAAMG,eAAe,GAAGC,IAAA,IAA4D;EAAA,IAA3D;IAAEC,aAAa;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAAL,IAAA;EAClF,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMC,iBAAiB,GAAIC,UAAU,IAAK;IACtC,IAAIA,UAAU,KAAK,EAAE,IAAI,eAAe,CAACC,IAAI,CAACD,UAAU,CAAC,EAAE;MACvDH,QAAQ,CAACG,UAAU,CAAC;IACxB;EACJ,CAAC;EACD,MAAME,YAAY,GAAIF,UAAU,IAAK;IACjC,IAAI,CAACA,UAAU,EAAE;MACb;IACJ;IACA,IAAIG,QAAQ,GAAGC,MAAM,CAACJ,UAAU,CAAC;IACjC,IAAI,CAACI,MAAM,CAACC,SAAS,CAACF,QAAQ,CAAC,EAAE;MAC7BN,QAAQ,CAAC,EAAE,CAAC;MACZ;IACJ;IACA,MAAMS,aAAa,GAAGf,aAAa,GAAG,CAAC;IACvC,IAAIY,QAAQ,GAAGZ,aAAa,EAAE;MAC1BY,QAAQ,GAAGG,aAAa,GAAGf,aAAa,GAAGY,QAAQ;IACvD,CAAC,MACI,IAAIA,QAAQ,GAAG,CAAC,EAAE;MACnBA,QAAQ,GAAG,CAAC;IAChB;IACAN,QAAQ,CAAC,EAAE,CAAC;IACZH,QAAQ,CAACS,QAAQ,EAAEV,QAAQ,CAAC;EAChC,CAAC;EACD,MAAMc,UAAU,GAAIC,KAAK,IAAKN,YAAY,CAACM,KAAK,CAACC,aAAa,CAACb,KAAK,CAAC;EACrE,MAAMc,WAAW,GAAIF,KAAK,IAAK;IAC3B,IAAIA,KAAK,CAACG,GAAG,KAAK3B,OAAO,CAAC4B,KAAK,EAAE;MAC7BV,YAAY,CAACM,KAAK,CAACC,aAAa,CAACb,KAAK,CAAC;IAC3C;EACJ,CAAC;EACD,OAAQb,KAAK,CAAC8B,aAAa,CAAC5B,SAAS,EAAE;IAAEU,SAAS,EAAEP,CAAC,CAAC;MAAEI;IAAK,CAAC,EAAEG,SAAS,CAAC;IAAEmB,WAAW,EAAE3B,IAAI,CAAC,yBAAyB,CAAC;IAAEK,IAAI,EAAEA,IAAI;IAAEI,KAAK,EAAEA,KAAK;IAAEF,QAAQ,EAAEK,iBAAiB;IAAEgB,MAAM,EAAER,UAAU;IAAES,OAAO,EAAEN;EAAY,CAAC,CAAC;AAChO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}