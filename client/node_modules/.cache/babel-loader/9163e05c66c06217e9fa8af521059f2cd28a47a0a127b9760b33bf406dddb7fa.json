{"ast":null,"code":"var _jsxFileName = \"/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/src/pages/ChatGPT/Gpt.jsx\",\n  _s = $RefreshSig$();\nimport react, { useState, useEffect } from 'react';\nimport openai from 'openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gpt = () => {\n  _s();\n  const [response, setResponse] = useState('');\n  const [prompt, setPrompt] = useState('');\n  useEffect(() => {\n    openai.apiKey = \"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\";\n    openai.Completion.create({\n      engine: \"text-davinci-002\",\n      prompt: prompt\n    }).then(response => {\n      console.log(response);\n      setResponse(response.choices[0].text);\n    });\n  }, [prompt]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Gpt, \"QKpGRaDsQ0o1KrqGoftXNILP5r4=\");\n_c = Gpt;\nexport default Gpt;\nvar _c;\n$RefreshReg$(_c, \"Gpt\");","map":{"version":3,"names":["react","useState","useEffect","openai","jsxDEV","_jsxDEV","Gpt","_s","response","setResponse","prompt","setPrompt","apiKey","Completion","create","engine","then","console","log","choices","text","onSubmit","handleSubmit","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/src/pages/ChatGPT/Gpt.jsx"],"sourcesContent":["import react, { useState, useEffect } from 'react';\nimport openai from 'openai';\n\nconst Gpt = () => {\n  const [response, setResponse] = useState('');\n  const [prompt, setPrompt] = useState('');\n  \n  useEffect(() => {\n    openai.apiKey = \"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\";\n    openai.Completion\n      .create({\n        engine: \"text-davinci-002\",\n        prompt: prompt,\n      })\n      .then(response => {\n        console.log(response);\n        setResponse(response.choices[0].text);\n      });\n  }, [prompt]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={prompt} onChange={e => setPrompt(e.target.value)} />\n      <button type=\"submit\">Submit</button>\n    </form>\n  )\n}\n\nexport default Gpt;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdC,MAAM,CAACS,MAAM,GAAG,qDAAqD;IACrET,MAAM,CAACU,UAAU,CACdC,MAAM,CAAC;MACNC,MAAM,EAAE,kBAAkB;MAC1BL,MAAM,EAAEA;IACV,CAAC,CAAC,CACDM,IAAI,CAACR,QAAQ,IAAI;MAChBS,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;MACrBC,WAAW,CAACD,QAAQ,CAACW,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;IACvC,CAAC,CAAC;EACN,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA;IAAMgB,QAAQ,EAAEC,YAAa;IAAAC,QAAA,gBAC3BlB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEf,MAAO;MAACgB,QAAQ,EAAEC,CAAC,IAAIhB,SAAS,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9E3B,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAAzB,EAAA,CAvBKD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAyBT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}