{"ast":null,"code":"import React from 'react';\n/**\n * @deprecated use useFocusWithin instead, drop on next major\n *\n * Calls callback on focus element outside of some React sub-tree\n *\n * @param {Object} props\n * @param {true} [props.enabled=true] - if false, will not track focus outside events\n * @param {onFocusOutsideCallback} props.onFocusOutside - handler for focus outside event\n * @returns container props\n *\n * @example\n *\n * function Select() {\n *   const [open, setOpen] = React.useState(false);\n *\n *   const handleFocusOutside = React.useCallback(() => {setOpen(false);}, []);\n *\n *   const {onFocus, onBlur} = useOnFocusOutside({onFocusOutside: handleFocusOutside, enabled: open});\n *\n *   return (\n *     <span onFocus={onFocus} onBlur={onBlur}>\n *       <Button onClick={() => {setOpen(true);}}>Select</Button>\n *       <Popup open={open}>\n *          ...\n *       </Popup>\n *     </span>\n *   );\n *  }\n * }\n */\nexport function useOnFocusOutside({\n  onFocusOutside,\n  enabled = true\n}) {\n  const capturedRef = React.useRef(false);\n  React.useEffect(() => {\n    if (!enabled) {\n      return undefined;\n    }\n    const handleFocus = function (event) {\n      capturedRef.current = false;\n      window.setTimeout(() => {\n        if (!capturedRef.current) {\n          onFocusOutside(event);\n        }\n      }, 0);\n    };\n    window.addEventListener('focus', handleFocus, {\n      capture: true\n    });\n    return () => {\n      window.removeEventListener('focus', handleFocus, {\n        capture: true\n      });\n    };\n  }, [enabled, onFocusOutside]);\n  const handleFocusIn = React.useCallback(() => {\n    capturedRef.current = true;\n  }, []);\n  const handleFocusOut = React.useCallback(event => {\n    if (enabled && (event.relatedTarget === null || event.relatedTarget === document.body)) {\n      onFocusOutside(event.nativeEvent);\n    }\n  }, [onFocusOutside, enabled]);\n  return {\n    onFocus: handleFocusIn,\n    onBlur: handleFocusOut\n  };\n}","map":{"version":3,"names":["React","useOnFocusOutside","onFocusOutside","enabled","capturedRef","useRef","useEffect","undefined","handleFocus","event","current","window","setTimeout","addEventListener","capture","removeEventListener","handleFocusIn","useCallback","handleFocusOut","relatedTarget","document","body","nativeEvent","onFocus","onBlur"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/utils/useOnFocusOutside.js"],"sourcesContent":["import React from 'react';\n/**\n * @deprecated use useFocusWithin instead, drop on next major\n *\n * Calls callback on focus element outside of some React sub-tree\n *\n * @param {Object} props\n * @param {true} [props.enabled=true] - if false, will not track focus outside events\n * @param {onFocusOutsideCallback} props.onFocusOutside - handler for focus outside event\n * @returns container props\n *\n * @example\n *\n * function Select() {\n *   const [open, setOpen] = React.useState(false);\n *\n *   const handleFocusOutside = React.useCallback(() => {setOpen(false);}, []);\n *\n *   const {onFocus, onBlur} = useOnFocusOutside({onFocusOutside: handleFocusOutside, enabled: open});\n *\n *   return (\n *     <span onFocus={onFocus} onBlur={onBlur}>\n *       <Button onClick={() => {setOpen(true);}}>Select</Button>\n *       <Popup open={open}>\n *          ...\n *       </Popup>\n *     </span>\n *   );\n *  }\n * }\n */\nexport function useOnFocusOutside({ onFocusOutside, enabled = true }) {\n    const capturedRef = React.useRef(false);\n    React.useEffect(() => {\n        if (!enabled) {\n            return undefined;\n        }\n        const handleFocus = function (event) {\n            capturedRef.current = false;\n            window.setTimeout(() => {\n                if (!capturedRef.current) {\n                    onFocusOutside(event);\n                }\n            }, 0);\n        };\n        window.addEventListener('focus', handleFocus, { capture: true });\n        return () => {\n            window.removeEventListener('focus', handleFocus, { capture: true });\n        };\n    }, [enabled, onFocusOutside]);\n    const handleFocusIn = React.useCallback(() => {\n        capturedRef.current = true;\n    }, []);\n    const handleFocusOut = React.useCallback((event) => {\n        if (enabled &&\n            (event.relatedTarget === null || event.relatedTarget === document.body)) {\n            onFocusOutside(event.nativeEvent);\n        }\n    }, [onFocusOutside, enabled]);\n    return { onFocus: handleFocusIn, onBlur: handleFocusOut };\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAAC;EAAEC,cAAc;EAAEC,OAAO,GAAG;AAAK,CAAC,EAAE;EAClE,MAAMC,WAAW,GAAGJ,KAAK,CAACK,MAAM,CAAC,KAAK,CAAC;EACvCL,KAAK,CAACM,SAAS,CAAC,MAAM;IAClB,IAAI,CAACH,OAAO,EAAE;MACV,OAAOI,SAAS;IACpB;IACA,MAAMC,WAAW,GAAG,SAAAA,CAAUC,KAAK,EAAE;MACjCL,WAAW,CAACM,OAAO,GAAG,KAAK;MAC3BC,MAAM,CAACC,UAAU,CAAC,MAAM;QACpB,IAAI,CAACR,WAAW,CAACM,OAAO,EAAE;UACtBR,cAAc,CAACO,KAAK,CAAC;QACzB;MACJ,CAAC,EAAE,CAAC,CAAC;IACT,CAAC;IACDE,MAAM,CAACE,gBAAgB,CAAC,OAAO,EAAEL,WAAW,EAAE;MAAEM,OAAO,EAAE;IAAK,CAAC,CAAC;IAChE,OAAO,MAAM;MACTH,MAAM,CAACI,mBAAmB,CAAC,OAAO,EAAEP,WAAW,EAAE;QAAEM,OAAO,EAAE;MAAK,CAAC,CAAC;IACvE,CAAC;EACL,CAAC,EAAE,CAACX,OAAO,EAAED,cAAc,CAAC,CAAC;EAC7B,MAAMc,aAAa,GAAGhB,KAAK,CAACiB,WAAW,CAAC,MAAM;IAC1Cb,WAAW,CAACM,OAAO,GAAG,IAAI;EAC9B,CAAC,EAAE,EAAE,CAAC;EACN,MAAMQ,cAAc,GAAGlB,KAAK,CAACiB,WAAW,CAAER,KAAK,IAAK;IAChD,IAAIN,OAAO,KACNM,KAAK,CAACU,aAAa,KAAK,IAAI,IAAIV,KAAK,CAACU,aAAa,KAAKC,QAAQ,CAACC,IAAI,CAAC,EAAE;MACzEnB,cAAc,CAACO,KAAK,CAACa,WAAW,CAAC;IACrC;EACJ,CAAC,EAAE,CAACpB,cAAc,EAAEC,OAAO,CAAC,CAAC;EAC7B,OAAO;IAAEoB,OAAO,EAAEP,aAAa;IAAEQ,MAAM,EAAEN;EAAe,CAAC;AAC7D"},"metadata":{},"sourceType":"module","externalDependencies":[]}