{"ast":null,"code":"import React from 'react';\nimport { CopyToClipboardStatus } from '../CopyToClipboard/types';\nimport { block } from '../utils/cn';\nimport { a11yHiddenSvgProps } from '../utils/svg';\nimport './ClipboardIcon.css';\nconst b = block('clipboard-icon');\nconst renderStatusPath = path => React.createElement(\"path\", {\n  stroke: \"currentColor\",\n  fill: \"transparent\",\n  className: b('state'),\n  strokeWidth: \"1.5\",\n  d: path\n});\nconst STATUS_PATH = {\n  [CopyToClipboardStatus.Success]: renderStatusPath('M9.5 13l3 3l5 -5'),\n  [CopyToClipboardStatus.Error]: renderStatusPath('M9.5 10l8 8m-8 0l8 -8')\n};\nexport function ClipboardIcon({\n  size,\n  status,\n  className\n}) {\n  return React.createElement(\"svg\", Object.assign({\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    className: b(null, className)\n  }, a11yHiddenSvgProps), React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"\n  }), status === CopyToClipboardStatus.Pending ? null : STATUS_PATH[status]);\n}","map":{"version":3,"names":["React","CopyToClipboardStatus","block","a11yHiddenSvgProps","b","renderStatusPath","path","createElement","stroke","fill","className","strokeWidth","d","STATUS_PATH","Success","Error","ClipboardIcon","size","status","Object","assign","width","height","viewBox","Pending"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/ClipboardIcon/ClipboardIcon.js"],"sourcesContent":["import React from 'react';\nimport { CopyToClipboardStatus } from '../CopyToClipboard/types';\nimport { block } from '../utils/cn';\nimport { a11yHiddenSvgProps } from '../utils/svg';\nimport './ClipboardIcon.css';\nconst b = block('clipboard-icon');\nconst renderStatusPath = (path) => (React.createElement(\"path\", { stroke: \"currentColor\", fill: \"transparent\", className: b('state'), strokeWidth: \"1.5\", d: path }));\nconst STATUS_PATH = {\n    [CopyToClipboardStatus.Success]: renderStatusPath('M9.5 13l3 3l5 -5'),\n    [CopyToClipboardStatus.Error]: renderStatusPath('M9.5 10l8 8m-8 0l8 -8'),\n};\nexport function ClipboardIcon({ size, status, className }) {\n    return (React.createElement(\"svg\", Object.assign({ width: size, height: size, viewBox: \"0 0 24 24\", className: b(null, className) }, a11yHiddenSvgProps),\n        React.createElement(\"path\", { fill: \"currentColor\", d: \"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" }),\n        status === CopyToClipboardStatus.Pending ? null : STATUS_PATH[status]));\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,kBAAkB,QAAQ,cAAc;AACjD,OAAO,qBAAqB;AAC5B,MAAMC,CAAC,GAAGF,KAAK,CAAC,gBAAgB,CAAC;AACjC,MAAMG,gBAAgB,GAAIC,IAAI,IAAMN,KAAK,CAACO,aAAa,CAAC,MAAM,EAAE;EAAEC,MAAM,EAAE,cAAc;EAAEC,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAEN,CAAC,CAAC,OAAO,CAAC;EAAEO,WAAW,EAAE,KAAK;EAAEC,CAAC,EAAEN;AAAK,CAAC,CAAE;AACrK,MAAMO,WAAW,GAAG;EAChB,CAACZ,qBAAqB,CAACa,OAAO,GAAGT,gBAAgB,CAAC,kBAAkB,CAAC;EACrE,CAACJ,qBAAqB,CAACc,KAAK,GAAGV,gBAAgB,CAAC,uBAAuB;AAC3E,CAAC;AACD,OAAO,SAASW,aAAaA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAER;AAAU,CAAC,EAAE;EACvD,OAAQV,KAAK,CAACO,aAAa,CAAC,KAAK,EAAEY,MAAM,CAACC,MAAM,CAAC;IAAEC,KAAK,EAAEJ,IAAI;IAAEK,MAAM,EAAEL,IAAI;IAAEM,OAAO,EAAE,WAAW;IAAEb,SAAS,EAAEN,CAAC,CAAC,IAAI,EAAEM,SAAS;EAAE,CAAC,EAAEP,kBAAkB,CAAC,EACpJH,KAAK,CAACO,aAAa,CAAC,MAAM,EAAE;IAAEE,IAAI,EAAE,cAAc;IAAEG,CAAC,EAAE;EAA6H,CAAC,CAAC,EACtLM,MAAM,KAAKjB,qBAAqB,CAACuB,OAAO,GAAG,IAAI,GAAGX,WAAW,CAACK,MAAM,CAAC,CAAC;AAC9E"},"metadata":{},"sourceType":"module","externalDependencies":[]}