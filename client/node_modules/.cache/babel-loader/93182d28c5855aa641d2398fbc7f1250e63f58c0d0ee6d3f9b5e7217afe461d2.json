{"ast":null,"code":"var _jsxFileName = \"/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/src/pages/ChatGPT/Gpt.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport openai from 'openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gpt = () => {\n  _s();\n  const [response, setResponse] = useState('');\n  const [prompt, setPrompt] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    openai.apiKey = \"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\";\n    openai.Completion.create({\n      engine: \"text-davinci-002\",\n      prompt: prompt\n    }).then(response => {\n      console.log(response);\n      setResponse(response.choices[0].text);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Gpt, \"Il8gOUoQWIIKCY09p/tuRhUa5M8=\");\n_c = Gpt;\nexport default Gpt;\nvar _c;\n$RefreshReg$(_c, \"Gpt\");","map":{"version":3,"names":["useState","useEffect","openai","jsxDEV","_jsxDEV","Gpt","_s","response","setResponse","prompt","setPrompt","handleSubmit","e","preventDefault","apiKey","Completion","create","engine","then","console","log","choices","text","onSubmit","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/src/pages/ChatGPT/Gpt.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport openai from 'openai';\n\nconst Gpt = () => {\n  const [response, setResponse] = useState('');\n  const [prompt, setPrompt] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    openai.apiKey = \"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\";\n    openai\n      .Completion\n      .create({\n        engine: \"text-davinci-002\",\n        prompt: prompt,\n      })\n      .then(response => {\n        console.log(response);\n        setResponse(response.choices[0].text);\n      });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={prompt} onChange={e => setPrompt(e.target.value)} />\n      <button type=\"submit\">Submit</button>\n    </form>\n  )\n}\n\nexport default Gpt;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBX,MAAM,CAACY,MAAM,GAAG,qDAAqD;IACrEZ,MAAM,CACHa,UAAU,CACVC,MAAM,CAAC;MACNC,MAAM,EAAE,kBAAkB;MAC1BR,MAAM,EAAEA;IACV,CAAC,CAAC,CACDS,IAAI,CAACX,QAAQ,IAAI;MAChBY,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;MACrBC,WAAW,CAACD,QAAQ,CAACc,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;IACvC,CAAC,CAAC;EACN,CAAC;EAED,oBACElB,OAAA;IAAMmB,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBAC3BpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEjB,MAAO;MAACkB,QAAQ,EAAEf,CAAC,IAAIF,SAAS,CAACE,CAAC,CAACgB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9E5B,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAA1B,EAAA,CAzBKD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA2BT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}