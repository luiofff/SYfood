{"ast":null,"code":"import React from 'react';\nimport { Ellipsis } from '@gravity-ui/icons';\nimport { useActionHandlers } from '../../hooks/useActionHandlers';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { cnDropdownMenu } from './DropdownMenu.classname';\nimport { DropdownMenuContext } from './DropdownMenuContext';\nimport { DropdownMenuItem as DropdownMenuItemComponent } from './DropdownMenuItem';\nimport { DropdownMenuNavigationContextProvider } from './DropdownMenuNavigationContext';\nimport { DropdownMenuPopup } from './DropdownMenuPopup';\nimport { dropdownMenuSeparator } from './constants';\nimport { usePopupVisibility } from './hooks/usePopupVisibility';\nimport { useScrollHandler } from './hooks/useScrollHandler';\nimport { toItemList } from './utils/toItemList';\nimport './DropdownMenu.css';\nconst DropdownMenu = ({\n  items = [],\n  size = 'm',\n  icon = React.createElement(Icon, {\n    data: Ellipsis\n  }),\n  open,\n  onOpenToggle,\n  hideOnScroll = true,\n  data,\n  disabled,\n  switcher,\n  renderSwitcher,\n  switcherWrapperClassName,\n  defaultSwitcherProps,\n  defaultSwitcherClassName,\n  onSwitcherClick,\n  menuProps,\n  popupProps,\n  children\n}) => {\n  const anchorRef = React.useRef(null);\n  const {\n    isPopupShown,\n    togglePopup,\n    closePopup\n  } = usePopupVisibility(open, onOpenToggle, disabled);\n  useScrollHandler(closePopup, anchorRef, !isPopupShown || !hideOnScroll);\n  const contextValue = React.useMemo(() => ({\n    toggle: togglePopup,\n    data\n  }), [data, togglePopup]);\n  const itemsList = React.useMemo(() => toItemList(items, dropdownMenuSeparator), [items]);\n  const handleSwitcherClick = React.useCallback(event => {\n    if (disabled) {\n      return;\n    }\n    onSwitcherClick === null || onSwitcherClick === void 0 ? void 0 : onSwitcherClick(event);\n    togglePopup();\n  }, [disabled, onSwitcherClick, togglePopup]);\n  const {\n    onKeyDown: handleSwitcherKeyDown\n  } = useActionHandlers(handleSwitcherClick);\n  const switcherProps = React.useMemo(() => ({\n    onClick: handleSwitcherClick,\n    onKeyDown: handleSwitcherKeyDown\n  }), [handleSwitcherClick, handleSwitcherKeyDown]);\n  return React.createElement(DropdownMenuContext.Provider, {\n    value: contextValue\n  }, React.createElement(\"div\", Object.assign({\n    ref: anchorRef,\n    className: cnDropdownMenu('switcher-wrapper', switcherWrapperClassName)\n  }, renderSwitcher ? {} : switcherProps), (renderSwitcher === null || renderSwitcher === void 0 ? void 0 : renderSwitcher(switcherProps)) || switcher || React.createElement(Button, Object.assign({\n    view: \"flat\",\n    size: size\n  }, defaultSwitcherProps, {\n    className: cnDropdownMenu('switcher-button', defaultSwitcherClassName),\n    disabled: disabled\n  }), icon)), React.createElement(DropdownMenuNavigationContextProvider, {\n    anchorRef: anchorRef,\n    disabled: !isPopupShown\n  }, React.createElement(DropdownMenuPopup, {\n    items: itemsList,\n    open: isPopupShown,\n    size: size,\n    menuProps: menuProps,\n    anchorRef: anchorRef,\n    onClose: closePopup,\n    popupProps: popupProps\n  }, children)));\n};\nconst DropdownMenuExport = Object.assign(DropdownMenu, {\n  Item: DropdownMenuItemComponent\n});\nexport { DropdownMenuExport as DropdownMenu };","map":{"version":3,"names":["React","Ellipsis","useActionHandlers","Button","Icon","cnDropdownMenu","DropdownMenuContext","DropdownMenuItem","DropdownMenuItemComponent","DropdownMenuNavigationContextProvider","DropdownMenuPopup","dropdownMenuSeparator","usePopupVisibility","useScrollHandler","toItemList","DropdownMenu","items","size","icon","createElement","data","open","onOpenToggle","hideOnScroll","disabled","switcher","renderSwitcher","switcherWrapperClassName","defaultSwitcherProps","defaultSwitcherClassName","onSwitcherClick","menuProps","popupProps","children","anchorRef","useRef","isPopupShown","togglePopup","closePopup","contextValue","useMemo","toggle","itemsList","handleSwitcherClick","useCallback","event","onKeyDown","handleSwitcherKeyDown","switcherProps","onClick","Provider","value","Object","assign","ref","className","view","onClose","DropdownMenuExport","Item"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/DropdownMenu/DropdownMenu.js"],"sourcesContent":["import React from 'react';\nimport { Ellipsis } from '@gravity-ui/icons';\nimport { useActionHandlers } from '../../hooks/useActionHandlers';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { cnDropdownMenu } from './DropdownMenu.classname';\nimport { DropdownMenuContext } from './DropdownMenuContext';\nimport { DropdownMenuItem as DropdownMenuItemComponent } from './DropdownMenuItem';\nimport { DropdownMenuNavigationContextProvider } from './DropdownMenuNavigationContext';\nimport { DropdownMenuPopup } from './DropdownMenuPopup';\nimport { dropdownMenuSeparator } from './constants';\nimport { usePopupVisibility } from './hooks/usePopupVisibility';\nimport { useScrollHandler } from './hooks/useScrollHandler';\nimport { toItemList } from './utils/toItemList';\nimport './DropdownMenu.css';\nconst DropdownMenu = ({ items = [], size = 'm', icon = React.createElement(Icon, { data: Ellipsis }), open, onOpenToggle, hideOnScroll = true, data, disabled, switcher, renderSwitcher, switcherWrapperClassName, defaultSwitcherProps, defaultSwitcherClassName, onSwitcherClick, menuProps, popupProps, children, }) => {\n    const anchorRef = React.useRef(null);\n    const { isPopupShown, togglePopup, closePopup } = usePopupVisibility(open, onOpenToggle, disabled);\n    useScrollHandler(closePopup, anchorRef, !isPopupShown || !hideOnScroll);\n    const contextValue = React.useMemo(() => ({\n        toggle: togglePopup,\n        data,\n    }), [data, togglePopup]);\n    const itemsList = React.useMemo(() => toItemList(items, dropdownMenuSeparator), [items]);\n    const handleSwitcherClick = React.useCallback((event) => {\n        if (disabled) {\n            return;\n        }\n        onSwitcherClick === null || onSwitcherClick === void 0 ? void 0 : onSwitcherClick(event);\n        togglePopup();\n    }, [disabled, onSwitcherClick, togglePopup]);\n    const { onKeyDown: handleSwitcherKeyDown } = useActionHandlers(handleSwitcherClick);\n    const switcherProps = React.useMemo(() => ({\n        onClick: handleSwitcherClick,\n        onKeyDown: handleSwitcherKeyDown,\n    }), [handleSwitcherClick, handleSwitcherKeyDown]);\n    return (React.createElement(DropdownMenuContext.Provider, { value: contextValue },\n        React.createElement(\"div\", Object.assign({ ref: anchorRef, className: cnDropdownMenu('switcher-wrapper', switcherWrapperClassName) }, (renderSwitcher ? {} : switcherProps)), (renderSwitcher === null || renderSwitcher === void 0 ? void 0 : renderSwitcher(switcherProps)) || switcher || (React.createElement(Button, Object.assign({ view: \"flat\", size: size }, defaultSwitcherProps, { className: cnDropdownMenu('switcher-button', defaultSwitcherClassName), disabled: disabled }), icon))),\n        React.createElement(DropdownMenuNavigationContextProvider, { anchorRef: anchorRef, disabled: !isPopupShown },\n            React.createElement(DropdownMenuPopup, { items: itemsList, open: isPopupShown, size: size, menuProps: menuProps, anchorRef: anchorRef, onClose: closePopup, popupProps: popupProps }, children))));\n};\nconst DropdownMenuExport = Object.assign(DropdownMenu, { Item: DropdownMenuItemComponent });\nexport { DropdownMenuExport as DropdownMenu };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}