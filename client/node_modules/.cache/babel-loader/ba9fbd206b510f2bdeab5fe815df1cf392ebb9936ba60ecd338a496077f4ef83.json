{"ast":null,"code":"import React from 'react';\nimport _throttle from 'lodash/throttle';\nimport { block } from '../utils/cn';\nimport { BreadcrumbsItem as Item } from './BreadcrumbsItem';\nimport { BreadcrumbsMore } from './BreadcrumbsMore';\nimport { BreadcrumbsSeparator } from './BreadcrumbsSeparator';\nimport './Breadcrumbs.css';\nconst RESIZE_THROTTLE = 200;\nconst MORE_ITEM_WIDTH = 34;\nconst DEFAULT_POPUP_PLACEMENT = ['bottom', 'top'];\nconst b = block('breadcrumbs');\nexport var LastDisplayedItemsCount;\n(function (LastDisplayedItemsCount) {\n  LastDisplayedItemsCount[LastDisplayedItemsCount[\"One\"] = 1] = \"One\";\n  LastDisplayedItemsCount[LastDisplayedItemsCount[\"Two\"] = 2] = \"Two\";\n})(LastDisplayedItemsCount || (LastDisplayedItemsCount = {}));\nexport var FirstDisplayedItemsCount;\n(function (FirstDisplayedItemsCount) {\n  FirstDisplayedItemsCount[FirstDisplayedItemsCount[\"Zero\"] = 0] = \"Zero\";\n  FirstDisplayedItemsCount[FirstDisplayedItemsCount[\"One\"] = 1] = \"One\";\n})(FirstDisplayedItemsCount || (FirstDisplayedItemsCount = {}));\nexport class Breadcrumbs extends React.Component {\n  static prepareInitialState(props) {\n    const {\n      firstDisplayedItemsCount\n    } = props;\n    return {\n      calculated: false,\n      rootItem: firstDisplayedItemsCount ? props.items[0] : undefined,\n      visibleItems: props.items.slice(firstDisplayedItemsCount),\n      hiddenItems: [],\n      allItems: props.items\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.allItems !== props.items) {\n      return Breadcrumbs.prepareInitialState(props);\n    }\n    return null;\n  }\n  constructor(props) {\n    super(props);\n    this.handleResize = () => {\n      const state = Breadcrumbs.prepareInitialState(this.props);\n      this.setState(state, this.recalculate);\n    };\n    this.handleResize = _throttle(this.handleResize, RESIZE_THROTTLE);\n    this.resizeObserver = new ResizeObserver(this.handleResize);\n    this.container = React.createRef();\n    this.state = Breadcrumbs.prepareInitialState(props);\n  }\n  componentDidMount() {\n    this.recalculate();\n    this.resizeObserver.observe(this.container.current);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.items !== this.state.allItems) {\n      this.recalculate();\n    }\n  }\n  componentWillUnmount() {\n    this.resizeObserver.disconnect();\n  }\n  render() {\n    const {\n      className\n    } = this.props;\n    const {\n      calculated\n    } = this.state;\n    const rootItem = this.renderRootItem();\n    return React.createElement(\"div\", {\n      className: b({\n        calculated: calculated ? 'yes' : 'no'\n      }, className)\n    }, React.createElement(\"div\", {\n      className: b('inner'),\n      ref: this.container\n    }, rootItem, this.renderMoreItem(), this.renderVisibleItems()));\n  }\n  renderItem(data, isCurrent, isPrevCurrent) {\n    const {\n      renderItemContent\n    } = this.props;\n    return React.createElement(Item, {\n      data: data,\n      isCurrent: isCurrent,\n      isPrevCurrent: isPrevCurrent,\n      renderItem: renderItemContent\n    });\n  }\n  renderItemDivider() {\n    const {\n      renderItemDivider\n    } = this.props;\n    return React.createElement(BreadcrumbsSeparator, {\n      renderItemDivider: renderItemDivider\n    });\n  }\n  renderRootItem() {\n    const {\n      renderRootContent,\n      renderItemContent\n    } = this.props;\n    const {\n      rootItem,\n      visibleItems\n    } = this.state;\n    const isCurrent = visibleItems.length === 0;\n    if (!rootItem) {\n      return null;\n    }\n    return React.createElement(Item, {\n      data: rootItem,\n      isCurrent: isCurrent,\n      isPrevCurrent: false,\n      renderItem: renderRootContent || renderItemContent\n    });\n  }\n  renderVisibleItems() {\n    const {\n      visibleItems\n    } = this.state;\n    return visibleItems.map((item, index, items) => {\n      const isCurrent = index === items.length - 1;\n      const isPrevCurrent = index === items.length - 2;\n      return React.createElement(React.Fragment, {\n        key: index\n      }, this.renderItemDivider(), this.renderItem(item, isCurrent, isPrevCurrent));\n    });\n  }\n  renderMoreItem() {\n    const {\n      hiddenItems\n    } = this.state;\n    if (hiddenItems.length === 0) {\n      return null;\n    }\n    const {\n      popupStyle,\n      popupPlacement,\n      renderItemDivider\n    } = this.props;\n    return React.createElement(React.Fragment, null, React.createElement(BreadcrumbsSeparator, {\n      renderItemDivider: renderItemDivider\n    }), React.createElement(BreadcrumbsMore, {\n      items: hiddenItems,\n      popupPlacement: popupPlacement,\n      popupStyle: popupStyle\n    }));\n  }\n  recalculate() {\n    const {\n      items: allItems,\n      lastDisplayedItemsCount,\n      firstDisplayedItemsCount\n    } = this.props;\n    if (this.container.current) {\n      const dividers = Array.from(this.container.current.querySelectorAll(\".\".concat(b('divider'))));\n      const items = Array.from(this.container.current.querySelectorAll(\".\".concat(b('item'))));\n      const availableWidth = this.container.current.offsetWidth;\n      const itemsWidths = items.map(elem => elem.scrollWidth);\n      const dividersWidths = dividers.map(elem => elem.offsetWidth);\n      const buttonsWidth = itemsWidths.reduce((total, width, index, widths) => {\n        const isLastItem = widths.length - 1 === index;\n        const isItemBeforeLast = lastDisplayedItemsCount === LastDisplayedItemsCount.Two && widths.length - 2 === index;\n        if (isLastItem || isItemBeforeLast) {\n          return total + Math.min(width, 200);\n        }\n        return total + width;\n      }, 0);\n      const dividersWidth = dividersWidths.reduce((total, width) => total + width, 0);\n      let totalWidth = buttonsWidth + dividersWidth;\n      let visibleItemsStartIndex = 1;\n      while (totalWidth > availableWidth && visibleItemsStartIndex < items.length - lastDisplayedItemsCount) {\n        if (visibleItemsStartIndex === 1) {\n          totalWidth += MORE_ITEM_WIDTH + dividersWidths[visibleItemsStartIndex];\n        }\n        totalWidth -= itemsWidths[visibleItemsStartIndex] + dividersWidths[visibleItemsStartIndex];\n        visibleItemsStartIndex++;\n      }\n      this.setState({\n        calculated: true,\n        visibleItems: allItems.slice(visibleItemsStartIndex - (1 - firstDisplayedItemsCount)),\n        hiddenItems: allItems.slice(firstDisplayedItemsCount, visibleItemsStartIndex - (1 - firstDisplayedItemsCount))\n      });\n    }\n  }\n}\nBreadcrumbs.defaultProps = {\n  popupPlacement: DEFAULT_POPUP_PLACEMENT\n};","map":{"version":3,"names":["React","_throttle","block","BreadcrumbsItem","Item","BreadcrumbsMore","BreadcrumbsSeparator","RESIZE_THROTTLE","MORE_ITEM_WIDTH","DEFAULT_POPUP_PLACEMENT","b","LastDisplayedItemsCount","FirstDisplayedItemsCount","Breadcrumbs","Component","prepareInitialState","props","firstDisplayedItemsCount","calculated","rootItem","items","undefined","visibleItems","slice","hiddenItems","allItems","getDerivedStateFromProps","state","constructor","handleResize","setState","recalculate","resizeObserver","ResizeObserver","container","createRef","componentDidMount","observe","current","componentDidUpdate","prevProps","componentWillUnmount","disconnect","render","className","renderRootItem","createElement","ref","renderMoreItem","renderVisibleItems","renderItem","data","isCurrent","isPrevCurrent","renderItemContent","renderItemDivider","renderRootContent","length","map","item","index","Fragment","key","popupStyle","popupPlacement","lastDisplayedItemsCount","dividers","Array","from","querySelectorAll","concat","availableWidth","offsetWidth","itemsWidths","elem","scrollWidth","dividersWidths","buttonsWidth","reduce","total","width","widths","isLastItem","isItemBeforeLast","Two","Math","min","dividersWidth","totalWidth","visibleItemsStartIndex","defaultProps"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/Breadcrumbs/Breadcrumbs.js"],"sourcesContent":["import React from 'react';\nimport _throttle from 'lodash/throttle';\nimport { block } from '../utils/cn';\nimport { BreadcrumbsItem as Item } from './BreadcrumbsItem';\nimport { BreadcrumbsMore } from './BreadcrumbsMore';\nimport { BreadcrumbsSeparator } from './BreadcrumbsSeparator';\nimport './Breadcrumbs.css';\nconst RESIZE_THROTTLE = 200;\nconst MORE_ITEM_WIDTH = 34;\nconst DEFAULT_POPUP_PLACEMENT = ['bottom', 'top'];\nconst b = block('breadcrumbs');\nexport var LastDisplayedItemsCount;\n(function (LastDisplayedItemsCount) {\n    LastDisplayedItemsCount[LastDisplayedItemsCount[\"One\"] = 1] = \"One\";\n    LastDisplayedItemsCount[LastDisplayedItemsCount[\"Two\"] = 2] = \"Two\";\n})(LastDisplayedItemsCount || (LastDisplayedItemsCount = {}));\nexport var FirstDisplayedItemsCount;\n(function (FirstDisplayedItemsCount) {\n    FirstDisplayedItemsCount[FirstDisplayedItemsCount[\"Zero\"] = 0] = \"Zero\";\n    FirstDisplayedItemsCount[FirstDisplayedItemsCount[\"One\"] = 1] = \"One\";\n})(FirstDisplayedItemsCount || (FirstDisplayedItemsCount = {}));\nexport class Breadcrumbs extends React.Component {\n    static prepareInitialState(props) {\n        const { firstDisplayedItemsCount } = props;\n        return {\n            calculated: false,\n            rootItem: firstDisplayedItemsCount ? props.items[0] : undefined,\n            visibleItems: props.items.slice(firstDisplayedItemsCount),\n            hiddenItems: [],\n            allItems: props.items,\n        };\n    }\n    static getDerivedStateFromProps(props, state) {\n        if (state.allItems !== props.items) {\n            return Breadcrumbs.prepareInitialState(props);\n        }\n        return null;\n    }\n    constructor(props) {\n        super(props);\n        this.handleResize = () => {\n            const state = Breadcrumbs.prepareInitialState(this.props);\n            this.setState(state, this.recalculate);\n        };\n        this.handleResize = _throttle(this.handleResize, RESIZE_THROTTLE);\n        this.resizeObserver = new ResizeObserver(this.handleResize);\n        this.container = React.createRef();\n        this.state = Breadcrumbs.prepareInitialState(props);\n    }\n    componentDidMount() {\n        this.recalculate();\n        this.resizeObserver.observe(this.container.current);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.items !== this.state.allItems) {\n            this.recalculate();\n        }\n    }\n    componentWillUnmount() {\n        this.resizeObserver.disconnect();\n    }\n    render() {\n        const { className } = this.props;\n        const { calculated } = this.state;\n        const rootItem = this.renderRootItem();\n        return (React.createElement(\"div\", { className: b({ calculated: calculated ? 'yes' : 'no' }, className) },\n            React.createElement(\"div\", { className: b('inner'), ref: this.container },\n                rootItem,\n                this.renderMoreItem(),\n                this.renderVisibleItems())));\n    }\n    renderItem(data, isCurrent, isPrevCurrent) {\n        const { renderItemContent } = this.props;\n        return (React.createElement(Item, { data: data, isCurrent: isCurrent, isPrevCurrent: isPrevCurrent, renderItem: renderItemContent }));\n    }\n    renderItemDivider() {\n        const { renderItemDivider } = this.props;\n        return React.createElement(BreadcrumbsSeparator, { renderItemDivider: renderItemDivider });\n    }\n    renderRootItem() {\n        const { renderRootContent, renderItemContent } = this.props;\n        const { rootItem, visibleItems } = this.state;\n        const isCurrent = visibleItems.length === 0;\n        if (!rootItem) {\n            return null;\n        }\n        return (React.createElement(Item, { data: rootItem, isCurrent: isCurrent, isPrevCurrent: false, renderItem: renderRootContent || renderItemContent }));\n    }\n    renderVisibleItems() {\n        const { visibleItems } = this.state;\n        return visibleItems.map((item, index, items) => {\n            const isCurrent = index === items.length - 1;\n            const isPrevCurrent = index === items.length - 2;\n            return (React.createElement(React.Fragment, { key: index },\n                this.renderItemDivider(),\n                this.renderItem(item, isCurrent, isPrevCurrent)));\n        });\n    }\n    renderMoreItem() {\n        const { hiddenItems } = this.state;\n        if (hiddenItems.length === 0) {\n            return null;\n        }\n        const { popupStyle, popupPlacement, renderItemDivider } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(BreadcrumbsSeparator, { renderItemDivider: renderItemDivider }),\n            React.createElement(BreadcrumbsMore, { items: hiddenItems, popupPlacement: popupPlacement, popupStyle: popupStyle })));\n    }\n    recalculate() {\n        const { items: allItems, lastDisplayedItemsCount, firstDisplayedItemsCount } = this.props;\n        if (this.container.current) {\n            const dividers = Array.from(this.container.current.querySelectorAll(`.${b('divider')}`));\n            const items = Array.from(this.container.current.querySelectorAll(`.${b('item')}`));\n            const availableWidth = this.container.current.offsetWidth;\n            const itemsWidths = items.map((elem) => elem.scrollWidth);\n            const dividersWidths = dividers.map((elem) => elem.offsetWidth);\n            const buttonsWidth = itemsWidths.reduce((total, width, index, widths) => {\n                const isLastItem = widths.length - 1 === index;\n                const isItemBeforeLast = lastDisplayedItemsCount === LastDisplayedItemsCount.Two &&\n                    widths.length - 2 === index;\n                if (isLastItem || isItemBeforeLast) {\n                    return total + Math.min(width, 200);\n                }\n                return total + width;\n            }, 0);\n            const dividersWidth = dividersWidths.reduce((total, width) => total + width, 0);\n            let totalWidth = buttonsWidth + dividersWidth;\n            let visibleItemsStartIndex = 1;\n            while (totalWidth > availableWidth &&\n                visibleItemsStartIndex < items.length - lastDisplayedItemsCount) {\n                if (visibleItemsStartIndex === 1) {\n                    totalWidth += MORE_ITEM_WIDTH + dividersWidths[visibleItemsStartIndex];\n                }\n                totalWidth -=\n                    itemsWidths[visibleItemsStartIndex] + dividersWidths[visibleItemsStartIndex];\n                visibleItemsStartIndex++;\n            }\n            this.setState({\n                calculated: true,\n                visibleItems: allItems.slice(visibleItemsStartIndex - (1 - firstDisplayedItemsCount)),\n                hiddenItems: allItems.slice(firstDisplayedItemsCount, visibleItemsStartIndex - (1 - firstDisplayedItemsCount)),\n            });\n        }\n    }\n}\nBreadcrumbs.defaultProps = {\n    popupPlacement: DEFAULT_POPUP_PLACEMENT,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}