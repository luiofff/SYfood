{"ast":null,"code":"import React from 'react';\nimport { useUniqId } from '../../hooks';\nexport const DisclosureAttributesContext = React.createContext(undefined);\nexport const DisclosureToggleContext = React.createContext(undefined);\nexport function DisclosureProvider(props) {\n  const {\n    size,\n    disabled,\n    defaultExpanded,\n    arrowPosition,\n    summary,\n    keepMounted,\n    onUpdate,\n    expanded: controlledExpanded\n  } = props;\n  const [expanded, setExpanded] = React.useState(() => Boolean(defaultExpanded));\n  const controlledMode = controlledExpanded !== undefined;\n  const handleToggle = () => {\n    setExpanded(prev => !prev);\n    const newValue = controlledMode ? !controlledExpanded : !expanded;\n    onUpdate(newValue);\n  };\n  const ariaControls = useUniqId();\n  const ariaLabelledby = \"disclosure\".concat(ariaControls);\n  return React.createElement(DisclosureAttributesContext.Provider, {\n    value: {\n      size,\n      disabled,\n      summary,\n      arrowPosition,\n      keepMounted,\n      expanded: controlledMode ? controlledExpanded : expanded,\n      ariaControls,\n      ariaLabelledby\n    }\n  }, React.createElement(DisclosureToggleContext.Provider, {\n    value: handleToggle\n  }, props.children));\n}\nexport function useDisclosureAttributes() {\n  const state = React.useContext(DisclosureAttributesContext);\n  if (state === undefined) {\n    throw new Error('useDisclosureAttributes must be used within DisclosureProvider');\n  }\n  return state;\n}\nexport function useToggleDisclosure() {\n  const state = React.useContext(DisclosureToggleContext);\n  if (state === undefined) {\n    throw new Error('useToggleDisclosure must be used within DisclosureProvider');\n  }\n  return state;\n}","map":{"version":3,"names":["React","useUniqId","DisclosureAttributesContext","createContext","undefined","DisclosureToggleContext","DisclosureProvider","props","size","disabled","defaultExpanded","arrowPosition","summary","keepMounted","onUpdate","expanded","controlledExpanded","setExpanded","useState","Boolean","controlledMode","handleToggle","prev","newValue","ariaControls","ariaLabelledby","concat","createElement","Provider","value","children","useDisclosureAttributes","state","useContext","Error","useToggleDisclosure"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/Disclosure/DisclosureContext.js"],"sourcesContent":["import React from 'react';\nimport { useUniqId } from '../../hooks';\nexport const DisclosureAttributesContext = React.createContext(undefined);\nexport const DisclosureToggleContext = React.createContext(undefined);\nexport function DisclosureProvider(props) {\n    const { size, disabled, defaultExpanded, arrowPosition, summary, keepMounted, onUpdate, expanded: controlledExpanded, } = props;\n    const [expanded, setExpanded] = React.useState(() => Boolean(defaultExpanded));\n    const controlledMode = controlledExpanded !== undefined;\n    const handleToggle = () => {\n        setExpanded((prev) => !prev);\n        const newValue = controlledMode ? !controlledExpanded : !expanded;\n        onUpdate(newValue);\n    };\n    const ariaControls = useUniqId();\n    const ariaLabelledby = `disclosure${ariaControls}`;\n    return (React.createElement(DisclosureAttributesContext.Provider, { value: {\n            size,\n            disabled,\n            summary,\n            arrowPosition,\n            keepMounted,\n            expanded: controlledMode ? controlledExpanded : expanded,\n            ariaControls,\n            ariaLabelledby,\n        } },\n        React.createElement(DisclosureToggleContext.Provider, { value: handleToggle }, props.children)));\n}\nexport function useDisclosureAttributes() {\n    const state = React.useContext(DisclosureAttributesContext);\n    if (state === undefined) {\n        throw new Error('useDisclosureAttributes must be used within DisclosureProvider');\n    }\n    return state;\n}\nexport function useToggleDisclosure() {\n    const state = React.useContext(DisclosureToggleContext);\n    if (state === undefined) {\n        throw new Error('useToggleDisclosure must be used within DisclosureProvider');\n    }\n    return state;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,aAAa;AACvC,OAAO,MAAMC,2BAA2B,GAAGF,KAAK,CAACG,aAAa,CAACC,SAAS,CAAC;AACzE,OAAO,MAAMC,uBAAuB,GAAGL,KAAK,CAACG,aAAa,CAACC,SAAS,CAAC;AACrE,OAAO,SAASE,kBAAkBA,CAACC,KAAK,EAAE;EACtC,MAAM;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,eAAe;IAAEC,aAAa;IAAEC,OAAO;IAAEC,WAAW;IAAEC,QAAQ;IAAEC,QAAQ,EAAEC;EAAoB,CAAC,GAAGT,KAAK;EAC/H,MAAM,CAACQ,QAAQ,EAAEE,WAAW,CAAC,GAAGjB,KAAK,CAACkB,QAAQ,CAAC,MAAMC,OAAO,CAACT,eAAe,CAAC,CAAC;EAC9E,MAAMU,cAAc,GAAGJ,kBAAkB,KAAKZ,SAAS;EACvD,MAAMiB,YAAY,GAAGA,CAAA,KAAM;IACvBJ,WAAW,CAAEK,IAAI,IAAK,CAACA,IAAI,CAAC;IAC5B,MAAMC,QAAQ,GAAGH,cAAc,GAAG,CAACJ,kBAAkB,GAAG,CAACD,QAAQ;IACjED,QAAQ,CAACS,QAAQ,CAAC;EACtB,CAAC;EACD,MAAMC,YAAY,GAAGvB,SAAS,CAAC,CAAC;EAChC,MAAMwB,cAAc,gBAAAC,MAAA,CAAgBF,YAAY,CAAE;EAClD,OAAQxB,KAAK,CAAC2B,aAAa,CAACzB,2BAA2B,CAAC0B,QAAQ,EAAE;IAAEC,KAAK,EAAE;MACnErB,IAAI;MACJC,QAAQ;MACRG,OAAO;MACPD,aAAa;MACbE,WAAW;MACXE,QAAQ,EAAEK,cAAc,GAAGJ,kBAAkB,GAAGD,QAAQ;MACxDS,YAAY;MACZC;IACJ;EAAE,CAAC,EACHzB,KAAK,CAAC2B,aAAa,CAACtB,uBAAuB,CAACuB,QAAQ,EAAE;IAAEC,KAAK,EAAER;EAAa,CAAC,EAAEd,KAAK,CAACuB,QAAQ,CAAC,CAAC;AACvG;AACA,OAAO,SAASC,uBAAuBA,CAAA,EAAG;EACtC,MAAMC,KAAK,GAAGhC,KAAK,CAACiC,UAAU,CAAC/B,2BAA2B,CAAC;EAC3D,IAAI8B,KAAK,KAAK5B,SAAS,EAAE;IACrB,MAAM,IAAI8B,KAAK,CAAC,gEAAgE,CAAC;EACrF;EACA,OAAOF,KAAK;AAChB;AACA,OAAO,SAASG,mBAAmBA,CAAA,EAAG;EAClC,MAAMH,KAAK,GAAGhC,KAAK,CAACiC,UAAU,CAAC5B,uBAAuB,CAAC;EACvD,IAAI2B,KAAK,KAAK5B,SAAS,EAAE;IACrB,MAAM,IAAI8B,KAAK,CAAC,4DAA4D,CAAC;EACjF;EACA,OAAOF,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}