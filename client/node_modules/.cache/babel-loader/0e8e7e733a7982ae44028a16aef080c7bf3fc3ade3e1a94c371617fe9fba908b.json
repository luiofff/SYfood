{"ast":null,"code":"import React from 'react';\nimport { Check } from '@gravity-ui/icons';\nimport { Icon } from '../../../Icon';\nimport { blockNew as block } from '../../../utils/cn';\nconst b = block('select-list');\nconst DefaultOption = ({\n  option\n}) => {\n  const {\n    content,\n    children,\n    disabled\n  } = option;\n  return React.createElement(\"span\", {\n    className: b('option-default-label', {\n      disabled\n    })\n  }, content || children);\n};\nexport const OptionWrap = props => {\n  const {\n    renderOption,\n    value,\n    option,\n    multiple\n  } = props;\n  const selected = value.indexOf(option.value) !== -1;\n  const optionContent = renderOption ? renderOption(option) : React.createElement(DefaultOption, {\n    option: option\n  });\n  return React.createElement(\"div\", {\n    \"data-qa\": option.qa,\n    className: b('option', {\n      colored: selected && !multiple,\n      disabled: option.disabled\n    })\n  }, multiple && React.createElement(Icon, {\n    className: b('tick-icon', {\n      shown: selected && multiple\n    }),\n    data: Check\n  }), optionContent);\n};","map":{"version":3,"names":["React","Check","Icon","blockNew","block","b","DefaultOption","option","content","children","disabled","createElement","className","OptionWrap","props","renderOption","value","multiple","selected","indexOf","optionContent","qa","colored","shown","data"],"sources":["/Users/ilaulanov/node_modules/@gravity-ui/uikit/build/esm/components/Select/components/SelectList/OptionWrap.js"],"sourcesContent":["import React from 'react';\nimport { Check } from '@gravity-ui/icons';\nimport { Icon } from '../../../Icon';\nimport { blockNew as block } from '../../../utils/cn';\nconst b = block('select-list');\nconst DefaultOption = ({ option }) => {\n    const { content, children, disabled } = option;\n    return React.createElement(\"span\", { className: b('option-default-label', { disabled }) }, content || children);\n};\nexport const OptionWrap = (props) => {\n    const { renderOption, value, option, multiple } = props;\n    const selected = value.indexOf(option.value) !== -1;\n    const optionContent = renderOption ? renderOption(option) : React.createElement(DefaultOption, { option: option });\n    return (React.createElement(\"div\", { \"data-qa\": option.qa, className: b('option', { colored: selected && !multiple, disabled: option.disabled }) },\n        multiple && (React.createElement(Icon, { className: b('tick-icon', { shown: selected && multiple }), data: Check })),\n        optionContent));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,mBAAmB;AACzC,SAASC,IAAI,QAAQ,eAAe;AACpC,SAASC,QAAQ,IAAIC,KAAK,QAAQ,mBAAmB;AACrD,MAAMC,CAAC,GAAGD,KAAK,CAAC,aAAa,CAAC;AAC9B,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAClC,MAAM;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGH,MAAM;EAC9C,OAAOP,KAAK,CAACW,aAAa,CAAC,MAAM,EAAE;IAAEC,SAAS,EAAEP,CAAC,CAAC,sBAAsB,EAAE;MAAEK;IAAS,CAAC;EAAE,CAAC,EAAEF,OAAO,IAAIC,QAAQ,CAAC;AACnH,CAAC;AACD,OAAO,MAAMI,UAAU,GAAIC,KAAK,IAAK;EACjC,MAAM;IAAEC,YAAY;IAAEC,KAAK;IAAET,MAAM;IAAEU;EAAS,CAAC,GAAGH,KAAK;EACvD,MAAMI,QAAQ,GAAGF,KAAK,CAACG,OAAO,CAACZ,MAAM,CAACS,KAAK,CAAC,KAAK,CAAC,CAAC;EACnD,MAAMI,aAAa,GAAGL,YAAY,GAAGA,YAAY,CAACR,MAAM,CAAC,GAAGP,KAAK,CAACW,aAAa,CAACL,aAAa,EAAE;IAAEC,MAAM,EAAEA;EAAO,CAAC,CAAC;EAClH,OAAQP,KAAK,CAACW,aAAa,CAAC,KAAK,EAAE;IAAE,SAAS,EAAEJ,MAAM,CAACc,EAAE;IAAET,SAAS,EAAEP,CAAC,CAAC,QAAQ,EAAE;MAAEiB,OAAO,EAAEJ,QAAQ,IAAI,CAACD,QAAQ;MAAEP,QAAQ,EAAEH,MAAM,CAACG;IAAS,CAAC;EAAE,CAAC,EAC9IO,QAAQ,IAAKjB,KAAK,CAACW,aAAa,CAACT,IAAI,EAAE;IAAEU,SAAS,EAAEP,CAAC,CAAC,WAAW,EAAE;MAAEkB,KAAK,EAAEL,QAAQ,IAAID;IAAS,CAAC,CAAC;IAAEO,IAAI,EAAEvB;EAAM,CAAC,CAAE,EACpHmB,aAAa,CAAC;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}