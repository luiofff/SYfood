{"ast":null,"code":"import React from 'react';\nimport { Ellipsis } from '@gravity-ui/icons';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { cnDropdownMenu } from './DropdownMenu.classname';\nimport { DropdownMenuContext } from './DropdownMenuContext';\nimport { DropdownMenuItem as DropdownMenuItemComponent } from './DropdownMenuItem';\nimport { DropdownMenuNavigationContextProvider } from './DropdownMenuNavigationContext';\nimport { DropdownMenuPopup } from './DropdownMenuPopup';\nimport { dropdownMenuSeparator } from './constants';\nimport { usePopupVisibility } from './hooks/usePopupVisibility';\nimport { useScrollHandler } from './hooks/useScrollHandler';\nimport { toItemList } from './utils/toItemList';\nimport './DropdownMenu.css';\nconst DropdownMenu = ({\n  items = [],\n  size = 'm',\n  icon = React.createElement(Icon, {\n    data: Ellipsis\n  }),\n  open,\n  onOpenToggle,\n  hideOnScroll = true,\n  data,\n  disabled,\n  switcher,\n  switcherWrapperClassName,\n  defaultSwitcherProps,\n  defaultSwitcherClassName,\n  onSwitcherClick,\n  menuProps,\n  popupProps,\n  children\n}) => {\n  const anchorRef = React.useRef(null);\n  const {\n    isPopupShown,\n    togglePopup,\n    closePopup\n  } = usePopupVisibility(open, onOpenToggle, disabled);\n  useScrollHandler(closePopup, anchorRef, !isPopupShown || !hideOnScroll);\n  const contextValue = React.useMemo(() => ({\n    toggle: togglePopup,\n    data\n  }), [data, togglePopup]);\n  const itemsList = React.useMemo(() => toItemList(items, dropdownMenuSeparator), [items]);\n  const handleSwitcherClick = event => {\n    if (disabled) {\n      return;\n    }\n    onSwitcherClick === null || onSwitcherClick === void 0 ? void 0 : onSwitcherClick(event);\n    togglePopup();\n  };\n  return React.createElement(DropdownMenuContext.Provider, {\n    value: contextValue\n  }, React.createElement(\"div\", {\n    ref: anchorRef,\n    className: cnDropdownMenu('switcher-wrapper', switcherWrapperClassName),\n    onClick: handleSwitcherClick\n  }, switcher || React.createElement(Button, Object.assign({\n    view: \"flat\",\n    size: size\n  }, defaultSwitcherProps, {\n    className: cnDropdownMenu('switcher-button', defaultSwitcherClassName),\n    disabled: disabled\n  }), icon)), React.createElement(DropdownMenuNavigationContextProvider, {\n    anchorRef: anchorRef,\n    disabled: !isPopupShown\n  }, React.createElement(DropdownMenuPopup, {\n    items: itemsList,\n    open: isPopupShown,\n    size: size,\n    menuProps: menuProps,\n    anchorRef: anchorRef,\n    onClose: closePopup,\n    popupProps: popupProps\n  }, children)));\n};\nconst DropdownMenuExport = Object.assign(DropdownMenu, {\n  Item: DropdownMenuItemComponent\n});\nexport { DropdownMenuExport as DropdownMenu };","map":{"version":3,"names":["React","Ellipsis","Button","Icon","cnDropdownMenu","DropdownMenuContext","DropdownMenuItem","DropdownMenuItemComponent","DropdownMenuNavigationContextProvider","DropdownMenuPopup","dropdownMenuSeparator","usePopupVisibility","useScrollHandler","toItemList","DropdownMenu","items","size","icon","createElement","data","open","onOpenToggle","hideOnScroll","disabled","switcher","switcherWrapperClassName","defaultSwitcherProps","defaultSwitcherClassName","onSwitcherClick","menuProps","popupProps","children","anchorRef","useRef","isPopupShown","togglePopup","closePopup","contextValue","useMemo","toggle","itemsList","handleSwitcherClick","event","Provider","value","ref","className","onClick","Object","assign","view","onClose","DropdownMenuExport","Item"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/DropdownMenu/DropdownMenu.js"],"sourcesContent":["import React from 'react';\nimport { Ellipsis } from '@gravity-ui/icons';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { cnDropdownMenu } from './DropdownMenu.classname';\nimport { DropdownMenuContext } from './DropdownMenuContext';\nimport { DropdownMenuItem as DropdownMenuItemComponent } from './DropdownMenuItem';\nimport { DropdownMenuNavigationContextProvider } from './DropdownMenuNavigationContext';\nimport { DropdownMenuPopup } from './DropdownMenuPopup';\nimport { dropdownMenuSeparator } from './constants';\nimport { usePopupVisibility } from './hooks/usePopupVisibility';\nimport { useScrollHandler } from './hooks/useScrollHandler';\nimport { toItemList } from './utils/toItemList';\nimport './DropdownMenu.css';\nconst DropdownMenu = ({ items = [], size = 'm', icon = React.createElement(Icon, { data: Ellipsis }), open, onOpenToggle, hideOnScroll = true, data, disabled, switcher, switcherWrapperClassName, defaultSwitcherProps, defaultSwitcherClassName, onSwitcherClick, menuProps, popupProps, children, }) => {\n    const anchorRef = React.useRef(null);\n    const { isPopupShown, togglePopup, closePopup } = usePopupVisibility(open, onOpenToggle, disabled);\n    useScrollHandler(closePopup, anchorRef, !isPopupShown || !hideOnScroll);\n    const contextValue = React.useMemo(() => ({\n        toggle: togglePopup,\n        data,\n    }), [data, togglePopup]);\n    const itemsList = React.useMemo(() => toItemList(items, dropdownMenuSeparator), [items]);\n    const handleSwitcherClick = (event) => {\n        if (disabled) {\n            return;\n        }\n        onSwitcherClick === null || onSwitcherClick === void 0 ? void 0 : onSwitcherClick(event);\n        togglePopup();\n    };\n    return (React.createElement(DropdownMenuContext.Provider, { value: contextValue },\n        React.createElement(\"div\", { ref: anchorRef, className: cnDropdownMenu('switcher-wrapper', switcherWrapperClassName), onClick: handleSwitcherClick }, switcher || (React.createElement(Button, Object.assign({ view: \"flat\", size: size }, defaultSwitcherProps, { className: cnDropdownMenu('switcher-button', defaultSwitcherClassName), disabled: disabled }), icon))),\n        React.createElement(DropdownMenuNavigationContextProvider, { anchorRef: anchorRef, disabled: !isPopupShown },\n            React.createElement(DropdownMenuPopup, { items: itemsList, open: isPopupShown, size: size, menuProps: menuProps, anchorRef: anchorRef, onClose: closePopup, popupProps: popupProps }, children))));\n};\nconst DropdownMenuExport = Object.assign(DropdownMenu, { Item: DropdownMenuItemComponent });\nexport { DropdownMenuExport as DropdownMenu };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}