{"ast":null,"code":"import React from 'react';\nimport { useForkRef } from '../../../hooks';\nimport { blockNew } from '../../utils/cn';\nconst b = blockNew('text-area');\nconst calculateLinesByScrollHeight = args => {\n  const {\n    height,\n    lineHeight\n  } = args;\n  const paddingTop = Number.isNaN(args.paddingTop) ? 0 : args.paddingTop;\n  const paddingBottom = Number.isNaN(args.paddingBottom) ? 0 : args.paddingBottom;\n  return (height - paddingTop - paddingBottom) / lineHeight;\n};\nexport function TextAreaControl(props) {\n  var _a;\n  const {\n    name,\n    id,\n    tabIndex,\n    autoComplete,\n    placeholder,\n    value,\n    defaultValue,\n    controlRef,\n    controlProps,\n    size,\n    rows,\n    minRows = 1,\n    maxRows,\n    autoFocus,\n    disabled,\n    onChange,\n    onFocus,\n    onBlur,\n    onKeyDown,\n    onKeyUp,\n    onKeyPress\n  } = props;\n  const innerControlRef = React.useRef(null);\n  const handleRef = useForkRef(controlRef, innerControlRef);\n  const textareaRows = rows || minRows;\n  const innerValue = value || ((_a = innerControlRef === null || innerControlRef === void 0 ? void 0 : innerControlRef.current) === null || _a === void 0 ? void 0 : _a.value);\n  const resizeHeight = React.useCallback(() => {\n    const control = innerControlRef === null || innerControlRef === void 0 ? void 0 : innerControlRef.current;\n    if (control && !rows) {\n      const controlStyles = getComputedStyle(control);\n      const lineHeight = parseInt(controlStyles.getPropertyValue('line-height'), 10);\n      const paddingTop = parseInt(controlStyles.getPropertyValue('padding-top'), 10);\n      const paddingBottom = parseInt(controlStyles.getPropertyValue('padding-bottom'), 10);\n      const linesWithCarriageReturn = ((innerValue === null || innerValue === void 0 ? void 0 : innerValue.match(/\\n/g)) || []).length + 1;\n      const linesByScrollHeight = calculateLinesByScrollHeight({\n        height: control.scrollHeight,\n        paddingTop,\n        paddingBottom,\n        lineHeight\n      });\n      control.style.height = 'auto';\n      if (maxRows && maxRows < Math.max(linesByScrollHeight, linesWithCarriageReturn)) {\n        control.style.height = \"\".concat(maxRows * lineHeight + 2 * paddingTop, \"px\");\n      } else if (linesWithCarriageReturn > 1 || linesByScrollHeight > 1) {\n        control.style.height = \"\".concat(control.scrollHeight, \"px\");\n      }\n    }\n  }, [rows, maxRows, innerValue]);\n  React.useEffect(() => {\n    resizeHeight();\n  }, [resizeHeight, size, value]);\n  return React.createElement(\"textarea\", Object.assign({}, controlProps, {\n    ref: handleRef,\n    style: Object.assign(Object.assign({}, controlProps === null || controlProps === void 0 ? void 0 : controlProps.style), {\n      height: rows ? 'auto' : undefined\n    }),\n    className: b('control', controlProps === null || controlProps === void 0 ? void 0 : controlProps.className),\n    name: name,\n    id: id,\n    tabIndex: tabIndex,\n    placeholder: placeholder,\n    value: value,\n    defaultValue: defaultValue,\n    rows: textareaRows,\n    autoFocus: autoFocus,\n    autoComplete: autoComplete,\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onKeyPress: onKeyPress,\n    disabled: disabled\n  }));\n}","map":{"version":3,"names":["React","useForkRef","blockNew","b","calculateLinesByScrollHeight","args","height","lineHeight","paddingTop","Number","isNaN","paddingBottom","TextAreaControl","props","_a","name","id","tabIndex","autoComplete","placeholder","value","defaultValue","controlRef","controlProps","size","rows","minRows","maxRows","autoFocus","disabled","onChange","onFocus","onBlur","onKeyDown","onKeyUp","onKeyPress","innerControlRef","useRef","handleRef","textareaRows","innerValue","current","resizeHeight","useCallback","control","controlStyles","getComputedStyle","parseInt","getPropertyValue","linesWithCarriageReturn","match","length","linesByScrollHeight","scrollHeight","style","Math","max","concat","useEffect","createElement","Object","assign","ref","undefined","className"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/controls/TextArea/TextAreaControl.js"],"sourcesContent":["import React from 'react';\nimport { useForkRef } from '../../../hooks';\nimport { blockNew } from '../../utils/cn';\nconst b = blockNew('text-area');\nconst calculateLinesByScrollHeight = (args) => {\n    const { height, lineHeight } = args;\n    const paddingTop = Number.isNaN(args.paddingTop) ? 0 : args.paddingTop;\n    const paddingBottom = Number.isNaN(args.paddingBottom) ? 0 : args.paddingBottom;\n    return (height - paddingTop - paddingBottom) / lineHeight;\n};\nexport function TextAreaControl(props) {\n    var _a;\n    const { name, id, tabIndex, autoComplete, placeholder, value, defaultValue, controlRef, controlProps, size, rows, minRows = 1, maxRows, autoFocus, disabled, onChange, onFocus, onBlur, onKeyDown, onKeyUp, onKeyPress, } = props;\n    const innerControlRef = React.useRef(null);\n    const handleRef = useForkRef(controlRef, innerControlRef);\n    const textareaRows = rows || minRows;\n    const innerValue = value || ((_a = innerControlRef === null || innerControlRef === void 0 ? void 0 : innerControlRef.current) === null || _a === void 0 ? void 0 : _a.value);\n    const resizeHeight = React.useCallback(() => {\n        const control = innerControlRef === null || innerControlRef === void 0 ? void 0 : innerControlRef.current;\n        if (control && !rows) {\n            const controlStyles = getComputedStyle(control);\n            const lineHeight = parseInt(controlStyles.getPropertyValue('line-height'), 10);\n            const paddingTop = parseInt(controlStyles.getPropertyValue('padding-top'), 10);\n            const paddingBottom = parseInt(controlStyles.getPropertyValue('padding-bottom'), 10);\n            const linesWithCarriageReturn = ((innerValue === null || innerValue === void 0 ? void 0 : innerValue.match(/\\n/g)) || []).length + 1;\n            const linesByScrollHeight = calculateLinesByScrollHeight({\n                height: control.scrollHeight,\n                paddingTop,\n                paddingBottom,\n                lineHeight,\n            });\n            control.style.height = 'auto';\n            if (maxRows && maxRows < Math.max(linesByScrollHeight, linesWithCarriageReturn)) {\n                control.style.height = `${maxRows * lineHeight + 2 * paddingTop}px`;\n            }\n            else if (linesWithCarriageReturn > 1 || linesByScrollHeight > 1) {\n                control.style.height = `${control.scrollHeight}px`;\n            }\n        }\n    }, [rows, maxRows, innerValue]);\n    React.useEffect(() => {\n        resizeHeight();\n    }, [resizeHeight, size, value]);\n    return (React.createElement(\"textarea\", Object.assign({}, controlProps, { ref: handleRef, style: Object.assign(Object.assign({}, controlProps === null || controlProps === void 0 ? void 0 : controlProps.style), { height: rows ? 'auto' : undefined }), className: b('control', controlProps === null || controlProps === void 0 ? void 0 : controlProps.className), name: name, id: id, tabIndex: tabIndex, placeholder: placeholder, value: value, defaultValue: defaultValue, rows: textareaRows, autoFocus: autoFocus, autoComplete: autoComplete, onChange: onChange, onFocus: onFocus, onBlur: onBlur, onKeyDown: onKeyDown, onKeyUp: onKeyUp, onKeyPress: onKeyPress, disabled: disabled })));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}