{"ast":null,"code":"/* eslint-disable valid-jsdoc */\nimport React from 'react';\nimport { LayoutContext } from '../contexts/LayoutContext';\nimport { useCurrentActiveMediaQuery } from '../hooks/useCurrentActiveMediaQuery';\nimport { makeLayoutDefaultTheme } from '../utils/makeLayoutDefaultTheme';\n/**\n * Provide context for layout components and current media queries.\n * ---\n * Storybook - https://preview.gravity-ui.com/uikit/?path=/docs/layout--playground#layoutprovider-and-layouttheme\n */\nexport function LayoutProvider(_ref) {\n  let {\n    children,\n    theme: override,\n    initialMediaQuery\n  } = _ref;\n  const theme = makeLayoutDefaultTheme({\n    override\n  });\n  const activeMediaQuery = useCurrentActiveMediaQuery(theme.breakpoints, initialMediaQuery);\n  return React.createElement(LayoutContext.Provider, {\n    value: {\n      activeMediaQuery,\n      theme\n    }\n  }, children);\n}","map":{"version":3,"names":["React","LayoutContext","useCurrentActiveMediaQuery","makeLayoutDefaultTheme","LayoutProvider","_ref","children","theme","override","initialMediaQuery","activeMediaQuery","breakpoints","createElement","Provider","value"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/layout/LayoutProvider/LayoutProvider.js"],"sourcesContent":["/* eslint-disable valid-jsdoc */\nimport React from 'react';\nimport { LayoutContext } from '../contexts/LayoutContext';\nimport { useCurrentActiveMediaQuery } from '../hooks/useCurrentActiveMediaQuery';\nimport { makeLayoutDefaultTheme } from '../utils/makeLayoutDefaultTheme';\n/**\n * Provide context for layout components and current media queries.\n * ---\n * Storybook - https://preview.gravity-ui.com/uikit/?path=/docs/layout--playground#layoutprovider-and-layouttheme\n */\nexport function LayoutProvider({ children, theme: override, initialMediaQuery, }) {\n    const theme = makeLayoutDefaultTheme({ override });\n    const activeMediaQuery = useCurrentActiveMediaQuery(theme.breakpoints, initialMediaQuery);\n    return (React.createElement(LayoutContext.Provider, { value: {\n            activeMediaQuery,\n            theme,\n        } }, children));\n}\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,0BAA0B,QAAQ,qCAAqC;AAChF,SAASC,sBAAsB,QAAQ,iCAAiC;AACxE;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAAAC,IAAA,EAAoD;EAAA,IAAnD;IAAEC,QAAQ;IAAEC,KAAK,EAAEC,QAAQ;IAAEC;EAAmB,CAAC,GAAAJ,IAAA;EAC5E,MAAME,KAAK,GAAGJ,sBAAsB,CAAC;IAAEK;EAAS,CAAC,CAAC;EAClD,MAAME,gBAAgB,GAAGR,0BAA0B,CAACK,KAAK,CAACI,WAAW,EAAEF,iBAAiB,CAAC;EACzF,OAAQT,KAAK,CAACY,aAAa,CAACX,aAAa,CAACY,QAAQ,EAAE;IAAEC,KAAK,EAAE;MACrDJ,gBAAgB;MAChBH;IACJ;EAAE,CAAC,EAAED,QAAQ,CAAC;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}