{"ast":null,"code":"var _jsxFileName = \"/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/src/pages/ChatGPT/Gpt.jsx\",\n  _s = $RefreshSig$();\nimport { Configuration, OpenAIApi } from 'openai';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gpt = () => {\n  _s();\n  const [response, setResponse] = useState('');\n  const [prompt, setPrompt] = useState('');\n  const configuration = new Configuration({\n    apiKey: \"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\"\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const openai = new OpenAIApi(configuration);\n    const completion = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: topic,\n      max_tokens: 1024,\n      n: 1,\n      stop: null,\n      temperature: 0.7\n    });\n    console.log(completion.data.choices[0].text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Gpt, \"Il8gOUoQWIIKCY09p/tuRhUa5M8=\");\n_c = Gpt;\nexport default Gpt;\nvar _c;\n$RefreshReg$(_c, \"Gpt\");","map":{"version":3,"names":["Configuration","OpenAIApi","useState","useEffect","jsxDEV","_jsxDEV","Gpt","_s","response","setResponse","prompt","setPrompt","configuration","apiKey","handleSubmit","e","preventDefault","openai","completion","createCompletion","model","topic","max_tokens","n","stop","temperature","console","log","data","choices","text","onSubmit","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/src/pages/ChatGPT/Gpt.jsx"],"sourcesContent":["import { Configuration, OpenAIApi } from 'openai';\nimport { useState, useEffect } from 'react';\n\nconst Gpt = () => {\n  const [response, setResponse] = useState('');\n  const [prompt, setPrompt] = useState('');\n\n  const configuration = new Configuration({\n    apiKey: \"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\",\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const openai = new OpenAIApi(configuration);\n    const completion = await openai.createCompletion({\n    model: \"text-davinci-003\",\n    prompt: topic,\n    max_tokens: 1024,\n    n: 1,\n    stop: null,\n    temperature: 0.7\n    });\n    console.log(completion.data.choices[0].text);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={prompt} onChange={e => setPrompt(e.target.value)} />\n      <button type=\"submit\">Submit</button>\n    </form>\n  )\n}\n\nexport default Gpt;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AACjD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,aAAa,GAAG,IAAIZ,aAAa,CAAC;IACtCa,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,MAAM,GAAG,IAAIhB,SAAS,CAACW,aAAa,CAAC;IAC3C,MAAMM,UAAU,GAAG,MAAMD,MAAM,CAACE,gBAAgB,CAAC;MACjDC,KAAK,EAAE,kBAAkB;MACzBV,MAAM,EAAEW,KAAK;MACbC,UAAU,EAAE,IAAI;MAChBC,CAAC,EAAE,CAAC;MACJC,IAAI,EAAE,IAAI;MACVC,WAAW,EAAE;IACb,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAACT,UAAU,CAACU,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;EAC9C,CAAC;EAED,oBACEzB,OAAA;IAAM0B,QAAQ,EAAEjB,YAAa;IAAAkB,QAAA,gBAC3B3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAExB,MAAO;MAACyB,QAAQ,EAAEpB,CAAC,IAAIJ,SAAS,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9EnC,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAAjC,EAAA,CA5BKD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}