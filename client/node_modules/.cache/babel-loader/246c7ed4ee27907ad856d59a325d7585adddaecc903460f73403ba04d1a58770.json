{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { NAMESPACE } from './cn';\nexport class EventBroker {\n  constructor(prefix) {\n    this.subscriptions = [];\n    this.componentPrefix = prefix;\n  }\n  subscribe(subscription) {\n    this.subscriptions.push(subscription);\n  }\n  unsubscribe(subscription) {\n    const index = this.subscriptions.indexOf(subscription);\n    if (index > -1) {\n      this.subscriptions.splice(index, 1);\n    }\n  }\n  publish(_a) {\n    var {\n        componentId\n      } = _a,\n      restData = __rest(_a, [\"componentId\"]);\n    this.subscriptions.forEach(fn => fn(Object.assign(Object.assign({}, restData), {\n      componentId: this.componentPrefix ? `${this.componentPrefix}${componentId}` : componentId\n    })));\n  }\n  withEventPublisher(componentId, qa) {\n    return eventBrokerData => {\n      this.publish(Object.assign(Object.assign({}, eventBrokerData), {\n        componentId,\n        qa\n      }));\n    };\n  }\n}\nexport const eventBroker = new EventBroker(NAMESPACE);","map":{"version":3,"names":["__rest","NAMESPACE","EventBroker","constructor","prefix","subscriptions","componentPrefix","subscribe","subscription","push","unsubscribe","index","indexOf","splice","publish","_a","componentId","restData","forEach","fn","Object","assign","withEventPublisher","qa","eventBrokerData","eventBroker"],"sources":["/Users/ilaulanov/node_modules/@gravity-ui/uikit/build/esm/components/utils/event-broker.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport { NAMESPACE } from './cn';\nexport class EventBroker {\n    constructor(prefix) {\n        this.subscriptions = [];\n        this.componentPrefix = prefix;\n    }\n    subscribe(subscription) {\n        this.subscriptions.push(subscription);\n    }\n    unsubscribe(subscription) {\n        const index = this.subscriptions.indexOf(subscription);\n        if (index > -1) {\n            this.subscriptions.splice(index, 1);\n        }\n    }\n    publish(_a) {\n        var { componentId } = _a, restData = __rest(_a, [\"componentId\"]);\n        this.subscriptions.forEach((fn) => fn(Object.assign(Object.assign({}, restData), { componentId: this.componentPrefix\n                ? `${this.componentPrefix}${componentId}`\n                : componentId })));\n    }\n    withEventPublisher(componentId, qa) {\n        return (eventBrokerData) => {\n            this.publish(Object.assign(Object.assign({}, eventBrokerData), { componentId,\n                qa }));\n        };\n    }\n}\nexport const eventBroker = new EventBroker(NAMESPACE);\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,SAAS,QAAQ,MAAM;AAChC,OAAO,MAAMC,WAAW,CAAC;EACrBC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,eAAe,GAAGF,MAAM;EACjC;EACAG,SAASA,CAACC,YAAY,EAAE;IACpB,IAAI,CAACH,aAAa,CAACI,IAAI,CAACD,YAAY,CAAC;EACzC;EACAE,WAAWA,CAACF,YAAY,EAAE;IACtB,MAAMG,KAAK,GAAG,IAAI,CAACN,aAAa,CAACO,OAAO,CAACJ,YAAY,CAAC;IACtD,IAAIG,KAAK,GAAG,CAAC,CAAC,EAAE;MACZ,IAAI,CAACN,aAAa,CAACQ,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IACvC;EACJ;EACAG,OAAOA,CAACC,EAAE,EAAE;IACR,IAAI;QAAEC;MAAY,CAAC,GAAGD,EAAE;MAAEE,QAAQ,GAAGjB,MAAM,CAACe,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;IAChE,IAAI,CAACV,aAAa,CAACa,OAAO,CAAEC,EAAE,IAAKA,EAAE,CAACC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,QAAQ,CAAC,EAAE;MAAED,WAAW,EAAE,IAAI,CAACV,eAAe,GACzG,GAAE,IAAI,CAACA,eAAgB,GAAEU,WAAY,EAAC,GACvCA;IAAY,CAAC,CAAC,CAAC,CAAC;EAC9B;EACAM,kBAAkBA,CAACN,WAAW,EAAEO,EAAE,EAAE;IAChC,OAAQC,eAAe,IAAK;MACxB,IAAI,CAACV,OAAO,CAACM,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEG,eAAe,CAAC,EAAE;QAAER,WAAW;QACxEO;MAAG,CAAC,CAAC,CAAC;IACd,CAAC;EACL;AACJ;AACA,OAAO,MAAME,WAAW,GAAG,IAAIvB,WAAW,CAACD,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}