{"ast":null,"code":"export default function (count, pluralForms) {\n  // the rules for negative numbers are the same\n  const lastDigit = Math.abs(count % 10);\n  const last2Digits = Math.abs(count % 100);\n  if (count === 0) {\n    return pluralForms.None;\n  }\n  if (lastDigit === 1 && last2Digits !== 11) {\n    return pluralForms.One;\n  }\n  if (lastDigit > 1 && lastDigit < 5 && (last2Digits < 10 || last2Digits > 20)) {\n    return pluralForms.Few;\n  }\n  return pluralForms.Many;\n}","map":{"version":3,"names":["count","pluralForms","lastDigit","Math","abs","last2Digits","None","One","Few","Many"],"sources":["/Users/ilaulanov/node_modules/@gravity-ui/i18n/build/esm/plural/ru.js"],"sourcesContent":["export default function (count, pluralForms) {\n    // the rules for negative numbers are the same\n    const lastDigit = Math.abs(count % 10);\n    const last2Digits = Math.abs(count % 100);\n    if (count === 0) {\n        return pluralForms.None;\n    }\n    if (lastDigit === 1 && last2Digits !== 11) {\n        return pluralForms.One;\n    }\n    if ((lastDigit > 1 && lastDigit < 5) && (last2Digits < 10 || last2Digits > 20)) {\n        return pluralForms.Few;\n    }\n    return pluralForms.Many;\n}\n"],"mappings":"AAAA,eAAe,UAAUA,KAAK,EAAEC,WAAW,EAAE;EACzC;EACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACJ,KAAK,GAAG,EAAE,CAAC;EACtC,MAAMK,WAAW,GAAGF,IAAI,CAACC,GAAG,CAACJ,KAAK,GAAG,GAAG,CAAC;EACzC,IAAIA,KAAK,KAAK,CAAC,EAAE;IACb,OAAOC,WAAW,CAACK,IAAI;EAC3B;EACA,IAAIJ,SAAS,KAAK,CAAC,IAAIG,WAAW,KAAK,EAAE,EAAE;IACvC,OAAOJ,WAAW,CAACM,GAAG;EAC1B;EACA,IAAKL,SAAS,GAAG,CAAC,IAAIA,SAAS,GAAG,CAAC,KAAMG,WAAW,GAAG,EAAE,IAAIA,WAAW,GAAG,EAAE,CAAC,EAAE;IAC5E,OAAOJ,WAAW,CAACO,GAAG;EAC1B;EACA,OAAOP,WAAW,CAACQ,IAAI;AAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}