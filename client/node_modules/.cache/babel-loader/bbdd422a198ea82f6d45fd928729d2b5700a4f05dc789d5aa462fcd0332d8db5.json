{"ast":null,"code":"import React from 'react';\nimport { useForkRef, useUniqId } from '../..';\nimport { eventBroker } from '../../../components/utils/event-broker';\nexport function useRadio(_ref) {\n  let {\n    name,\n    value,\n    checked,\n    defaultChecked,\n    disabled,\n    controlRef,\n    controlProps,\n    onUpdate,\n    onChange,\n    onFocus,\n    onBlur,\n    id\n  } = _ref;\n  const controlId = useUniqId();\n  const innerControlRef = React.useRef(null);\n  const [checkedState, setCheckedState] = React.useState(defaultChecked !== null && defaultChecked !== void 0 ? defaultChecked : false);\n  const isControlled = typeof checked === 'boolean';\n  const isChecked = isControlled ? checked : checkedState;\n  const handleRef = useForkRef(controlRef, innerControlRef);\n  const handleChange = event => {\n    if (!isControlled) {\n      setCheckedState(event.target.checked);\n    }\n    if (onChange) {\n      onChange(event);\n    }\n    if (onUpdate) {\n      onUpdate(event.target.checked);\n    }\n  };\n  const onChangeCapture = event => {\n    eventBroker.publish({\n      componentId: 'Radio',\n      eventId: 'click',\n      domEvent: event\n    });\n  };\n  const inputProps = Object.assign(Object.assign({}, controlProps), {\n    name: name || controlId,\n    value,\n    id,\n    onFocus,\n    onBlur,\n    disabled,\n    type: 'radio',\n    onChange: handleChange,\n    onChangeCapture: onChangeCapture,\n    checked,\n    defaultChecked: defaultChecked,\n    'aria-checked': isChecked,\n    ref: handleRef\n  });\n  return {\n    checked: isChecked,\n    inputProps\n  };\n}","map":{"version":3,"names":["React","useForkRef","useUniqId","eventBroker","useRadio","_ref","name","value","checked","defaultChecked","disabled","controlRef","controlProps","onUpdate","onChange","onFocus","onBlur","id","controlId","innerControlRef","useRef","checkedState","setCheckedState","useState","isControlled","isChecked","handleRef","handleChange","event","target","onChangeCapture","publish","componentId","eventId","domEvent","inputProps","Object","assign","type","ref"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/hooks/private/useRadio/useRadio.js"],"sourcesContent":["import React from 'react';\nimport { useForkRef, useUniqId } from '../..';\nimport { eventBroker } from '../../../components/utils/event-broker';\nexport function useRadio({ name, value, checked, defaultChecked, disabled, controlRef, controlProps, onUpdate, onChange, onFocus, onBlur, id, }) {\n    const controlId = useUniqId();\n    const innerControlRef = React.useRef(null);\n    const [checkedState, setCheckedState] = React.useState(defaultChecked !== null && defaultChecked !== void 0 ? defaultChecked : false);\n    const isControlled = typeof checked === 'boolean';\n    const isChecked = isControlled ? checked : checkedState;\n    const handleRef = useForkRef(controlRef, innerControlRef);\n    const handleChange = (event) => {\n        if (!isControlled) {\n            setCheckedState(event.target.checked);\n        }\n        if (onChange) {\n            onChange(event);\n        }\n        if (onUpdate) {\n            onUpdate(event.target.checked);\n        }\n    };\n    const onChangeCapture = (event) => {\n        eventBroker.publish({\n            componentId: 'Radio',\n            eventId: 'click',\n            domEvent: event,\n        });\n    };\n    const inputProps = Object.assign(Object.assign({}, controlProps), { name: name || controlId, value,\n        id,\n        onFocus,\n        onBlur,\n        disabled, type: 'radio', onChange: handleChange, onChangeCapture: onChangeCapture, checked, defaultChecked: defaultChecked, 'aria-checked': isChecked, ref: handleRef });\n    return { checked: isChecked, inputProps };\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,wCAAwC;AACpE,OAAO,SAASC,QAAQA,CAAAC,IAAA,EAAyH;EAAA,IAAxH;IAAEC,IAAI;IAAEC,KAAK;IAAEC,OAAO;IAAEC,cAAc;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,YAAY;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,MAAM;IAAEC;EAAI,CAAC,GAAAZ,IAAA;EAC3I,MAAMa,SAAS,GAAGhB,SAAS,CAAC,CAAC;EAC7B,MAAMiB,eAAe,GAAGnB,KAAK,CAACoB,MAAM,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtB,KAAK,CAACuB,QAAQ,CAACd,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAK,KAAK,CAAC,GAAGA,cAAc,GAAG,KAAK,CAAC;EACrI,MAAMe,YAAY,GAAG,OAAOhB,OAAO,KAAK,SAAS;EACjD,MAAMiB,SAAS,GAAGD,YAAY,GAAGhB,OAAO,GAAGa,YAAY;EACvD,MAAMK,SAAS,GAAGzB,UAAU,CAACU,UAAU,EAAEQ,eAAe,CAAC;EACzD,MAAMQ,YAAY,GAAIC,KAAK,IAAK;IAC5B,IAAI,CAACJ,YAAY,EAAE;MACfF,eAAe,CAACM,KAAK,CAACC,MAAM,CAACrB,OAAO,CAAC;IACzC;IACA,IAAIM,QAAQ,EAAE;MACVA,QAAQ,CAACc,KAAK,CAAC;IACnB;IACA,IAAIf,QAAQ,EAAE;MACVA,QAAQ,CAACe,KAAK,CAACC,MAAM,CAACrB,OAAO,CAAC;IAClC;EACJ,CAAC;EACD,MAAMsB,eAAe,GAAIF,KAAK,IAAK;IAC/BzB,WAAW,CAAC4B,OAAO,CAAC;MAChBC,WAAW,EAAE,OAAO;MACpBC,OAAO,EAAE,OAAO;MAChBC,QAAQ,EAAEN;IACd,CAAC,CAAC;EACN,CAAC;EACD,MAAMO,UAAU,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEzB,YAAY,CAAC,EAAE;IAAEN,IAAI,EAAEA,IAAI,IAAIY,SAAS;IAAEX,KAAK;IAC9FU,EAAE;IACFF,OAAO;IACPC,MAAM;IACNN,QAAQ;IAAE4B,IAAI,EAAE,OAAO;IAAExB,QAAQ,EAAEa,YAAY;IAAEG,eAAe,EAAEA,eAAe;IAAEtB,OAAO;IAAEC,cAAc,EAAEA,cAAc;IAAE,cAAc,EAAEgB,SAAS;IAAEc,GAAG,EAAEb;EAAU,CAAC,CAAC;EAC5K,OAAO;IAAElB,OAAO,EAAEiB,SAAS;IAAEU;EAAW,CAAC;AAC7C"},"metadata":{},"sourceType":"module","externalDependencies":[]}