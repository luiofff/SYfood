{"ast":null,"code":"import { useEffect as $cKEhs$useEffect } from \"react\";\nimport { useToggle as $cKEhs$useToggle } from \"@react-aria/toggle\";\nimport { filterDOMProps as $cKEhs$filterDOMProps, mergeProps as $cKEhs$mergeProps } from \"@react-aria/utils\";\nimport { useField as $cKEhs$useField } from \"@react-aria/label\";\nimport { useToggleState as $cKEhs$useToggleState } from \"@react-stately/toggle\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n\nfunction $406796ff087fe49b$export$e375f10ce42261c5(props, state, inputRef) {\n  let {\n    inputProps: inputProps,\n    isSelected: isSelected,\n    isPressed: isPressed,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isInvalid: isInvalid\n  } = (0, $cKEhs$useToggle)(props, state, inputRef);\n  let {\n    isIndeterminate: isIndeterminate\n  } = props;\n  (0, $cKEhs$useEffect)(() => {\n    // indeterminate is a property, but it can only be set via javascript\n    // https://css-tricks.com/indeterminate-checkboxes/\n    if (inputRef.current) inputRef.current.indeterminate = isIndeterminate;\n  });\n  return {\n    inputProps: {\n      ...inputProps,\n      checked: isSelected\n    },\n    isSelected: isSelected,\n    isPressed: isPressed,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isInvalid: isInvalid\n  };\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\nconst $1ae600c947479353$export$31440636951aa68c = new WeakMap();\nconst $1ae600c947479353$export$a3077e9c93f7360f = new WeakMap();\nconst $1ae600c947479353$export$d5679492e2864181 = new WeakMap();\nfunction $1e9fce0cfacc738b$export$49ff6f28c54f1cbe(props, state) {\n  let {\n    isDisabled: isDisabled,\n    name: name\n  } = props;\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  } = (0, $cKEhs$useField)({\n    ...props,\n    // Checkbox group is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: \"span\"\n  });\n  (0, $1ae600c947479353$export$a3077e9c93f7360f).set(state, descriptionProps.id);\n  (0, $1ae600c947479353$export$d5679492e2864181).set(state, errorMessageProps.id);\n  let domProps = (0, $cKEhs$filterDOMProps)(props, {\n    labelable: true\n  });\n  // Pass name prop from group to all items by attaching to the state.\n  (0, $1ae600c947479353$export$31440636951aa68c).set(state, name);\n  return {\n    groupProps: (0, $cKEhs$mergeProps)(domProps, {\n      role: \"group\",\n      \"aria-disabled\": isDisabled || undefined,\n      ...fieldProps\n    }),\n    labelProps: labelProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  };\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $fba3e38d5ca8983f$export$353b32fc6898d37d(props, state, inputRef) {\n  const toggleState = (0, $cKEhs$useToggleState)({\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isSelected: state.isSelected(props.value),\n    onChange(isSelected) {\n      if (isSelected) state.addValue(props.value);else state.removeValue(props.value);\n      if (props.onChange) props.onChange(isSelected);\n    }\n  });\n  let res = (0, $406796ff087fe49b$export$e375f10ce42261c5)({\n    ...props,\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isDisabled: props.isDisabled || state.isDisabled,\n    name: props.name || (0, $1ae600c947479353$export$31440636951aa68c).get(state)\n  }, toggleState, inputRef);\n  return {\n    ...res,\n    inputProps: {\n      ...res.inputProps,\n      \"aria-describedby\": [props[\"aria-describedby\"], state.isInvalid ? (0, $1ae600c947479353$export$d5679492e2864181).get(state) : null, (0, $1ae600c947479353$export$a3077e9c93f7360f).get(state)].filter(Boolean).join(\" \") || undefined\n    }\n  };\n}\nexport { $406796ff087fe49b$export$e375f10ce42261c5 as useCheckbox, $1e9fce0cfacc738b$export$49ff6f28c54f1cbe as useCheckboxGroup, $fba3e38d5ca8983f$export$353b32fc6898d37d as useCheckboxGroupItem };","map":{"version":3,"names":["$406796ff087fe49b$export$e375f10ce42261c5","props","state","inputRef","inputProps","isSelected","isPressed","isDisabled","isReadOnly","isInvalid","$cKEhs$useToggle","isIndeterminate","$cKEhs$useEffect","current","indeterminate","checked","$1ae600c947479353$export$31440636951aa68c","WeakMap","$1ae600c947479353$export$a3077e9c93f7360f","$1ae600c947479353$export$d5679492e2864181","$1e9fce0cfacc738b$export$49ff6f28c54f1cbe","name","labelProps","fieldProps","descriptionProps","errorMessageProps","$cKEhs$useField","labelElementType","set","id","domProps","$cKEhs$filterDOMProps","labelable","groupProps","$cKEhs$mergeProps","role","undefined","$fba3e38d5ca8983f$export$353b32fc6898d37d","toggleState","$cKEhs$useToggleState","value","onChange","addValue","removeValue","res","get","filter","Boolean","join"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@react-aria/checkbox/dist/packages/@react-aria/checkbox/src/index.ts","/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@react-aria/checkbox/dist/packages/@react-aria/checkbox/src/useCheckbox.ts","/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@react-aria/checkbox/dist/packages/@react-aria/checkbox/src/useCheckboxGroup.ts","/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@react-aria/checkbox/dist/packages/@react-aria/checkbox/src/utils.ts","/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@react-aria/checkbox/dist/packages/@react-aria/checkbox/src/useCheckboxGroupItem.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport type {CheckboxAria} from './useCheckbox';\nexport {useCheckbox} from './useCheckbox';\nexport {useCheckboxGroup} from './useCheckboxGroup';\nexport {useCheckboxGroupItem} from './useCheckboxGroupItem';\nexport type {AriaCheckboxGroupItemProps, AriaCheckboxGroupProps, AriaCheckboxProps} from '@react-types/checkbox';\nexport type {CheckboxGroupAria} from './useCheckboxGroup';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxProps} from '@react-types/checkbox';\nimport {InputHTMLAttributes, RefObject, useEffect} from 'react';\nimport {ToggleState} from '@react-stately/toggle';\nimport {useToggle} from '@react-aria/toggle';\n\nexport interface CheckboxAria {\n  /** Props for the input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Whether the checkbox is selected. */\n  isSelected: boolean,\n  /** Whether the checkbox is in a pressed state. */\n  isPressed: boolean,\n  /** Whether the checkbox is disabled. */\n  isDisabled: boolean,\n  /** Whether the checkbox is read only. */\n  isReadOnly: boolean,\n  /** Whether the checkbox is invalid. */\n  isInvalid: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox component.\n * Checkboxes allow users to select multiple items from a list of individual items, or\n * to mark one individual item as selected.\n * @param props - Props for the checkbox.\n * @param state - State for the checkbox, as returned by `useToggleState`.\n * @param inputRef - A ref for the HTML input element.\n */\nexport function useCheckbox(props: AriaCheckboxProps, state: ToggleState, inputRef: RefObject<HTMLInputElement>): CheckboxAria {\n  let {inputProps, isSelected, isPressed, isDisabled, isReadOnly, isInvalid} = useToggle(props, state, inputRef);\n\n  let {isIndeterminate} = props;\n  useEffect(() => {\n    // indeterminate is a property, but it can only be set via javascript\n    // https://css-tricks.com/indeterminate-checkboxes/\n    if (inputRef.current) {\n      inputRef.current.indeterminate = isIndeterminate;\n    }\n  });\n\n  return {\n    inputProps: {\n      ...inputProps,\n      checked: isSelected\n    },\n    isSelected,\n    isPressed,\n    isDisabled,\n    isReadOnly,\n    isInvalid\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxGroupProps} from '@react-types/checkbox';\nimport {checkboxGroupDescriptionIds, checkboxGroupErrorMessageIds, checkboxGroupNames} from './utils';\nimport {CheckboxGroupState} from '@react-stately/checkbox';\nimport {DOMAttributes} from '@react-types/shared';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {useField} from '@react-aria/label';\n\nexport interface CheckboxGroupAria {\n  /** Props for the checkbox group wrapper element. */\n  groupProps: DOMAttributes,\n  /** Props for the checkbox group's visible label (if any). */\n  labelProps: DOMAttributes,\n  /** Props for the checkbox group description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the checkbox group error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox group component.\n * Checkbox groups allow users to select multiple items from a list of options.\n * @param props - Props for the checkbox group.\n * @param state - State for the checkbox group, as returned by `useCheckboxGroupState`.\n */\nexport function useCheckboxGroup(props: AriaCheckboxGroupProps, state: CheckboxGroupState): CheckboxGroupAria {\n  let {isDisabled, name} = props;\n\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    // Checkbox group is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span'\n  });\n  checkboxGroupDescriptionIds.set(state, descriptionProps.id);\n  checkboxGroupErrorMessageIds.set(state, errorMessageProps.id);\n\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  // Pass name prop from group to all items by attaching to the state.\n  checkboxGroupNames.set(state, name);\n\n  return {\n    groupProps: mergeProps(domProps, {\n      role: 'group',\n      'aria-disabled': isDisabled || undefined,\n      ...fieldProps\n    }),\n    labelProps,\n    descriptionProps,\n    errorMessageProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupState} from '@react-stately/checkbox';\n\nexport const checkboxGroupNames = new WeakMap<CheckboxGroupState, string>();\nexport const checkboxGroupDescriptionIds = new WeakMap<CheckboxGroupState, string>();\nexport const checkboxGroupErrorMessageIds = new WeakMap<CheckboxGroupState, string>();\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxGroupItemProps} from '@react-types/checkbox';\nimport {CheckboxAria, useCheckbox} from './useCheckbox';\nimport {checkboxGroupDescriptionIds, checkboxGroupErrorMessageIds, checkboxGroupNames} from './utils';\nimport {CheckboxGroupState} from '@react-stately/checkbox';\nimport {RefObject} from 'react';\nimport {useToggleState} from '@react-stately/toggle';\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox component contained within a checkbox group.\n * Checkbox groups allow users to select multiple items from a list of options.\n * @param props - Props for the checkbox.\n * @param state - State for the checkbox, as returned by `useCheckboxGroupState`.\n * @param inputRef - A ref for the HTML input element.\n */\nexport function useCheckboxGroupItem(props: AriaCheckboxGroupItemProps, state: CheckboxGroupState, inputRef: RefObject<HTMLInputElement>): CheckboxAria {\n  const toggleState = useToggleState({\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isSelected: state.isSelected(props.value),\n    onChange(isSelected) {\n      if (isSelected) {\n        state.addValue(props.value);\n      } else {\n        state.removeValue(props.value);\n      }\n\n      if (props.onChange) {\n        props.onChange(isSelected);\n      }\n    }\n  });\n\n  let res = useCheckbox({\n    ...props,\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isDisabled: props.isDisabled || state.isDisabled,\n    name: props.name || checkboxGroupNames.get(state)\n  }, toggleState, inputRef);\n\n  return {\n    ...res,\n    inputProps: {\n      ...res.inputProps,\n      'aria-describedby': [\n        props['aria-describedby'],\n        state.isInvalid ? checkboxGroupErrorMessageIds.get(state) : null,\n        checkboxGroupDescriptionIds.get(state)\n      ].filter(Boolean).join(' ') || undefined\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}