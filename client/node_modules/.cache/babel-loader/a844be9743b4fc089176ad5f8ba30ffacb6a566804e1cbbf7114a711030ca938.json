{"ast":null,"code":"import React from 'react';\nimport { CircleCheck, CircleCheckFill, CircleInfo, CircleInfoFill, CircleXmark, CircleXmarkFill, Thunderbolt, ThunderboltFill, TriangleExclamation, TriangleExclamationFill } from '@gravity-ui/icons';\nimport { Icon } from '../Icon';\nimport { colorText } from '../Text/colorText/colorText';\nimport { DEFAULT_ICON_SIZE, bAlert } from './constants';\nconst typeToIcon = {\n  danger: {\n    filled: CircleXmarkFill,\n    outlined: CircleXmark\n  },\n  info: {\n    filled: CircleInfoFill,\n    outlined: CircleInfo\n  },\n  positive: {\n    filled: CircleCheckFill,\n    outlined: CircleCheck\n  },\n  success: {\n    filled: CircleCheckFill,\n    outlined: CircleCheck\n  },\n  warning: {\n    filled: TriangleExclamationFill,\n    outlined: TriangleExclamation\n  },\n  utility: {\n    filled: ThunderboltFill,\n    outlined: Thunderbolt\n  },\n  normal: null\n};\nexport const AlertIcon = _ref => {\n  let {\n    className,\n    theme,\n    view = 'filled',\n    size = DEFAULT_ICON_SIZE\n  } = _ref;\n  const iconByTheme = typeToIcon[theme];\n  if (!iconByTheme) {\n    return null;\n  }\n  let color;\n  if (theme === 'success') {\n    color = 'positive';\n  } else if (theme !== 'normal') {\n    color = theme;\n  }\n  return React.createElement(\"div\", {\n    className: bAlert('icon', colorText({\n      color\n    }, className))\n  }, React.createElement(Icon, {\n    data: iconByTheme[view],\n    size: size\n  }));\n};","map":{"version":3,"names":["React","CircleCheck","CircleCheckFill","CircleInfo","CircleInfoFill","CircleXmark","CircleXmarkFill","Thunderbolt","ThunderboltFill","TriangleExclamation","TriangleExclamationFill","Icon","colorText","DEFAULT_ICON_SIZE","bAlert","typeToIcon","danger","filled","outlined","info","positive","success","warning","utility","normal","AlertIcon","_ref","className","theme","view","size","iconByTheme","color","createElement","data"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/Alert/AlertIcon.js"],"sourcesContent":["import React from 'react';\nimport { CircleCheck, CircleCheckFill, CircleInfo, CircleInfoFill, CircleXmark, CircleXmarkFill, Thunderbolt, ThunderboltFill, TriangleExclamation, TriangleExclamationFill, } from '@gravity-ui/icons';\nimport { Icon } from '../Icon';\nimport { colorText } from '../Text/colorText/colorText';\nimport { DEFAULT_ICON_SIZE, bAlert } from './constants';\nconst typeToIcon = {\n    danger: {\n        filled: CircleXmarkFill,\n        outlined: CircleXmark,\n    },\n    info: {\n        filled: CircleInfoFill,\n        outlined: CircleInfo,\n    },\n    positive: {\n        filled: CircleCheckFill,\n        outlined: CircleCheck,\n    },\n    success: {\n        filled: CircleCheckFill,\n        outlined: CircleCheck,\n    },\n    warning: {\n        filled: TriangleExclamationFill,\n        outlined: TriangleExclamation,\n    },\n    utility: {\n        filled: ThunderboltFill,\n        outlined: Thunderbolt,\n    },\n    normal: null,\n};\nexport const AlertIcon = ({ className, theme, view = 'filled', size = DEFAULT_ICON_SIZE, }) => {\n    const iconByTheme = typeToIcon[theme];\n    if (!iconByTheme) {\n        return null;\n    }\n    let color;\n    if (theme === 'success') {\n        color = 'positive';\n    }\n    else if (theme !== 'normal') {\n        color = theme;\n    }\n    return (React.createElement(\"div\", { className: bAlert('icon', colorText({ color }, className)) },\n        React.createElement(Icon, { data: iconByTheme[view], size: size })));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,eAAe,EAAEC,UAAU,EAAEC,cAAc,EAAEC,WAAW,EAAEC,eAAe,EAAEC,WAAW,EAAEC,eAAe,EAAEC,mBAAmB,EAAEC,uBAAuB,QAAS,mBAAmB;AACvM,SAASC,IAAI,QAAQ,SAAS;AAC9B,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,iBAAiB,EAAEC,MAAM,QAAQ,aAAa;AACvD,MAAMC,UAAU,GAAG;EACfC,MAAM,EAAE;IACJC,MAAM,EAAEX,eAAe;IACvBY,QAAQ,EAAEb;EACd,CAAC;EACDc,IAAI,EAAE;IACFF,MAAM,EAAEb,cAAc;IACtBc,QAAQ,EAAEf;EACd,CAAC;EACDiB,QAAQ,EAAE;IACNH,MAAM,EAAEf,eAAe;IACvBgB,QAAQ,EAAEjB;EACd,CAAC;EACDoB,OAAO,EAAE;IACLJ,MAAM,EAAEf,eAAe;IACvBgB,QAAQ,EAAEjB;EACd,CAAC;EACDqB,OAAO,EAAE;IACLL,MAAM,EAAEP,uBAAuB;IAC/BQ,QAAQ,EAAET;EACd,CAAC;EACDc,OAAO,EAAE;IACLN,MAAM,EAAET,eAAe;IACvBU,QAAQ,EAAEX;EACd,CAAC;EACDiB,MAAM,EAAE;AACZ,CAAC;AACD,OAAO,MAAMC,SAAS,GAAGC,IAAA,IAAsE;EAAA,IAArE;IAAEC,SAAS;IAAEC,KAAK;IAAEC,IAAI,GAAG,QAAQ;IAAEC,IAAI,GAAGjB;EAAmB,CAAC,GAAAa,IAAA;EACtF,MAAMK,WAAW,GAAGhB,UAAU,CAACa,KAAK,CAAC;EACrC,IAAI,CAACG,WAAW,EAAE;IACd,OAAO,IAAI;EACf;EACA,IAAIC,KAAK;EACT,IAAIJ,KAAK,KAAK,SAAS,EAAE;IACrBI,KAAK,GAAG,UAAU;EACtB,CAAC,MACI,IAAIJ,KAAK,KAAK,QAAQ,EAAE;IACzBI,KAAK,GAAGJ,KAAK;EACjB;EACA,OAAQ5B,KAAK,CAACiC,aAAa,CAAC,KAAK,EAAE;IAAEN,SAAS,EAAEb,MAAM,CAAC,MAAM,EAAEF,SAAS,CAAC;MAAEoB;IAAM,CAAC,EAAEL,SAAS,CAAC;EAAE,CAAC,EAC7F3B,KAAK,CAACiC,aAAa,CAACtB,IAAI,EAAE;IAAEuB,IAAI,EAAEH,WAAW,CAACF,IAAI,CAAC;IAAEC,IAAI,EAAEA;EAAK,CAAC,CAAC,CAAC;AAC3E,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}