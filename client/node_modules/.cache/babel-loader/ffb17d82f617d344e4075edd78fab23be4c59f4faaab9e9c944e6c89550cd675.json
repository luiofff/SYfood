{"ast":null,"code":"import React from 'react';\nimport { ChevronDown } from '@gravity-ui/icons';\nimport isEmpty from 'lodash/isEmpty';\nimport { Icon } from '../../../Icon';\nimport { selectControlBlock, selectControlButtonBlock } from '../../constants';\nimport { SelectClear } from '../SelectClear/SelectClear';\nimport './SelectControl.css';\nexport const SelectControl = React.forwardRef((props, ref) => {\n  const {\n    toggleOpen,\n    clearValue,\n    onKeyDown,\n    renderControl,\n    view,\n    size,\n    pin,\n    selectedOptionsContent,\n    className,\n    qa,\n    name,\n    label,\n    placeholder,\n    error,\n    open,\n    disabled,\n    value,\n    hasClear,\n    popupId,\n    selectId,\n    activeIndex\n  } = props;\n  const showOptionsText = Boolean(selectedOptionsContent);\n  const showPlaceholder = Boolean(placeholder && !showOptionsText);\n  const hasValue = Array.isArray(value) && !isEmpty(value.filter(Boolean));\n  const [isDisabledButtonAnimation, setIsDisabledButtonAnimation] = React.useState(false);\n  const controlMods = {\n    open,\n    size,\n    pin,\n    disabled,\n    error: Boolean(error),\n    'has-clear': hasClear,\n    'no-active': isDisabledButtonAnimation,\n    'has-value': hasValue\n  };\n  const buttonMods = {\n    open,\n    size,\n    view,\n    pin,\n    disabled,\n    error: Boolean(error)\n  };\n  const disableButtonAnimation = React.useCallback(() => {\n    setIsDisabledButtonAnimation(true);\n  }, []);\n  const enableButtonAnimation = React.useCallback(() => {\n    setIsDisabledButtonAnimation(false);\n  }, []);\n  const handleOnClearIconClick = React.useCallback(() => {\n    // return animation on clear click\n    setIsDisabledButtonAnimation(false);\n    clearValue();\n  }, [clearValue]);\n  const renderClearIcon = args => {\n    const hideOnEmpty = !(value === null || value === void 0 ? void 0 : value[0]);\n    if (!hasClear || !clearValue || hideOnEmpty || disabled) {\n      return null;\n    }\n    return React.createElement(SelectClear, {\n      size: size,\n      onClick: handleOnClearIconClick,\n      onMouseEnter: disableButtonAnimation,\n      onMouseLeave: enableButtonAnimation,\n      renderIcon: args.renderIcon\n    });\n  };\n  if (renderControl) {\n    return renderControl({\n      onKeyDown,\n      onClear: clearValue,\n      onClick: toggleOpen,\n      renderClear: arg => renderClearIcon(arg),\n      ref,\n      open: Boolean(open),\n      popupId,\n      selectId,\n      activeIndex\n    }, {\n      value\n    });\n  }\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: selectControlBlock(controlMods),\n    role: \"group\"\n  }, React.createElement(\"button\", {\n    ref: ref,\n    role: \"combobox\",\n    \"aria-controls\": popupId,\n    className: selectControlButtonBlock(buttonMods, className),\n    \"aria-haspopup\": \"listbox\",\n    \"aria-expanded\": open,\n    \"aria-activedescendant\": activeIndex === undefined ? undefined : \"\".concat(selectId, \"-list-item-\").concat(activeIndex),\n    name: name,\n    disabled: disabled,\n    onClick: toggleOpen,\n    onKeyDown: onKeyDown,\n    type: \"button\",\n    \"data-qa\": qa\n  }, label && React.createElement(\"span\", {\n    className: selectControlBlock('label')\n  }, label), showPlaceholder && React.createElement(\"span\", {\n    className: selectControlBlock('placeholder')\n  }, placeholder), showOptionsText && React.createElement(\"span\", {\n    className: selectControlBlock('option-text')\n  }, selectedOptionsContent)), renderClearIcon({}), React.createElement(Icon, {\n    className: selectControlBlock('chevron-icon', {\n      disabled\n    }),\n    data: ChevronDown,\n    \"aria-hidden\": \"true\"\n  })), typeof error === 'string' && React.createElement(\"div\", {\n    className: selectControlBlock('error')\n  }, error));\n});\nSelectControl.displayName = 'SelectControl';","map":{"version":3,"names":["React","ChevronDown","isEmpty","Icon","selectControlBlock","selectControlButtonBlock","SelectClear","SelectControl","forwardRef","props","ref","toggleOpen","clearValue","onKeyDown","renderControl","view","size","pin","selectedOptionsContent","className","qa","name","label","placeholder","error","open","disabled","value","hasClear","popupId","selectId","activeIndex","showOptionsText","Boolean","showPlaceholder","hasValue","Array","isArray","filter","isDisabledButtonAnimation","setIsDisabledButtonAnimation","useState","controlMods","buttonMods","disableButtonAnimation","useCallback","enableButtonAnimation","handleOnClearIconClick","renderClearIcon","args","hideOnEmpty","createElement","onClick","onMouseEnter","onMouseLeave","renderIcon","onClear","renderClear","arg","Fragment","role","undefined","concat","type","data","displayName"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/Select/components/SelectControl/SelectControl.js"],"sourcesContent":["import React from 'react';\nimport { ChevronDown } from '@gravity-ui/icons';\nimport isEmpty from 'lodash/isEmpty';\nimport { Icon } from '../../../Icon';\nimport { selectControlBlock, selectControlButtonBlock } from '../../constants';\nimport { SelectClear } from '../SelectClear/SelectClear';\nimport './SelectControl.css';\nexport const SelectControl = React.forwardRef((props, ref) => {\n    const { toggleOpen, clearValue, onKeyDown, renderControl, view, size, pin, selectedOptionsContent, className, qa, name, label, placeholder, error, open, disabled, value, hasClear, popupId, selectId, activeIndex, } = props;\n    const showOptionsText = Boolean(selectedOptionsContent);\n    const showPlaceholder = Boolean(placeholder && !showOptionsText);\n    const hasValue = Array.isArray(value) && !isEmpty(value.filter(Boolean));\n    const [isDisabledButtonAnimation, setIsDisabledButtonAnimation] = React.useState(false);\n    const controlMods = {\n        open,\n        size,\n        pin,\n        disabled,\n        error: Boolean(error),\n        'has-clear': hasClear,\n        'no-active': isDisabledButtonAnimation,\n        'has-value': hasValue,\n    };\n    const buttonMods = {\n        open,\n        size,\n        view,\n        pin,\n        disabled,\n        error: Boolean(error),\n    };\n    const disableButtonAnimation = React.useCallback(() => {\n        setIsDisabledButtonAnimation(true);\n    }, []);\n    const enableButtonAnimation = React.useCallback(() => {\n        setIsDisabledButtonAnimation(false);\n    }, []);\n    const handleOnClearIconClick = React.useCallback(() => {\n        // return animation on clear click\n        setIsDisabledButtonAnimation(false);\n        clearValue();\n    }, [clearValue]);\n    const renderClearIcon = (args) => {\n        const hideOnEmpty = !(value === null || value === void 0 ? void 0 : value[0]);\n        if (!hasClear || !clearValue || hideOnEmpty || disabled) {\n            return null;\n        }\n        return (React.createElement(SelectClear, { size: size, onClick: handleOnClearIconClick, onMouseEnter: disableButtonAnimation, onMouseLeave: enableButtonAnimation, renderIcon: args.renderIcon }));\n    };\n    if (renderControl) {\n        return renderControl({\n            onKeyDown,\n            onClear: clearValue,\n            onClick: toggleOpen,\n            renderClear: (arg) => renderClearIcon(arg),\n            ref,\n            open: Boolean(open),\n            popupId,\n            selectId,\n            activeIndex,\n        }, { value });\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: selectControlBlock(controlMods), role: \"group\" },\n            React.createElement(\"button\", { ref: ref, role: \"combobox\", \"aria-controls\": popupId, className: selectControlButtonBlock(buttonMods, className), \"aria-haspopup\": \"listbox\", \"aria-expanded\": open, \"aria-activedescendant\": activeIndex === undefined\n                    ? undefined\n                    : `${selectId}-list-item-${activeIndex}`, name: name, disabled: disabled, onClick: toggleOpen, onKeyDown: onKeyDown, type: \"button\", \"data-qa\": qa },\n                label && React.createElement(\"span\", { className: selectControlBlock('label') }, label),\n                showPlaceholder && (React.createElement(\"span\", { className: selectControlBlock('placeholder') }, placeholder)),\n                showOptionsText && (React.createElement(\"span\", { className: selectControlBlock('option-text') }, selectedOptionsContent))),\n            renderClearIcon({}),\n            React.createElement(Icon, { className: selectControlBlock('chevron-icon', { disabled }), data: ChevronDown, \"aria-hidden\": \"true\" })),\n        typeof error === 'string' && (React.createElement(\"div\", { className: selectControlBlock('error') }, error))));\n});\nSelectControl.displayName = 'SelectControl';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}