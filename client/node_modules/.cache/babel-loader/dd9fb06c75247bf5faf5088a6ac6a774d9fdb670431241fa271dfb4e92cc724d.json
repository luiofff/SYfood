{"ast":null,"code":"import React from 'react';\nimport { TriangleExclamation } from '@gravity-ui/icons';\nimport { useForkRef, useUniqId } from '../../../hooks';\nimport { useElementSize } from '../../../hooks/private';\nimport { Icon } from '../../Icon';\nimport { Popover } from '../../Popover';\nimport { block } from '../../utils/cn';\nimport { ClearButton, mapTextInputSizeToButtonSize } from '../common';\nimport { OuterAdditionalContent } from '../common/OuterAdditionalContent/OuterAdditionalContent';\nimport { CONTROL_ERROR_ICON_QA, errorPropsMapper, getInputControlState, prepareAutoComplete } from '../utils';\nimport { AdditionalContent } from './AdditionalContent';\nimport { TextInputControl } from './TextInputControl';\nimport './TextInput.css';\nconst b = block('text-input');\n// eslint-disable-next-line complexity\nexport const TextInput = React.forwardRef(function TextInput(props, ref) {\n  const {\n    view = 'normal',\n    size = 'm',\n    pin = 'round-round',\n    name,\n    value,\n    defaultValue,\n    label,\n    disabled = false,\n    hasClear = false,\n    error,\n    errorMessage: errorMessageProp,\n    errorPlacement: errorPlacementProp = 'outside',\n    validationState: validationStateProp,\n    autoComplete,\n    id: originalId,\n    tabIndex,\n    style,\n    className,\n    qa,\n    controlProps: originalControlProps,\n    leftContent,\n    rightContent,\n    note,\n    onUpdate,\n    onChange\n  } = props;\n  const {\n    errorMessage,\n    errorPlacement,\n    validationState\n  } = errorPropsMapper({\n    error,\n    errorMessage: errorMessageProp,\n    errorPlacement: errorPlacementProp,\n    validationState: validationStateProp\n  });\n  const [uncontrolledValue, setUncontrolledValue] = React.useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : '');\n  const innerControlRef = React.useRef(null);\n  const handleRef = useForkRef(props.controlRef, innerControlRef);\n  const labelRef = React.useRef(null);\n  const leftContentRef = React.useRef(null);\n  const state = getInputControlState(validationState);\n  const isControlled = value !== undefined;\n  const inputValue = isControlled ? value : uncontrolledValue;\n  const isLabelVisible = Boolean(label);\n  const isErrorMsgVisible = validationState === 'invalid' && Boolean(errorMessage) && errorPlacement === 'outside';\n  const isErrorIconVisible = validationState === 'invalid' && Boolean(errorMessage) && errorPlacement === 'inside';\n  const isClearControlVisible = Boolean(hasClear && !disabled && inputValue);\n  const isLeftContentVisible = Boolean(leftContent);\n  const isRightContentVisible = Boolean(rightContent);\n  const isAutoCompleteOff = isLabelVisible && !originalId && !name && typeof autoComplete === 'undefined';\n  const innerId = useUniqId();\n  const id = isLabelVisible ? originalId || innerId : originalId;\n  const labelSize = useElementSize(isLabelVisible ? labelRef : null, size);\n  const leftContentSize = useElementSize(isLeftContentVisible ? leftContentRef : null, size);\n  const errorMessageId = useUniqId();\n  const noteId = useUniqId();\n  const ariaDescribedBy = [originalControlProps === null || originalControlProps === void 0 ? void 0 : originalControlProps['aria-describedby'], note ? noteId : undefined, isErrorMsgVisible ? errorMessageId : undefined].filter(Boolean).join(' ');\n  const controlProps = Object.assign(Object.assign({}, originalControlProps), {\n    style: Object.assign(Object.assign({}, originalControlProps === null || originalControlProps === void 0 ? void 0 : originalControlProps.style), isLabelVisible && labelSize.width ? {\n      paddingLeft: `${labelSize.width}px`\n    } : {}),\n    'aria-invalid': validationState === 'invalid' || undefined,\n    'aria-describedby': ariaDescribedBy || undefined\n  });\n  const commonProps = {\n    id,\n    tabIndex,\n    name,\n    onChange(event) {\n      const newValue = event.target.value;\n      if (!isControlled) {\n        setUncontrolledValue(newValue);\n      }\n      if (onChange) {\n        onChange(event);\n      }\n      if (onUpdate) {\n        onUpdate(newValue);\n      }\n    },\n    autoComplete: isAutoCompleteOff ? 'off' : prepareAutoComplete(autoComplete),\n    controlProps\n  };\n  const handleClear = event => {\n    const control = innerControlRef.current;\n    if (control) {\n      control.focus();\n      const syntheticEvent = Object.create(event);\n      syntheticEvent.target = control;\n      syntheticEvent.currentTarget = control;\n      control.value = '';\n      if (onChange) {\n        onChange(syntheticEvent);\n      }\n      if (onUpdate) {\n        onUpdate('');\n      }\n    }\n    if (!isControlled) {\n      setUncontrolledValue('');\n    }\n  };\n  const handleAdditionalContentClick = event => {\n    var _a, _b;\n    const hasActiveElement = event.currentTarget.contains(document.activeElement);\n    const hasSelection = Boolean((_a = document.getSelection()) === null || _a === void 0 ? void 0 : _a.toString());\n    if (!hasActiveElement && !hasSelection) {\n      (_b = innerControlRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n    }\n  };\n  return React.createElement(\"span\", {\n    ref: ref,\n    style: style,\n    className: b({\n      view,\n      size,\n      disabled,\n      state,\n      pin: view === 'clear' ? undefined : pin,\n      'has-clear': isClearControlVisible,\n      'has-left-content': isLeftContentVisible,\n      'has-right-content': isClearControlVisible || isRightContentVisible\n    }, className),\n    \"data-qa\": qa\n  }, React.createElement(\"span\", {\n    className: b('content')\n  }, isLeftContentVisible && React.createElement(AdditionalContent, {\n    ref: leftContentRef,\n    placement: \"left\",\n    onClick: handleAdditionalContentClick\n  }, leftContent), isLabelVisible && React.createElement(\"label\", {\n    ref: labelRef,\n    style: {\n      left: isLeftContentVisible ? leftContentSize.width : undefined,\n      maxWidth: `calc(50% - ${leftContentSize.width}px)`\n    },\n    className: b('label'),\n    title: label,\n    htmlFor: id\n  }, `${label}`), React.createElement(TextInputControl, Object.assign({}, props, commonProps, {\n    controlRef: handleRef\n  })), isClearControlVisible && React.createElement(ClearButton, {\n    size: mapTextInputSizeToButtonSize(size),\n    onClick: handleClear,\n    className: b('clear')\n  }), isRightContentVisible && React.createElement(AdditionalContent, {\n    placement: \"right\",\n    onClick: handleAdditionalContentClick\n  }, rightContent), isErrorIconVisible && React.createElement(Popover, {\n    content: errorMessage\n  }, React.createElement(\"span\", {\n    \"data-qa\": CONTROL_ERROR_ICON_QA\n  }, React.createElement(Icon, {\n    data: TriangleExclamation,\n    className: b('error-icon'),\n    size: size === 's' ? 12 : 16\n  })))), React.createElement(OuterAdditionalContent, {\n    note: note,\n    errorMessage: isErrorMsgVisible ? errorMessage : null,\n    noteId: noteId,\n    errorMessageId: errorMessageId\n  }));\n});","map":{"version":3,"names":["React","TriangleExclamation","useForkRef","useUniqId","useElementSize","Icon","Popover","block","ClearButton","mapTextInputSizeToButtonSize","OuterAdditionalContent","CONTROL_ERROR_ICON_QA","errorPropsMapper","getInputControlState","prepareAutoComplete","AdditionalContent","TextInputControl","b","TextInput","forwardRef","props","ref","view","size","pin","name","value","defaultValue","label","disabled","hasClear","error","errorMessage","errorMessageProp","errorPlacement","errorPlacementProp","validationState","validationStateProp","autoComplete","id","originalId","tabIndex","style","className","qa","controlProps","originalControlProps","leftContent","rightContent","note","onUpdate","onChange","uncontrolledValue","setUncontrolledValue","useState","innerControlRef","useRef","handleRef","controlRef","labelRef","leftContentRef","state","isControlled","undefined","inputValue","isLabelVisible","Boolean","isErrorMsgVisible","isErrorIconVisible","isClearControlVisible","isLeftContentVisible","isRightContentVisible","isAutoCompleteOff","innerId","labelSize","leftContentSize","errorMessageId","noteId","ariaDescribedBy","filter","join","Object","assign","width","paddingLeft","commonProps","event","newValue","target","handleClear","control","current","focus","syntheticEvent","create","currentTarget","handleAdditionalContentClick","_a","_b","hasActiveElement","contains","document","activeElement","hasSelection","getSelection","toString","createElement","placement","onClick","left","maxWidth","title","htmlFor","content","data"],"sources":["/Users/ilaulanov/Documents/SynopsisYard/SYfood/client/node_modules/@gravity-ui/uikit/build/esm/components/controls/TextInput/TextInput.js"],"sourcesContent":["import React from 'react';\nimport { TriangleExclamation } from '@gravity-ui/icons';\nimport { useForkRef, useUniqId } from '../../../hooks';\nimport { useElementSize } from '../../../hooks/private';\nimport { Icon } from '../../Icon';\nimport { Popover } from '../../Popover';\nimport { block } from '../../utils/cn';\nimport { ClearButton, mapTextInputSizeToButtonSize } from '../common';\nimport { OuterAdditionalContent } from '../common/OuterAdditionalContent/OuterAdditionalContent';\nimport { CONTROL_ERROR_ICON_QA, errorPropsMapper, getInputControlState, prepareAutoComplete, } from '../utils';\nimport { AdditionalContent } from './AdditionalContent';\nimport { TextInputControl } from './TextInputControl';\nimport './TextInput.css';\nconst b = block('text-input');\n// eslint-disable-next-line complexity\nexport const TextInput = React.forwardRef(function TextInput(props, ref) {\n    const { view = 'normal', size = 'm', pin = 'round-round', name, value, defaultValue, label, disabled = false, hasClear = false, error, errorMessage: errorMessageProp, errorPlacement: errorPlacementProp = 'outside', validationState: validationStateProp, autoComplete, id: originalId, tabIndex, style, className, qa, controlProps: originalControlProps, leftContent, rightContent, note, onUpdate, onChange, } = props;\n    const { errorMessage, errorPlacement, validationState } = errorPropsMapper({\n        error,\n        errorMessage: errorMessageProp,\n        errorPlacement: errorPlacementProp,\n        validationState: validationStateProp,\n    });\n    const [uncontrolledValue, setUncontrolledValue] = React.useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : '');\n    const innerControlRef = React.useRef(null);\n    const handleRef = useForkRef(props.controlRef, innerControlRef);\n    const labelRef = React.useRef(null);\n    const leftContentRef = React.useRef(null);\n    const state = getInputControlState(validationState);\n    const isControlled = value !== undefined;\n    const inputValue = isControlled ? value : uncontrolledValue;\n    const isLabelVisible = Boolean(label);\n    const isErrorMsgVisible = validationState === 'invalid' && Boolean(errorMessage) && errorPlacement === 'outside';\n    const isErrorIconVisible = validationState === 'invalid' && Boolean(errorMessage) && errorPlacement === 'inside';\n    const isClearControlVisible = Boolean(hasClear && !disabled && inputValue);\n    const isLeftContentVisible = Boolean(leftContent);\n    const isRightContentVisible = Boolean(rightContent);\n    const isAutoCompleteOff = isLabelVisible && !originalId && !name && typeof autoComplete === 'undefined';\n    const innerId = useUniqId();\n    const id = isLabelVisible ? originalId || innerId : originalId;\n    const labelSize = useElementSize(isLabelVisible ? labelRef : null, size);\n    const leftContentSize = useElementSize(isLeftContentVisible ? leftContentRef : null, size);\n    const errorMessageId = useUniqId();\n    const noteId = useUniqId();\n    const ariaDescribedBy = [\n        originalControlProps === null || originalControlProps === void 0 ? void 0 : originalControlProps['aria-describedby'],\n        note ? noteId : undefined,\n        isErrorMsgVisible ? errorMessageId : undefined,\n    ]\n        .filter(Boolean)\n        .join(' ');\n    const controlProps = Object.assign(Object.assign({}, originalControlProps), { style: Object.assign(Object.assign({}, originalControlProps === null || originalControlProps === void 0 ? void 0 : originalControlProps.style), (isLabelVisible && labelSize.width ? { paddingLeft: `${labelSize.width}px` } : {})), 'aria-invalid': validationState === 'invalid' || undefined, 'aria-describedby': ariaDescribedBy || undefined });\n    const commonProps = {\n        id,\n        tabIndex,\n        name,\n        onChange(event) {\n            const newValue = event.target.value;\n            if (!isControlled) {\n                setUncontrolledValue(newValue);\n            }\n            if (onChange) {\n                onChange(event);\n            }\n            if (onUpdate) {\n                onUpdate(newValue);\n            }\n        },\n        autoComplete: isAutoCompleteOff ? 'off' : prepareAutoComplete(autoComplete),\n        controlProps,\n    };\n    const handleClear = (event) => {\n        const control = innerControlRef.current;\n        if (control) {\n            control.focus();\n            const syntheticEvent = Object.create(event);\n            syntheticEvent.target = control;\n            syntheticEvent.currentTarget = control;\n            control.value = '';\n            if (onChange) {\n                onChange(syntheticEvent);\n            }\n            if (onUpdate) {\n                onUpdate('');\n            }\n        }\n        if (!isControlled) {\n            setUncontrolledValue('');\n        }\n    };\n    const handleAdditionalContentClick = (event) => {\n        var _a, _b;\n        const hasActiveElement = event.currentTarget.contains(document.activeElement);\n        const hasSelection = Boolean((_a = document.getSelection()) === null || _a === void 0 ? void 0 : _a.toString());\n        if (!hasActiveElement && !hasSelection) {\n            (_b = innerControlRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n    };\n    return (React.createElement(\"span\", { ref: ref, style: style, className: b({\n            view,\n            size,\n            disabled,\n            state,\n            pin: view === 'clear' ? undefined : pin,\n            'has-clear': isClearControlVisible,\n            'has-left-content': isLeftContentVisible,\n            'has-right-content': isClearControlVisible || isRightContentVisible,\n        }, className), \"data-qa\": qa },\n        React.createElement(\"span\", { className: b('content') },\n            isLeftContentVisible && (React.createElement(AdditionalContent, { ref: leftContentRef, placement: \"left\", onClick: handleAdditionalContentClick }, leftContent)),\n            isLabelVisible && (React.createElement(\"label\", { ref: labelRef, style: {\n                    left: isLeftContentVisible ? leftContentSize.width : undefined,\n                    maxWidth: `calc(50% - ${leftContentSize.width}px)`,\n                }, className: b('label'), title: label, htmlFor: id }, `${label}`)),\n            React.createElement(TextInputControl, Object.assign({}, props, commonProps, { controlRef: handleRef })),\n            isClearControlVisible && (React.createElement(ClearButton, { size: mapTextInputSizeToButtonSize(size), onClick: handleClear, className: b('clear') })),\n            isRightContentVisible && (React.createElement(AdditionalContent, { placement: \"right\", onClick: handleAdditionalContentClick }, rightContent)),\n            isErrorIconVisible && (React.createElement(Popover, { content: errorMessage },\n                React.createElement(\"span\", { \"data-qa\": CONTROL_ERROR_ICON_QA },\n                    React.createElement(Icon, { data: TriangleExclamation, className: b('error-icon'), size: size === 's' ? 12 : 16 }))))),\n        React.createElement(OuterAdditionalContent, { note: note, errorMessage: isErrorMsgVisible ? errorMessage : null, noteId: noteId, errorMessageId: errorMessageId })));\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}