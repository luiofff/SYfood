import { Logger, Params, Pluralizer, KeysData, KeysetData } from './types';
export * from './types';
export declare class I18N {
    data: Record<string, KeysetData>;
    lang?: string;
    pluralizers: Record<string, Pluralizer>;
    logger: Logger | null;
    constructor(options?: {
        logger?: Logger;
    });
    setLang(lang: string): void;
    configurePluralization(pluralizers: Record<string, Pluralizer>): void;
    registerKeyset(lang: string, keysetName: string, data?: KeysData): void;
    registerKeysets(lang: string, data: KeysetData): void;
    has(keysetName: string, key: string, lang?: string): boolean;
    i18n(keysetName: string, key: string, params?: Params): string;
    keyset<TKey extends string = string>(keysetName: string): (key: TKey, params?: Params | undefined) => string;
    warn(msg: string, keyset?: string, key?: string): void;
    protected getLanguageData(lang?: string): KeysetData | undefined;
    protected getLanguagePluralizer(lang?: string): Pluralizer;
}
